{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v10.json", "dbt_version": "1.6.6", "generated_at": "2023-10-27T02:28:02.030228Z", "invocation_id": "9bbf287f-3e9d-4fcb-b867-56df8c8ebb1f", "env": {}, "project_name": "palpiteiro", "project_id": "cb1882ab9f166cde7c2ca1d629fe904b", "user_id": "0de7a070-d59f-4504-9449-3948beabb124", "send_anonymous_usage_stats": true, "adapter_type": "bigquery"}, "nodes": {"model.palpiteiro.fct_popular": {"database": "palpiteiro-main", "schema": "cartola", "name": "fct_popular", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/cartola/fct_popular.sql", "original_file_path": "models/mart/cartola/fct_popular.sql", "unique_id": "model.palpiteiro.fct_popular", "fqn": ["palpiteiro", "mart", "cartola", "fct_popular"], "alias": "fct_popular", "checksum": {"name": "sha256", "checksum": "f026c481c91e0ec9ea843a75cd6e6e7b8ec2dfd92b3abc199f69b6d7abfeaf16"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "20 most popular players on Cartola for each round.", "columns": {"play_id": {"name": "play_id", "description": "Play ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "player_id": {"name": "player_id", "description": "Player ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "Round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "drafts": {"name": "drafts", "description": "Number of users that drafted this player to their team", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "drafts_norm": {"name": "drafts_norm", "description": "Number of drafts related to the top 20 max.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373577.7286866, "relation_name": "`palpiteiro-main`.`cartola`.`fct_popular`", "raw_code": "WITH agg AS (\n    SELECT\n        season,\n        round,\n        MAX(drafts) AS drafts_max\n    FROM\n        {{ ref(\"stg_destaques_popular\") }}\n    GROUP BY\n        season, round\n)\n\nSELECT\n    p.play_id,\n    p.season,\n    p.round,\n    p.player_id,\n    p.drafts,\n    p.drafts / agg.drafts_max AS drafts_norm\nFROM\n    {{ ref(\"stg_destaques_popular\") }} AS p\nLEFT JOIN agg ON p.season = agg.season AND p.round = agg.round", "language": "sql", "refs": [{"name": "stg_destaques_popular", "package": null, "version": null}, {"name": "stg_destaques_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.stg_destaques_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/fct_popular.sql", "compiled": true, "compiled_code": "WITH agg AS (\n    SELECT\n        season,\n        round,\n        MAX(drafts) AS drafts_max\n    FROM\n        `palpiteiro-main`.`cartola`.`stg_destaques_popular`\n    GROUP BY\n        season, round\n)\n\nSELECT\n    p.play_id,\n    p.season,\n    p.round,\n    p.player_id,\n    p.drafts,\n    p.drafts / agg.drafts_max AS drafts_norm\nFROM\n    `palpiteiro-main`.`cartola`.`stg_destaques_popular` AS p\nLEFT JOIN agg ON p.season = agg.season AND p.round = agg.round", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_scoring": {"database": "palpiteiro-main", "schema": "cartola", "name": "fct_scoring", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/cartola/fct_scoring.sql", "original_file_path": "models/mart/cartola/fct_scoring.sql", "unique_id": "model.palpiteiro.fct_scoring", "fqn": ["palpiteiro", "mart", "cartola", "fct_scoring"], "alias": "fct_scoring", "checksum": {"name": "sha256", "checksum": "03d04669a292161466767110db1a7e57e15c2999c665aed7882e998e8756c71f"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola players scoring for each round", "columns": {"play_id": {"name": "play_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "player_id": {"name": "player_id", "description": "Player ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "Round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position": {"name": "position", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position_id": {"name": "position_id", "description": "Position ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "Status for the match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points": {"name": "total_points", "description": "Points scored the player in the match using most recent rules.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points": {"name": "offensive_points", "description": "Offensive points scored the player in the match using most recent rules.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points": {"name": "defensive_points", "description": "Defensive points scored the player in the match using most recent rules.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "played": {"name": "played", "description": "Indicates if the player played in the match.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "variation": {"name": "variation", "description": "Price variation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373577.7181213, "relation_name": "`palpiteiro-main`.`cartola`.`fct_scoring`", "raw_code": "WITH scoring AS (\n    SELECT\n        *,\n        {{ target.dataset }}.OFFENSIVE_POINTS_CARTOLA(\n            position,\n            goal,\n            assist,\n            yellow_card,\n            red_card,\n            missed_shoot,\n            on_post_shoot,\n            saved_shoot,\n            received_foul,\n            received_penalty,\n            missed_penalty,\n            outside,\n            missed_pass,\n            tackle,\n            foul,\n            penalty,\n            own_goal,\n            allowed_goal,\n            no_goal,\n            save,\n            penalty_save\n        ) AS offensive,\n        {{ target.dataset }}.DEFENSIVE_POINTS_CARTOLA(\n            position,\n            goal,\n            assist,\n            yellow_card,\n            red_card,\n            missed_shoot,\n            on_post_shoot,\n            saved_shoot,\n            received_foul,\n            received_penalty,\n            missed_penalty,\n            outside,\n            missed_pass,\n            tackle,\n            foul,\n            penalty,\n            own_goal,\n            allowed_goal,\n            no_goal,\n            save,\n            penalty_save\n        ) AS defensive\n    FROM\n        {{ ref(\"stg_pontuados_scoring\") }}\n),\n\npoint AS (\n    SELECT\n        play_id,\n        player_id,\n        round,\n        season,\n        played,\n        IF(played IS TRUE, ROUND(offensive, 1), NULL) AS offensive,\n        IF(played IS TRUE, ROUND(defensive, 1), NULL) AS defensive,\n        IF(played IS TRUE, ROUND(offensive + defensive, 1), NULL) AS total\n    FROM\n        scoring\n)\n\nSELECT\n    atl.play_id,\n    atl.player_id,\n    atl.season,\n    atl.round,\n    atl.club,\n    atl.position,\n    atl.position_id,\n    atl.status,\n    pnt.total AS total_points,\n    pnt.offensive AS offensive_points,\n    pnt.defensive AS defensive_points,\n    atl.price,\n    atl.variation,\n    CASE\n        WHEN atl.season = 2022 THEN COALESCE(pnt.played, FALSE)\n        ELSE COALESCE(pnt.total IS NOT NULL, FALSE)\n    END AS played\nFROM\n    {{ ref (\"stg_atletas_scoring\") }} AS atl\nLEFT JOIN\n    point AS pnt ON atl.play_id = pnt.play_id", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}, {"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.stg_pontuados_scoring", "model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/fct_scoring.sql", "compiled": true, "compiled_code": "WITH scoring AS (\n    SELECT\n        *,\n        palpiteiro.OFFENSIVE_POINTS_CARTOLA(\n            position,\n            goal,\n            assist,\n            yellow_card,\n            red_card,\n            missed_shoot,\n            on_post_shoot,\n            saved_shoot,\n            received_foul,\n            received_penalty,\n            missed_penalty,\n            outside,\n            missed_pass,\n            tackle,\n            foul,\n            penalty,\n            own_goal,\n            allowed_goal,\n            no_goal,\n            save,\n            penalty_save\n        ) AS offensive,\n        palpiteiro.DEFENSIVE_POINTS_CARTOLA(\n            position,\n            goal,\n            assist,\n            yellow_card,\n            red_card,\n            missed_shoot,\n            on_post_shoot,\n            saved_shoot,\n            received_foul,\n            received_penalty,\n            missed_penalty,\n            outside,\n            missed_pass,\n            tackle,\n            foul,\n            penalty,\n            own_goal,\n            allowed_goal,\n            no_goal,\n            save,\n            penalty_save\n        ) AS defensive\n    FROM\n        `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\n),\n\npoint AS (\n    SELECT\n        play_id,\n        player_id,\n        round,\n        season,\n        played,\n        IF(played IS TRUE, ROUND(offensive, 1), NULL) AS offensive,\n        IF(played IS TRUE, ROUND(defensive, 1), NULL) AS defensive,\n        IF(played IS TRUE, ROUND(offensive + defensive, 1), NULL) AS total\n    FROM\n        scoring\n)\n\nSELECT\n    atl.play_id,\n    atl.player_id,\n    atl.season,\n    atl.round,\n    atl.club,\n    atl.position,\n    atl.position_id,\n    atl.status,\n    pnt.total AS total_points,\n    pnt.offensive AS offensive_points,\n    pnt.defensive AS defensive_points,\n    atl.price,\n    atl.variation,\n    CASE\n        WHEN atl.season = 2022 THEN COALESCE(pnt.played, FALSE)\n        ELSE COALESCE(pnt.total IS NOT NULL, FALSE)\n    END AS played\nFROM\n    `palpiteiro-main`.`cartola`.`stg_atletas_scoring` AS atl\nLEFT JOIN\n    point AS pnt ON atl.play_id = pnt.play_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_match": {"database": "palpiteiro-main", "schema": "cartola", "name": "fct_match", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/cartola/fct_match.sql", "original_file_path": "models/mart/cartola/fct_match.sql", "unique_id": "model.palpiteiro.fct_match", "fqn": ["palpiteiro", "mart", "cartola", "fct_match"], "alias": "fct_match", "checksum": {"name": "sha256", "checksum": "f6ce19df4d3e9f12b17a13f917fc112755a537eb12842f0627edc39919b96cf9"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola matches", "columns": {"season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "Round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "UTC date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid": {"name": "valid", "description": "Is valid for this Cartola round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opponent": {"name": "opponent", "description": "Opponent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "home": {"name": "home", "description": "Home", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373577.7226868, "relation_name": "`palpiteiro-main`.`cartola`.`fct_match`", "raw_code": "WITH mat AS (\n    SELECT\n        season,\n        round,\n        timestamp,\n        valid,\n        home AS club,\n        away AS opponent,\n        TRUE AS home\n    FROM\n        {{ ref ('stg_partidas_match') }}\n),\n\ninv AS (\n    SELECT\n        season,\n        round,\n        timestamp,\n        valid,\n        club AS opponent,\n        opponent AS club,\n        FALSE AS home\n    FROM\n        mat\n)\n\nSELECT\n    season,\n    round,\n    timestamp,\n    valid,\n    club,\n    opponent,\n    home\nFROM\n    mat\nUNION ALL\nSELECT\n    season,\n    round,\n    timestamp,\n    valid,\n    club,\n    opponent,\n    home\nFROM\n    inv", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/fct_match.sql", "compiled": true, "compiled_code": "WITH mat AS (\n    SELECT\n        season,\n        round,\n        timestamp,\n        valid,\n        home AS club,\n        away AS opponent,\n        TRUE AS home\n    FROM\n        `palpiteiro-main`.`cartola`.`stg_partidas_match`\n),\n\ninv AS (\n    SELECT\n        season,\n        round,\n        timestamp,\n        valid,\n        club AS opponent,\n        opponent AS club,\n        FALSE AS home\n    FROM\n        mat\n)\n\nSELECT\n    season,\n    round,\n    timestamp,\n    valid,\n    club,\n    opponent,\n    home\nFROM\n    mat\nUNION ALL\nSELECT\n    season,\n    round,\n    timestamp,\n    valid,\n    club,\n    opponent,\n    home\nFROM\n    inv", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.dim_player": {"database": "palpiteiro-main", "schema": "cartola", "name": "dim_player", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/cartola/dim_player.sql", "original_file_path": "models/mart/cartola/dim_player.sql", "unique_id": "model.palpiteiro.dim_player", "fqn": ["palpiteiro", "mart", "cartola", "dim_player"], "alias": "dim_player", "checksum": {"name": "sha256", "checksum": "2b8852c9785f4cb0e1dcf8dac221780d4b73d3175f7c9fab0039fd79cd9b9e53"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola players", "columns": {"player_id": {"name": "player_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slug": {"name": "slug", "description": "Slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nickname": {"name": "nickname", "description": "Nickname", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "short_nickname": {"name": "short_nickname", "description": "Nickname", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "photo": {"name": "photo", "description": "Photo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373577.7261674, "relation_name": "`palpiteiro-main`.`cartola`.`dim_player`", "raw_code": "SELECT\n    player_id,\n    nickname,\n    photo,\n    slug,\n    short_nickname\nFROM\n    {{ ref (\"stg_atletas_player\") }}", "language": "sql", "refs": [{"name": "stg_atletas_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.stg_atletas_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/dim_player.sql", "compiled": true, "compiled_code": "SELECT\n    player_id,\n    nickname,\n    photo,\n    slug,\n    short_nickname\nFROM\n    `palpiteiro-main`.`cartola`.`stg_atletas_player`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_h2h": {"database": "palpiteiro-main", "schema": "odds", "name": "fct_h2h", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/odds/fct_h2h.sql", "original_file_path": "models/mart/odds/fct_h2h.sql", "unique_id": "model.palpiteiro.fct_h2h", "fqn": ["palpiteiro", "mart", "odds", "fct_h2h"], "alias": "fct_h2h", "checksum": {"name": "sha256", "checksum": "caaf230cdd2df827ad1ed13e2916ca7e418661d945efcb52b753b776d34aaca1"}, "config": {"enabled": true, "alias": null, "schema": "odds", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Brasileir\u00e3o betting odds", "columns": {"season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Match timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opponent": {"name": "opponent", "description": "Opponent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_club": {"name": "avg_club", "description": "Club average odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_opponent": {"name": "avg_opponent", "description": "Opponent average odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_draw": {"name": "avg_draw", "description": "Draw average odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/odds/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "odds"}, "created_at": 1698373577.920125, "relation_name": "`palpiteiro-main`.`odds`.`fct_h2h`", "raw_code": "WITH h2h AS (\n    SELECT\n        h2h.season,\n        h2h.timestamp,\n        h2h.home AS club,\n        h2h.away AS opponent,\n        h2h.avg_home AS avg_club,\n        h2h.avg_away AS avg_opponent,\n        h2h.avg_draw AS avg_draw\n    FROM\n        {{ ref(\"stg_brasileirao_h2h\") }} AS h2h\n),\n\ninv AS (\n    SELECT\n        season,\n        timestamp,\n        opponent AS club,\n        club AS opponent,\n        avg_opponent AS avg_club,\n        avg_club AS avg_opponent,\n        avg_draw\n    FROM\n        h2h\n)\n\nSELECT\n    season,\n    timestamp,\n    club,\n    opponent,\n    avg_club,\n    avg_opponent,\n    avg_draw\nFROM\n    h2h\nUNION ALL\nSELECT\n    season,\n    timestamp,\n    club,\n    opponent,\n    avg_club,\n    avg_opponent,\n    avg_draw\nFROM\n    inv", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/odds/fct_h2h.sql", "compiled": true, "compiled_code": "WITH h2h AS (\n    SELECT\n        h2h.season,\n        h2h.timestamp,\n        h2h.home AS club,\n        h2h.away AS opponent,\n        h2h.avg_home AS avg_club,\n        h2h.avg_away AS avg_opponent,\n        h2h.avg_draw AS avg_draw\n    FROM\n        `palpiteiro-main`.`odds`.`stg_brasileirao_h2h` AS h2h\n),\n\ninv AS (\n    SELECT\n        season,\n        timestamp,\n        opponent AS club,\n        club AS opponent,\n        avg_opponent AS avg_club,\n        avg_club AS avg_opponent,\n        avg_draw\n    FROM\n        h2h\n)\n\nSELECT\n    season,\n    timestamp,\n    club,\n    opponent,\n    avg_club,\n    avg_opponent,\n    avg_draw\nFROM\n    h2h\nUNION ALL\nSELECT\n    season,\n    timestamp,\n    club,\n    opponent,\n    avg_club,\n    avg_opponent,\n    avg_draw\nFROM\n    inv", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.dim_player_last": {"database": "palpiteiro-main", "schema": "palpiteiro", "name": "dim_player_last", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/palpiteiro/dim_player_last.sql", "original_file_path": "models/mart/palpiteiro/dim_player_last.sql", "unique_id": "model.palpiteiro.dim_player_last", "fqn": ["palpiteiro", "mart", "palpiteiro", "dim_player_last"], "alias": "dim_player_last", "checksum": {"name": "sha256", "checksum": "edc7c76da4964e5446206dad39aef680e53be5ca00b64634ee83ac5fc7096788"}, "config": {"enabled": true, "alias": null, "schema": "palpiteiro", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Players data for the latest round", "columns": {"id": {"name": "id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Match starting timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "name": {"name": "name", "description": "Player name", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "photo": {"name": "photo", "description": "Player photo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Player club slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club_badge": {"name": "club_badge", "description": "Player club badge", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position": {"name": "position", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_cartola": {"name": "price_cartola", "description": "Cartola price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_cartola_express": {"name": "price_cartola_express", "description": "Cartola Express price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Predicted total points", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "materialized_at": {"name": "materialized_at", "description": "Materialization timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/palpiteiro/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "schema": "palpiteiro"}, "created_at": 1698373577.9755135, "relation_name": "`palpiteiro-main`.`palpiteiro`.`dim_player_last`", "raw_code": "SELECT\n    fct.player_id AS id,\n    fct.timestamp,\n    dim.short_nickname AS name, -- noqa: L029\n    dim.photo,\n    clb.slug AS club,\n    clb.badge60 AS club_badge,\n    fct.position,\n    fct.price_cartola,\n    fct.price_cartola_express,\n    {{ target.dataset }}.PREDICT_POINTS(TO_JSON(fct)) AS points, -- noqa: L027, L016\n    CURRENT_TIMESTAMP AS materialized_at\nFROM\n    {{ ref(\"fct_player\") }} AS fct\nLEFT JOIN {{ ref(\"dim_player\") }} AS dim ON fct.player_id = dim.player_id\nLEFT JOIN {{ ref(\"dim_club\") }} AS clb ON fct.club = clb.slug\nWHERE\n    {{ target.dataset }}.ALL_TIME_ROUND(\n        fct.season, fct.round\n    ) = (\n        SELECT\n            MAX({{ target.dataset }}.ALL_TIME_ROUND(season, round))\n        FROM {{ ref(\"fct_match\") }}\n    )\n    AND fct.valid IS TRUE\n    AND fct.status = 'expected'", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}, {"name": "dim_player", "package": null, "version": null}, {"name": "dim_club", "package": null, "version": null}, {"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_player", "model.palpiteiro.dim_player", "seed.palpiteiro.dim_club", "model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/dim_player_last.sql", "compiled": true, "compiled_code": "SELECT\n    fct.player_id AS id,\n    fct.timestamp,\n    dim.short_nickname AS name, -- noqa: L029\n    dim.photo,\n    clb.slug AS club,\n    clb.badge60 AS club_badge,\n    fct.position,\n    fct.price_cartola,\n    fct.price_cartola_express,\n    palpiteiro.PREDICT_POINTS(TO_JSON(fct)) AS points, -- noqa: L027, L016\n    CURRENT_TIMESTAMP AS materialized_at\nFROM\n    `palpiteiro-main`.`palpiteiro`.`fct_player` AS fct\nLEFT JOIN `palpiteiro-main`.`cartola`.`dim_player` AS dim ON fct.player_id = dim.player_id\nLEFT JOIN `palpiteiro-main`.`cartola`.`dim_club` AS clb ON fct.club = clb.slug\nWHERE\n    palpiteiro.ALL_TIME_ROUND(\n        fct.season, fct.round\n    ) = (\n        SELECT\n            MAX(palpiteiro.ALL_TIME_ROUND(season, round))\n        FROM `palpiteiro-main`.`cartola`.`fct_match`\n    )\n    AND fct.valid IS TRUE\n    AND fct.status = 'expected'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_player": {"database": "palpiteiro-main", "schema": "palpiteiro", "name": "fct_player", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/palpiteiro/fct_player.sql", "original_file_path": "models/mart/palpiteiro/fct_player.sql", "unique_id": "model.palpiteiro.fct_player", "fqn": ["palpiteiro", "mart", "palpiteiro", "fct_player"], "alias": "fct_player", "checksum": {"name": "sha256", "checksum": "70796ac163fa671dcfb9c4cec6c86b2bec4d1bae1c9841cb73d0a7f61156f743"}, "config": {"enabled": true, "alias": null, "schema": "palpiteiro", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Players data for each round", "columns": {"play_id": {"name": "play_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "player_id": {"name": "player_id", "description": "Player ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "Round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Match starting timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Club's slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid": {"name": "valid", "description": "Match is valid for Cartola", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_cartola": {"name": "price_cartola", "description": "Cartola price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price_cartola_express": {"name": "price_cartola_express", "description": "Cartola Express price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position": {"name": "position", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position_id": {"name": "position_id", "description": "Position ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "Status for the match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "played": {"name": "played", "description": "Indicates if the player played in this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points": {"name": "total_points", "description": "Total points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points": {"name": "offensive_points", "description": "Offensive points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points": {"name": "defensive_points", "description": "Defensive points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tier": {"name": "tier", "description": "Total points tier this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_club": {"name": "spi_club", "description": "Club's soccer power index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_opponent": {"name": "spi_opponent", "description": "Opponent's soccer power index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_club": {"name": "prob_club", "description": "Club's win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_opponent": {"name": "prob_opponent", "description": "Opponent's win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_tie": {"name": "prob_tie", "description": "Tie probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_club": {"name": "importance_club", "description": "Club's match importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_opponent": {"name": "importance_opponent", "description": "Opponent's match importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_club": {"name": "proj_score_club", "description": "Club's projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_opponent": {"name": "proj_score_opponent", "description": "Opponent's projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_club_last_19": {"name": "valid_club_last_19", "description": "Amount of club's valid matches in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_opponent_last_19": {"name": "valid_opponent_last_19", "description": "Amount of opponent's valid matches in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_club_last_19": {"name": "total_points_club_last_19", "description": "Club's average total points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_club_last_19": {"name": "offensive_points_club_last_19", "description": "Club's average offensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_club_last_19": {"name": "defensive_points_club_last_19", "description": "Club's average defensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_allowed_points_opponent_last_19": {"name": "total_allowed_points_opponent_last_19", "description": "Opponent's average allowed total points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_allowed_points_opponent_last_19": {"name": "offensive_allowed_points_opponent_last_19", "description": "Opponent's average allowed offensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_allowed_points_opponent_last_19": {"name": "defensive_allowed_points_opponent_last_19", "description": "Opponent's average allowed defensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_club_last_5": {"name": "valid_club_last_5", "description": "Amount of club's valid matches in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_opponent_last_5": {"name": "valid_opponent_last_5", "description": "Amount of opponent's valid matches in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_club_last_5": {"name": "total_points_club_last_5", "description": "Club's average total points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_club_last_5": {"name": "offensive_points_club_last_5", "description": "Club's average offensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_club_last_5": {"name": "defensive_points_club_last_5", "description": "Club's average defensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_allowed_points_opponent_last_5": {"name": "total_allowed_points_opponent_last_5", "description": "Opponent's average allowed total points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_allowed_points_opponent_last_5": {"name": "offensive_allowed_points_opponent_last_5", "description": "Opponent's average allowed offensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_allowed_points_opponent_last_5": {"name": "defensive_allowed_points_opponent_last_5", "description": "Opponent's average allowed defensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_odds_club": {"name": "avg_odds_club", "description": "Average club's win odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_odds_opponent": {"name": "avg_odds_opponent", "description": "Average opponent's win odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_odds_draw": {"name": "avg_odds_draw", "description": "Average draw odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "played_last_19": {"name": "played_last_19", "description": "Amount of times that the player played in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_last_19": {"name": "total_points_last_19", "description": "Player's average total points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_last_19": {"name": "offensive_points_last_19", "description": "Player's average offensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_last_19": {"name": "defensive_points_last_19", "description": "Player's average defensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "played_last_5": {"name": "played_last_5", "description": "Amount of times that the player played in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_last_5": {"name": "total_points_last_5", "description": "Player's average total points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_last_5": {"name": "offensive_points_last_5", "description": "Player's average offensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_last_5": {"name": "defensive_points_last_5", "description": "Player's average defensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "drafts": {"name": "drafts", "description": "Number of users that drafted this player to their team", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "drafts_norm": {"name": "drafts_norm", "description": "Number of drafts related to the top 20 max.", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/palpiteiro/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "palpiteiro"}, "created_at": 1698373577.9703355, "relation_name": "`palpiteiro-main`.`palpiteiro`.`fct_player`", "raw_code": "WITH bins AS (\n    SELECT\n        season,\n        round,\n        total_points,\n        NTILE(\n            2\n        ) OVER (\n            PARTITION BY season, round, played ORDER BY total_points ASC\n        ) - 1 AS tier\n    FROM\n        {{ ref (\"fct_scoring\") }}\n    WHERE\n        status = 'expected'\n        AND played IS TRUE\n),\n\ntiers AS (\n    SELECT\n        season,\n        round,\n        tier,\n        MIN(total_points) AS lower_bound,\n        MAX(total_points) AS upper_bound\n    FROM\n        bins\n    GROUP BY\n        season, round, tier\n),\n\ntiers_fixed AS (\n    SELECT\n        this.season,\n        this.round,\n        this.tier,\n        this.upper_bound,\n        IF(\n            this.lower_bound = prev.upper_bound,\n            this.lower_bound + 0.1,\n            this.lower_bound\n        ) AS lower_bound\n    FROM\n        tiers AS this\n    LEFT JOIN\n        tiers AS prev ON\n            this.season = prev.season\n            AND this.round = prev.round\n            AND this.tier = prev.tier + 1\n)\n\nSELECT\n    s.play_id,\n    s.player_id,\n    s.season,\n    s.round,\n    c.timestamp,\n    c.club,\n    c.valid,\n    s.position,\n    s.position_id,\n    s.status,\n    s.price AS price_cartola,\n    s.played,\n    s.total_points,\n    s.offensive_points,\n    s.defensive_points,\n    c.spi_club,\n    c.spi_opponent,\n    c.prob_club,\n    c.prob_opponent,\n    c.prob_tie,\n    c.importance_club,\n    c.importance_opponent,\n    c.proj_score_club,\n    c.proj_score_opponent,\n    c.valid_club_last_19,\n    c.valid_opponent_last_19,\n    c.total_points_club_last_19,\n    c.offensive_points_club_last_19,\n    c.defensive_points_club_last_19,\n    c.total_allowed_points_opponent_last_19,\n    c.offensive_allowed_points_opponent_last_19,\n    c.defensive_allowed_points_opponent_last_19,\n    c.valid_club_last_5,\n    c.valid_opponent_last_5,\n    c.total_points_club_last_5,\n    c.offensive_points_club_last_5,\n    c.defensive_points_club_last_5,\n    c.total_allowed_points_opponent_last_5,\n    c.offensive_allowed_points_opponent_last_5,\n    c.defensive_allowed_points_opponent_last_5,\n    c.avg_odds_club,\n    c.avg_odds_opponent,\n    c.avg_odds_draw,\n    p.drafts,\n    p.drafts_norm,\n    t.tier,\n    ROUND(s.price - s.variation, 2) AS price_cartola_express,\n    COALESCE(\n        SUM(\n            CAST(s.played AS INT64)\n        ) OVER (\n            PARTITION BY\n                s.player_id\n            ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS played_last_19,\n    AVG(\n        s.total_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS total_points_last_19,\n    AVG(\n        s.offensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_last_19,\n    AVG(\n        s.defensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_last_19,\n    COALESCE(\n        SUM(\n            CAST(s.played AS INT64)\n        ) OVER (\n            PARTITION BY\n                s.player_id\n            ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS played_last_5,\n    AVG(\n        s.total_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS total_points_last_5,\n    AVG(\n        s.offensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_last_5,\n    AVG(\n        s.defensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_last_5\nFROM\n    {{ ref (\"fct_scoring\") }} AS s\nINNER JOIN\n    {{ ref (\"fct_club\") }} AS c ON\n        s.club = c.club AND s.season = c.season AND s.round = c.round\nLEFT JOIN\n    {{ ref (\"fct_popular\") }} AS p ON\n        s.play_id = p.play_id\nLEFT JOIN\n    tiers_fixed AS t ON\n        s.season = t.season\n        AND s.round = t.round\n        AND s.total_points >= t.lower_bound\n        AND s.total_points <= t.upper_bound", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}, {"name": "fct_scoring", "package": null, "version": null}, {"name": "fct_club", "package": null, "version": null}, {"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_scoring", "model.palpiteiro.fct_club", "model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/fct_player.sql", "compiled": true, "compiled_code": "WITH bins AS (\n    SELECT\n        season,\n        round,\n        total_points,\n        NTILE(\n            2\n        ) OVER (\n            PARTITION BY season, round, played ORDER BY total_points ASC\n        ) - 1 AS tier\n    FROM\n        `palpiteiro-main`.`cartola`.`fct_scoring`\n    WHERE\n        status = 'expected'\n        AND played IS TRUE\n),\n\ntiers AS (\n    SELECT\n        season,\n        round,\n        tier,\n        MIN(total_points) AS lower_bound,\n        MAX(total_points) AS upper_bound\n    FROM\n        bins\n    GROUP BY\n        season, round, tier\n),\n\ntiers_fixed AS (\n    SELECT\n        this.season,\n        this.round,\n        this.tier,\n        this.upper_bound,\n        IF(\n            this.lower_bound = prev.upper_bound,\n            this.lower_bound + 0.1,\n            this.lower_bound\n        ) AS lower_bound\n    FROM\n        tiers AS this\n    LEFT JOIN\n        tiers AS prev ON\n            this.season = prev.season\n            AND this.round = prev.round\n            AND this.tier = prev.tier + 1\n)\n\nSELECT\n    s.play_id,\n    s.player_id,\n    s.season,\n    s.round,\n    c.timestamp,\n    c.club,\n    c.valid,\n    s.position,\n    s.position_id,\n    s.status,\n    s.price AS price_cartola,\n    s.played,\n    s.total_points,\n    s.offensive_points,\n    s.defensive_points,\n    c.spi_club,\n    c.spi_opponent,\n    c.prob_club,\n    c.prob_opponent,\n    c.prob_tie,\n    c.importance_club,\n    c.importance_opponent,\n    c.proj_score_club,\n    c.proj_score_opponent,\n    c.valid_club_last_19,\n    c.valid_opponent_last_19,\n    c.total_points_club_last_19,\n    c.offensive_points_club_last_19,\n    c.defensive_points_club_last_19,\n    c.total_allowed_points_opponent_last_19,\n    c.offensive_allowed_points_opponent_last_19,\n    c.defensive_allowed_points_opponent_last_19,\n    c.valid_club_last_5,\n    c.valid_opponent_last_5,\n    c.total_points_club_last_5,\n    c.offensive_points_club_last_5,\n    c.defensive_points_club_last_5,\n    c.total_allowed_points_opponent_last_5,\n    c.offensive_allowed_points_opponent_last_5,\n    c.defensive_allowed_points_opponent_last_5,\n    c.avg_odds_club,\n    c.avg_odds_opponent,\n    c.avg_odds_draw,\n    p.drafts,\n    p.drafts_norm,\n    t.tier,\n    ROUND(s.price - s.variation, 2) AS price_cartola_express,\n    COALESCE(\n        SUM(\n            CAST(s.played AS INT64)\n        ) OVER (\n            PARTITION BY\n                s.player_id\n            ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS played_last_19,\n    AVG(\n        s.total_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS total_points_last_19,\n    AVG(\n        s.offensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_last_19,\n    AVG(\n        s.defensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_last_19,\n    COALESCE(\n        SUM(\n            CAST(s.played AS INT64)\n        ) OVER (\n            PARTITION BY\n                s.player_id\n            ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS played_last_5,\n    AVG(\n        s.total_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS total_points_last_5,\n    AVG(\n        s.offensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_last_5,\n    AVG(\n        s.defensive_points\n    ) OVER (\n        PARTITION BY\n            s.player_id, c.home\n        ORDER BY s.season, s.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_last_5\nFROM\n    `palpiteiro-main`.`cartola`.`fct_scoring` AS s\nINNER JOIN\n    `palpiteiro-main`.`palpiteiro`.`fct_club` AS c ON\n        s.club = c.club AND s.season = c.season AND s.round = c.round\nLEFT JOIN\n    `palpiteiro-main`.`cartola`.`fct_popular` AS p ON\n        s.play_id = p.play_id\nLEFT JOIN\n    tiers_fixed AS t ON\n        s.season = t.season\n        AND s.round = t.round\n        AND s.total_points >= t.lower_bound\n        AND s.total_points <= t.upper_bound", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_club": {"database": "palpiteiro-main", "schema": "palpiteiro", "name": "fct_club", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/palpiteiro/fct_club.sql", "original_file_path": "models/mart/palpiteiro/fct_club.sql", "unique_id": "model.palpiteiro.fct_club", "fqn": ["palpiteiro", "mart", "palpiteiro", "fct_club"], "alias": "fct_club", "checksum": {"name": "sha256", "checksum": "a8c413064fcca1f265160ba29ab0032c4e3524432868c0cb1d9dce9ecdd17bb2"}, "config": {"enabled": true, "alias": null, "schema": "palpiteiro", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Clubs data for each round", "columns": {"club": {"name": "club", "description": "Club slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "Round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Match starting timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "home": {"name": "home", "description": "Indicates if it is a home match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opponent": {"name": "opponent", "description": "Opponent club slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid": {"name": "valid", "description": "Match is valid for Cartola", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_club": {"name": "spi_club", "description": "Club's Soccer Power Index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_opponent": {"name": "spi_opponent", "description": "Opponent's Soccer Power Index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_club": {"name": "prob_club", "description": "Club's win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_opponent": {"name": "prob_opponent", "description": "Opponent's win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_tie": {"name": "prob_tie", "description": "Draw probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_club": {"name": "importance_club", "description": "Club's importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_opponent": {"name": "importance_opponent", "description": "Opponent's importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_club": {"name": "proj_score_club", "description": "Club's projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_opponent": {"name": "proj_score_opponent", "description": "Opponent's projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_club": {"name": "total_points_club", "description": "Club's total points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_club": {"name": "offensive_points_club", "description": "Club's offensive points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_club": {"name": "defensive_points_club", "description": "Club's defensive points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_opponent": {"name": "total_points_opponent", "description": "Opponent's total points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_opponent": {"name": "offensive_points_opponent", "description": "Opponent's offensive points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_opponent": {"name": "defensive_points_opponent", "description": "Opponent's defensive points for this round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_odds_club": {"name": "avg_odds_club", "description": "Average club's win odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_odds_opponent": {"name": "avg_odds_opponent", "description": "Average opponent's win odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_odds_draw": {"name": "avg_odds_draw", "description": "Average draw odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_club_last_19": {"name": "valid_club_last_19", "description": "Amount of club's valid matches in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_opponent_last_19": {"name": "valid_opponent_last_19", "description": "Amount of opponent's valid matches in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_club_last_19": {"name": "total_points_club_last_19", "description": "Club's average total points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_club_last_19": {"name": "offensive_points_club_last_19", "description": "Club's average offensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_club_last_19": {"name": "defensive_points_club_last_19", "description": "Club's average defensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_allowed_points_opponent_last_19": {"name": "total_allowed_points_opponent_last_19", "description": "Opponent's average allowed total points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_allowed_points_opponent_last_19": {"name": "offensive_allowed_points_opponent_last_19", "description": "Opponent's average allowed offensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_allowed_points_opponent_last_19": {"name": "defensive_allowed_points_opponent_last_19", "description": "Opponent's average allowed defensive points in the last 19 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_club_last_5": {"name": "valid_club_last_5", "description": "Amount of club's valid matches in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid_opponent_last_5": {"name": "valid_opponent_last_5", "description": "Amount of opponent's valid matches in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_points_club_last_5": {"name": "total_points_club_last_5", "description": "Club's average total points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_points_club_last_5": {"name": "offensive_points_club_last_5", "description": "Club's average offensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_points_club_last_5": {"name": "defensive_points_club_last_5", "description": "Club's average defensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "total_allowed_points_opponent_last_5": {"name": "total_allowed_points_opponent_last_5", "description": "Opponent's average allowed total points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "offensive_allowed_points_opponent_last_5": {"name": "offensive_allowed_points_opponent_last_5", "description": "Opponent's average allowed offensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "defensive_allowed_points_opponent_last_5": {"name": "defensive_allowed_points_opponent_last_5", "description": "Opponent's average allowed defensive points in the last 5 matches as home / visitor", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/palpiteiro/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "palpiteiro"}, "created_at": 1698373577.9582233, "relation_name": "`palpiteiro-main`.`palpiteiro`.`fct_club`", "raw_code": "WITH club AS (\n    SELECT\n        s.club,\n        s.season,\n        s.round,\n        ANY_VALUE(m.opponent) AS opponent,\n        ANY_VALUE(m.home) AS home,\n        ANY_VALUE(m.timestamp) AS timestamp, -- noqa: L029\n        COALESCE(ANY_VALUE(m.valid), SUM(s.total_points) IS NOT NULL) AS valid,\n        SUM(s.total_points) AS total_points,\n        SUM(s.offensive_points) AS offensive_points,\n        SUM(s.defensive_points) AS defensive_points\n    FROM\n        {{ ref(\"fct_scoring\") }} AS s\n    INNER JOIN\n        {{ ref (\"fct_match\") }} AS m ON\n            s.club = m.club AND s.season = m.season AND s.round = m.round\n    GROUP BY\n        s.club, s.season, s.round\n)\n\nSELECT\n    c.club,\n    c.season,\n    c.round,\n    c.timestamp,\n    c.home,\n    c.opponent,\n    c.valid,\n    s.spi_club,\n    s.spi_opponent,\n    s.prob_club,\n    s.prob_opponent,\n    s.prob_tie,\n    s.importance_club,\n    s.importance_opponent,\n    s.proj_score_club,\n    s.proj_score_opponent,\n    c.total_points AS total_points_club,\n    c.offensive_points AS offensive_points_club,\n    c.defensive_points AS defensive_points_club,\n    o.total_points AS total_points_opponent,\n    o.offensive_points AS offensive_points_opponent,\n    o.defensive_points AS defensive_points_opponent,\n    h2h.avg_club AS avg_odds_club,\n    h2h.avg_opponent AS avg_odds_opponent,\n    h2h.avg_draw AS avg_odds_draw,\n    COALESCE(\n        SUM(\n            CAST(c.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                c.club, c.home\n            ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_club_last_19,\n    COALESCE(\n        SUM(\n            CAST(o.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                o.club, o.home\n            ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_opponent_last_19,\n    AVG(\n        c.total_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS total_points_club_last_19,\n    AVG(\n        c.offensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_club_last_19,\n    AVG(\n        c.defensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_club_last_19,\n    AVG(\n        o.total_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS total_allowed_points_opponent_last_19,\n    AVG(\n        o.offensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS offensive_allowed_points_opponent_last_19,\n    AVG(\n        o.defensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS defensive_allowed_points_opponent_last_19,\n    COALESCE(\n        SUM(\n            CAST(c.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                c.club, c.home\n            ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_club_last_5,\n    COALESCE(\n        SUM(\n            CAST(o.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                o.club, o.home\n            ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_opponent_last_5,\n    AVG(\n        c.total_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS total_points_club_last_5,\n    AVG(\n        c.offensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_club_last_5,\n    AVG(\n        c.defensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_club_last_5,\n    AVG(\n        o.total_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS total_allowed_points_opponent_last_5,\n    AVG(\n        o.offensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS offensive_allowed_points_opponent_last_5,\n    AVG(\n        o.defensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS defensive_allowed_points_opponent_last_5\nFROM\n    club AS c\nINNER JOIN\n    club AS o ON\n        c.opponent = o.club AND c.season = o.season AND c.round = o.round\nINNER JOIN\n    {{ ref (\"fct_spi\") }} AS s ON\n        EXTRACT(\n            DATE FROM c.timestamp AT TIME ZONE 'America/Sao_Paulo'\n        ) = s.date AND c.club = s.club\nINNER JOIN\n    {{ ref (\"fct_h2h\") }} AS h2h ON\n        EXTRACT(\n            DATE FROM h2h.timestamp AT TIME ZONE 'America/Sao_Paulo'\n        ) = s.date AND c.club = h2h.club", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}, {"name": "fct_match", "package": null, "version": null}, {"name": "fct_spi", "package": null, "version": null}, {"name": "fct_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_scoring", "model.palpiteiro.fct_match", "model.palpiteiro.fct_spi", "model.palpiteiro.fct_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/fct_club.sql", "compiled": true, "compiled_code": "WITH club AS (\n    SELECT\n        s.club,\n        s.season,\n        s.round,\n        ANY_VALUE(m.opponent) AS opponent,\n        ANY_VALUE(m.home) AS home,\n        ANY_VALUE(m.timestamp) AS timestamp, -- noqa: L029\n        COALESCE(ANY_VALUE(m.valid), SUM(s.total_points) IS NOT NULL) AS valid,\n        SUM(s.total_points) AS total_points,\n        SUM(s.offensive_points) AS offensive_points,\n        SUM(s.defensive_points) AS defensive_points\n    FROM\n        `palpiteiro-main`.`cartola`.`fct_scoring` AS s\n    INNER JOIN\n        `palpiteiro-main`.`cartola`.`fct_match` AS m ON\n            s.club = m.club AND s.season = m.season AND s.round = m.round\n    GROUP BY\n        s.club, s.season, s.round\n)\n\nSELECT\n    c.club,\n    c.season,\n    c.round,\n    c.timestamp,\n    c.home,\n    c.opponent,\n    c.valid,\n    s.spi_club,\n    s.spi_opponent,\n    s.prob_club,\n    s.prob_opponent,\n    s.prob_tie,\n    s.importance_club,\n    s.importance_opponent,\n    s.proj_score_club,\n    s.proj_score_opponent,\n    c.total_points AS total_points_club,\n    c.offensive_points AS offensive_points_club,\n    c.defensive_points AS defensive_points_club,\n    o.total_points AS total_points_opponent,\n    o.offensive_points AS offensive_points_opponent,\n    o.defensive_points AS defensive_points_opponent,\n    h2h.avg_club AS avg_odds_club,\n    h2h.avg_opponent AS avg_odds_opponent,\n    h2h.avg_draw AS avg_odds_draw,\n    COALESCE(\n        SUM(\n            CAST(c.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                c.club, c.home\n            ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_club_last_19,\n    COALESCE(\n        SUM(\n            CAST(o.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                o.club, o.home\n            ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_opponent_last_19,\n    AVG(\n        c.total_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS total_points_club_last_19,\n    AVG(\n        c.offensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_club_last_19,\n    AVG(\n        c.defensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_club_last_19,\n    AVG(\n        o.total_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS total_allowed_points_opponent_last_19,\n    AVG(\n        o.offensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS offensive_allowed_points_opponent_last_19,\n    AVG(\n        o.defensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 19 PRECEDING AND 1 PRECEDING\n    ) AS defensive_allowed_points_opponent_last_19,\n    COALESCE(\n        SUM(\n            CAST(c.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                c.club, c.home\n            ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_club_last_5,\n    COALESCE(\n        SUM(\n            CAST(o.valid AS INT64)\n        ) OVER (\n            PARTITION BY\n                o.club, o.home\n            ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n        ),\n        0\n    ) AS valid_opponent_last_5,\n    AVG(\n        c.total_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS total_points_club_last_5,\n    AVG(\n        c.offensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS offensive_points_club_last_5,\n    AVG(\n        c.defensive_points\n    ) OVER (\n        PARTITION BY\n            c.club, c.home\n        ORDER BY c.season, c.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS defensive_points_club_last_5,\n    AVG(\n        o.total_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS total_allowed_points_opponent_last_5,\n    AVG(\n        o.offensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS offensive_allowed_points_opponent_last_5,\n    AVG(\n        o.defensive_points\n    ) OVER (\n        PARTITION BY\n            o.club, o.home\n        ORDER BY o.season, o.round ROWS BETWEEN 5 PRECEDING AND 1 PRECEDING\n    ) AS defensive_allowed_points_opponent_last_5\nFROM\n    club AS c\nINNER JOIN\n    club AS o ON\n        c.opponent = o.club AND c.season = o.season AND c.round = o.round\nINNER JOIN\n    `palpiteiro-main`.`fivethirtyeight`.`fct_spi` AS s ON\n        EXTRACT(\n            DATE FROM c.timestamp AT TIME ZONE 'America/Sao_Paulo'\n        ) = s.date AND c.club = s.club\nINNER JOIN\n    `palpiteiro-main`.`odds`.`fct_h2h` AS h2h ON\n        EXTRACT(\n            DATE FROM h2h.timestamp AT TIME ZONE 'America/Sao_Paulo'\n        ) = s.date AND c.club = h2h.club", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_popular_points": {"database": "palpiteiro-main", "schema": "express", "name": "fct_popular_points", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/express/fct_popular_points.sql", "original_file_path": "models/mart/express/fct_popular_points.sql", "unique_id": "model.palpiteiro.fct_popular_points", "fqn": ["palpiteiro", "mart", "express", "fct_popular_points"], "alias": "fct_popular_points", "checksum": {"name": "sha256", "checksum": "934cc61216ca3033de22e314d2a51ebfd6d6cb0cc44d708b7a25dfd7429dddae"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Most popular line up performance on Cartola Express", "columns": {"season": {"name": "season", "description": "season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Amount of points that would have scored on Cartola express", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/express/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "express"}, "created_at": 1698373578.2104888, "relation_name": "`palpiteiro-main`.`express`.`fct_popular_points`", "raw_code": "WITH popular AS (\n    SELECT\n        p.season,\n        p.round,\n        s.position,\n        s.total_points,\n        ROW_NUMBER() OVER (\n            PARTITION BY p.season, p.round, s.position ORDER BY p.drafts DESC\n        ) AS ranking\n    FROM\n        {{ ref(\"fct_popular\") }} AS p\n    LEFT JOIN\n        {{ ref(\"fct_scoring\") }} AS s ON\n            p.player_id = s.player_id\n            AND p.season = s.season\n            AND p.round = s.round\n    WHERE\n        s.played IS TRUE\n)\n\nSELECT\n    season,\n    round,\n    ROUND(SUM(total_points), 1) AS points\nFROM\n    popular\nWHERE\n    (position = 'goalkeeper' AND ranking <= 1)\n    OR (position = 'defender' AND ranking <= 2)\n    OR (position = 'fullback' AND ranking <= 2)\n    OR (position = 'midfielder' AND ranking <= 3)\n    OR (position = 'forward' AND ranking <= 3)\nGROUP BY\n    season, round", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}, {"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_popular", "model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/fct_popular_points.sql", "compiled": true, "compiled_code": "WITH popular AS (\n    SELECT\n        p.season,\n        p.round,\n        s.position,\n        s.total_points,\n        ROW_NUMBER() OVER (\n            PARTITION BY p.season, p.round, s.position ORDER BY p.drafts DESC\n        ) AS ranking\n    FROM\n        `palpiteiro-main`.`cartola`.`fct_popular` AS p\n    LEFT JOIN\n        `palpiteiro-main`.`cartola`.`fct_scoring` AS s ON\n            p.player_id = s.player_id\n            AND p.season = s.season\n            AND p.round = s.round\n    WHERE\n        s.played IS TRUE\n)\n\nSELECT\n    season,\n    round,\n    ROUND(SUM(total_points), 1) AS points\nFROM\n    popular\nWHERE\n    (position = 'goalkeeper' AND ranking <= 1)\n    OR (position = 'defender' AND ranking <= 2)\n    OR (position = 'fullback' AND ranking <= 2)\n    OR (position = 'midfielder' AND ranking <= 3)\n    OR (position = 'forward' AND ranking <= 3)\nGROUP BY\n    season, round", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_prize": {"database": "palpiteiro-main", "schema": "express", "name": "fct_prize", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/express/fct_prize.sql", "original_file_path": "models/mart/express/fct_prize.sql", "unique_id": "model.palpiteiro.fct_prize", "fqn": ["palpiteiro", "mart", "express", "fct_prize"], "alias": "fct_prize", "checksum": {"name": "sha256", "checksum": "8c61fe5deee0d8cfc6ca6ad0e3110a193d0a9d543d36870318ebb01caf7935dd"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola Express prizes", "columns": {"rank_id": {"name": "rank_id", "description": "Contest rank ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contest": {"name": "contest", "description": "Cartola Express contest ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Line up points", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prizes": {"name": "prizes", "description": "Prize that this amount of pointes earned in this contest", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "rank": {"name": "rank", "description": "Line up ranking", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/express/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "express"}, "created_at": 1698373578.2164533, "relation_name": "`palpiteiro-main`.`express`.`fct_prize`", "raw_code": "SELECT\n    cnt.season,\n    cnt.round,\n    prz.contest,\n    prz.prizes,\n    prz.points,\n    prz.rank,\n    prz.contest * 100000 + prz.rank AS rank_id\nFROM\n    {{ source(\"express\", \"prize\") }} AS prz\nLEFT JOIN\n    {{ ref(\"contests_metadata\") }} AS cnt ON prz.contest = cnt.contest", "language": "sql", "refs": [{"name": "contests_metadata", "package": null, "version": null}], "sources": [["express", "prize"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.express.prize", "seed.palpiteiro.contests_metadata"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/fct_prize.sql", "compiled": true, "compiled_code": "SELECT\n    cnt.season,\n    cnt.round,\n    prz.contest,\n    prz.prizes,\n    prz.points,\n    prz.rank,\n    prz.contest * 100000 + prz.rank AS rank_id\nFROM\n    `palpiteiro-main`.`express`.`prize` AS prz\nLEFT JOIN\n    `palpiteiro-main`.`express`.`contests_metadata` AS cnt ON prz.contest = cnt.contest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_best_expected_points": {"database": "palpiteiro-main", "schema": "express", "name": "fct_best_expected_points", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/express/fct_best_expected_points.sql", "original_file_path": "models/mart/express/fct_best_expected_points.sql", "unique_id": "model.palpiteiro.fct_best_expected_points", "fqn": ["palpiteiro", "mart", "express", "fct_best_expected_points"], "alias": "fct_best_expected_points", "checksum": {"name": "sha256", "checksum": "fe5eefc59e0ecea9e3421ace575bcb866ce754503276aad7837b145cc9d33031"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Best possible line up from expected to play performance on Cartola Express", "columns": {"season": {"name": "season", "description": "season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Amount of points that would have scored on Cartola express", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/express/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "express"}, "created_at": 1698373578.2129252, "relation_name": "`palpiteiro-main`.`express`.`fct_best_expected_points`", "raw_code": "WITH popular AS (\n    SELECT\n        season,\n        round,\n        position,\n        total_points,\n        ROW_NUMBER() OVER (\n            PARTITION BY season, round, position ORDER BY total_points DESC\n        ) AS ranking\n    FROM\n        {{ ref(\"fct_scoring\") }}\n    WHERE\n        played IS TRUE\n        AND status = 'expected'\n)\n\nSELECT\n    season,\n    round,\n    ROUND(SUM(total_points), 1) AS points\nFROM\n    popular\nWHERE\n    (position = 'goalkeeper' AND ranking <= 1)\n    OR (position = 'defender' AND ranking <= 2)\n    OR (position = 'fullback' AND ranking <= 2)\n    OR (position = 'midfielder' AND ranking <= 3)\n    OR (position = 'forward' AND ranking <= 3)\nGROUP BY\n    season, round", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/fct_best_expected_points.sql", "compiled": true, "compiled_code": "WITH popular AS (\n    SELECT\n        season,\n        round,\n        position,\n        total_points,\n        ROW_NUMBER() OVER (\n            PARTITION BY season, round, position ORDER BY total_points DESC\n        ) AS ranking\n    FROM\n        `palpiteiro-main`.`cartola`.`fct_scoring`\n    WHERE\n        played IS TRUE\n        AND status = 'expected'\n)\n\nSELECT\n    season,\n    round,\n    ROUND(SUM(total_points), 1) AS points\nFROM\n    popular\nWHERE\n    (position = 'goalkeeper' AND ranking <= 1)\n    OR (position = 'defender' AND ranking <= 2)\n    OR (position = 'fullback' AND ranking <= 2)\n    OR (position = 'midfielder' AND ranking <= 3)\n    OR (position = 'forward' AND ranking <= 3)\nGROUP BY\n    season, round", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_best_points": {"database": "palpiteiro-main", "schema": "express", "name": "fct_best_points", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/express/fct_best_points.sql", "original_file_path": "models/mart/express/fct_best_points.sql", "unique_id": "model.palpiteiro.fct_best_points", "fqn": ["palpiteiro", "mart", "express", "fct_best_points"], "alias": "fct_best_points", "checksum": {"name": "sha256", "checksum": "5899314af26101561a47e8e92a23d1ca2db44a57ec8dc3923d72beda14e5bec4"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Best possible line up performance on Cartola Express", "columns": {"season": {"name": "season", "description": "season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Amount of points that would have scored on Cartola express", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/express/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "express"}, "created_at": 1698373578.211884, "relation_name": "`palpiteiro-main`.`express`.`fct_best_points`", "raw_code": "WITH popular AS (\n    SELECT\n        season,\n        round,\n        position,\n        total_points,\n        ROW_NUMBER() OVER (\n            PARTITION BY season, round, position ORDER BY total_points DESC\n        ) AS ranking\n    FROM\n        {{ ref(\"fct_scoring\") }}\n    WHERE\n        played IS TRUE\n)\n\nSELECT\n    season,\n    round,\n    ROUND(SUM(total_points), 1) AS points\nFROM\n    popular\nWHERE\n    (position = 'goalkeeper' AND ranking <= 1)\n    OR (position = 'defender' AND ranking <= 2)\n    OR (position = 'fullback' AND ranking <= 2)\n    OR (position = 'midfielder' AND ranking <= 3)\n    OR (position = 'forward' AND ranking <= 3)\nGROUP BY\n    season, round", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/fct_best_points.sql", "compiled": true, "compiled_code": "WITH popular AS (\n    SELECT\n        season,\n        round,\n        position,\n        total_points,\n        ROW_NUMBER() OVER (\n            PARTITION BY season, round, position ORDER BY total_points DESC\n        ) AS ranking\n    FROM\n        `palpiteiro-main`.`cartola`.`fct_scoring`\n    WHERE\n        played IS TRUE\n)\n\nSELECT\n    season,\n    round,\n    ROUND(SUM(total_points), 1) AS points\nFROM\n    popular\nWHERE\n    (position = 'goalkeeper' AND ranking <= 1)\n    OR (position = 'defender' AND ranking <= 2)\n    OR (position = 'fullback' AND ranking <= 2)\n    OR (position = 'midfielder' AND ranking <= 3)\n    OR (position = 'forward' AND ranking <= 3)\nGROUP BY\n    season, round", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_norm_points": {"database": "palpiteiro-main", "schema": "express", "name": "fct_norm_points", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/express/fct_norm_points.sql", "original_file_path": "models/mart/express/fct_norm_points.sql", "unique_id": "model.palpiteiro.fct_norm_points", "fqn": ["palpiteiro", "mart", "express", "fct_norm_points"], "alias": "fct_norm_points", "checksum": {"name": "sha256", "checksum": "646ea3538ec548cc9e3d371a4d6fd949227607d2d45a05b16402bdc29bc053c7"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Normalize points and its prizes on Cartola Express", "columns": {"rank_id": {"name": "rank_id", "description": "Contest rank ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "contest": {"name": "contest", "description": "Cartola Express contest ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points_norm": {"name": "points_norm", "description": "Points normalized in between the most popular team points and the best possible team points", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prizes": {"name": "prizes", "description": "Prize that this amount of pointes earned in this contest", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/express/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "express"}, "created_at": 1698373578.2189264, "relation_name": "`palpiteiro-main`.`express`.`fct_norm_points`", "raw_code": "SELECT\n    prz.season,\n    prz.round,\n    prz.contest,\n    prz.prizes,\n    prz.contest * 100000 + prz.rank AS rank_id,\n    (prz.points - pop.points) / (bst.points - pop.points) AS points_norm\nFROM\n    {{ ref(\"fct_prize\") }} AS prz\nLEFT JOIN\n    {{ ref(\"fct_popular_points\") }} AS pop ON\n        prz.season = pop.season AND prz.round = pop.round\nLEFT JOIN\n    {{ ref(\"fct_best_expected_points\") }} AS bst ON\n        prz.season = bst.season AND prz.round = bst.round", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}, {"name": "fct_popular_points", "package": null, "version": null}, {"name": "fct_best_expected_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_prize", "model.palpiteiro.fct_popular_points", "model.palpiteiro.fct_best_expected_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/fct_norm_points.sql", "compiled": true, "compiled_code": "SELECT\n    prz.season,\n    prz.round,\n    prz.contest,\n    prz.prizes,\n    prz.contest * 100000 + prz.rank AS rank_id,\n    (prz.points - pop.points) / (bst.points - pop.points) AS points_norm\nFROM\n    `palpiteiro-main`.`express`.`fct_prize` AS prz\nLEFT JOIN\n    `palpiteiro-main`.`express`.`fct_popular_points` AS pop ON\n        prz.season = pop.season AND prz.round = pop.round\nLEFT JOIN\n    `palpiteiro-main`.`express`.`fct_best_expected_points` AS bst ON\n        prz.season = bst.season AND prz.round = bst.round", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.fct_spi": {"database": "palpiteiro-main", "schema": "fivethirtyeight", "name": "fct_spi", "resource_type": "model", "package_name": "palpiteiro", "path": "mart/fivethirtyeight/fct_spi.sql", "original_file_path": "models/mart/fivethirtyeight/fct_spi.sql", "unique_id": "model.palpiteiro.fct_spi", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "fct_spi"], "alias": "fct_spi", "checksum": {"name": "sha256", "checksum": "b53ad7290edf6876b2f2711e8756198eb6844411005f4c21d16daf25c67434db"}, "config": {"enabled": true, "alias": null, "schema": "fivethirtyeight", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Brasileir\u00e3o Fivethirtyeight Soccer Power Index", "columns": {"season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "opponent": {"name": "opponent", "description": "Opponent", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_club": {"name": "spi_club", "description": "Club soccer power index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_opponent": {"name": "spi_opponent", "description": "Opponent soccer power index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_club": {"name": "prob_club", "description": "Club win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_opponent": {"name": "prob_opponent", "description": "Opponent win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_tie": {"name": "prob_tie", "description": "Tie probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_club": {"name": "importance_club", "description": "Club match importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_opponent": {"name": "importance_opponent", "description": "Opponent match importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_club": {"name": "proj_score_club", "description": "Club projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_opponent": {"name": "proj_score_opponent", "description": "Opponent projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/mart/fivethirtyeight/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fivethirtyeight"}, "created_at": 1698373578.29297, "relation_name": "`palpiteiro-main`.`fivethirtyeight`.`fct_spi`", "raw_code": "WITH spi AS (\n    SELECT\n        season,\n        date,\n        home AS club,\n        away AS opponent,\n        spi_home AS spi_club,\n        spi_away AS spi_opponent,\n        prob_home AS prob_club,\n        prob_away AS prob_opponent,\n        prob_tie,\n        proj_score_home AS proj_score_club,\n        proj_score_away AS proj_score_opponent,\n        COALESCE(\n            importance_home,\n            AVG(importance_home) OVER (PARTITION BY EXTRACT(WEEK FROM date))\n        ) AS importance_club,\n        COALESCE(\n            importance_away,\n            AVG(importance_away) OVER (PARTITION BY EXTRACT(WEEK FROM date))\n        ) AS importance_opponent\n    FROM\n        {{ ref (\"stg_spi_match\") }}\n),\n\ninv AS (\n    SELECT\n        season,\n        date,\n        club AS opponent,\n        opponent AS club,\n        spi_club AS spi_opponent,\n        spi_opponent AS spi_club,\n        prob_club AS prob_opponent,\n        prob_opponent AS prob_club,\n        prob_tie,\n        importance_club AS importance_opponent,\n        importance_opponent AS importance_club,\n        proj_score_club AS proj_score_opponent,\n        proj_score_opponent AS proj_score_club\n    FROM\n        spi\n)\n\nSELECT\n    season,\n    date,\n    club,\n    opponent,\n    spi_club,\n    spi_opponent,\n    prob_club,\n    prob_opponent,\n    prob_tie,\n    importance_club,\n    importance_opponent,\n    proj_score_club,\n    proj_score_opponent\nFROM\n    spi\nUNION ALL\nSELECT\n    season,\n    date,\n    club,\n    opponent,\n    spi_club,\n    spi_opponent,\n    prob_club,\n    prob_opponent,\n    prob_tie,\n    importance_club,\n    importance_opponent,\n    proj_score_club,\n    proj_score_opponent\nFROM\n    inv", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/fct_spi.sql", "compiled": true, "compiled_code": "WITH spi AS (\n    SELECT\n        season,\n        date,\n        home AS club,\n        away AS opponent,\n        spi_home AS spi_club,\n        spi_away AS spi_opponent,\n        prob_home AS prob_club,\n        prob_away AS prob_opponent,\n        prob_tie,\n        proj_score_home AS proj_score_club,\n        proj_score_away AS proj_score_opponent,\n        COALESCE(\n            importance_home,\n            AVG(importance_home) OVER (PARTITION BY EXTRACT(WEEK FROM date))\n        ) AS importance_club,\n        COALESCE(\n            importance_away,\n            AVG(importance_away) OVER (PARTITION BY EXTRACT(WEEK FROM date))\n        ) AS importance_opponent\n    FROM\n        `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\n),\n\ninv AS (\n    SELECT\n        season,\n        date,\n        club AS opponent,\n        opponent AS club,\n        spi_club AS spi_opponent,\n        spi_opponent AS spi_club,\n        prob_club AS prob_opponent,\n        prob_opponent AS prob_club,\n        prob_tie,\n        importance_club AS importance_opponent,\n        importance_opponent AS importance_club,\n        proj_score_club AS proj_score_opponent,\n        proj_score_opponent AS proj_score_club\n    FROM\n        spi\n)\n\nSELECT\n    season,\n    date,\n    club,\n    opponent,\n    spi_club,\n    spi_opponent,\n    prob_club,\n    prob_opponent,\n    prob_tie,\n    importance_club,\n    importance_opponent,\n    proj_score_club,\n    proj_score_opponent\nFROM\n    spi\nUNION ALL\nSELECT\n    season,\n    date,\n    club,\n    opponent,\n    spi_club,\n    spi_opponent,\n    prob_club,\n    prob_opponent,\n    prob_tie,\n    importance_club,\n    importance_opponent,\n    proj_score_club,\n    proj_score_opponent\nFROM\n    inv", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_pontuados_scoring": {"database": "palpiteiro-main", "schema": "cartola", "name": "stg_pontuados_scoring", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/cartola/stg_pontuados_scoring.sql", "original_file_path": "models/staging/cartola/stg_pontuados_scoring.sql", "unique_id": "model.palpiteiro.stg_pontuados_scoring", "fqn": ["palpiteiro", "staging", "cartola", "stg_pontuados_scoring"], "alias": "stg_pontuados_scoring", "checksum": {"name": "sha256", "checksum": "ead41db146c933b0d5b182f4530981bb5e8ee3a0f6a0baeff74f3c5883c60d0f"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola players scoring for each round", "columns": {"play_id": {"name": "play_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "player_id": {"name": "player_id", "description": "Player ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "League round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "League season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position": {"name": "position", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "played": {"name": "played", "description": "Participated in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Points scored by the player in the match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "goal": {"name": "goal", "description": "Goals in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "assist": {"name": "assist", "description": "Assists in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "yellow_card": {"name": "yellow_card", "description": "Yellow cards in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "red_card": {"name": "red_card", "description": "Red cards in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_shoot": {"name": "missed_shoot", "description": "Missed shoots in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "on_post_shoot": {"name": "on_post_shoot", "description": "On post shoots in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "saved_shoot": {"name": "saved_shoot", "description": "Saved shoots in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_foul": {"name": "received_foul", "description": "Received fouls in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "received_penalty": {"name": "received_penalty", "description": "Received fouls in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_penalty": {"name": "missed_penalty", "description": "Missed penalty kick in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "outside": {"name": "outside", "description": "Outsides in this match in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "missed_pass": {"name": "missed_pass", "description": "Missed passes in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "tackle": {"name": "tackle", "description": "Successful tackles in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "foul": {"name": "foul", "description": "Committed fouls in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "penalty": {"name": "penalty", "description": "Committed penalty in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "own_goal": {"name": "own_goal", "description": "Own goals in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "allowed_goal": {"name": "allowed_goal", "description": "Allowed goals in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "no_goal": {"name": "no_goal", "description": "Games without goals in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "save": {"name": "save", "description": "Saves in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "penalty_save": {"name": "penalty_save", "description": "Penalty save in this match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/staging/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373578.3556793, "relation_name": "`palpiteiro-main`.`cartola`.`stg_pontuados_scoring`", "raw_code": "SELECT\n    pnt.id AS player_id,\n    pnt.rodada AS round,\n    pnt.temporada AS season,\n    clb.slug AS club,\n    pos.slug AS position,\n    pnt.pontuacao AS points,\n    (\n        pnt.temporada - 2000\n    ) * 100000000 + pnt.rodada * 1000000 + pnt.id AS play_id,\n    CAST(\n        IF(\n            pnt.posicao_id = 6,\n            FALSE,\n            COALESCE(pnt.entrou_em_campo, pnt.pontuacao != 0)\n        ) AS boolean\n    ) AS played,\n    COALESCE(pnt.g, 0) AS goal,\n    COALESCE(pnt.a, 0) AS assist,\n    COALESCE(pnt.ca, 0) AS yellow_card,\n    COALESCE(pnt.cv, 0) AS red_card,\n    COALESCE(pnt.ff, 0) AS missed_shoot,\n    COALESCE(pnt.ft, 0) AS on_post_shoot,\n    COALESCE(pnt.fd, 0) AS saved_shoot,\n    COALESCE(pnt.fs, 0) AS received_foul,\n    COALESCE(pnt.ps, 0) AS received_penalty,\n    COALESCE(pnt.pp, 0) AS missed_penalty,\n    COALESCE(pnt.i, 0) AS outside,\n    COALESCE(pnt.pe, pnt.pi, 0) AS missed_pass,\n    COALESCE(pnt.rb, pnt.ds, 0) AS tackle,\n    COALESCE(pnt.fc, 0) AS foul,\n    COALESCE(pnt.pc, 0) AS penalty,\n    COALESCE(pnt.gc, 0) AS own_goal,\n    COALESCE(pnt.gs, 0) AS allowed_goal,\n    COALESCE(pnt.sg, 0) AS no_goal,\n    -- Difficult Save was replaced by Save. I calculated that: \n    -- On average for each difficult save, there are 2.218 save.\n    COALESCE(pnt.de, CAST(ROUND(pnt.dd * 2.218, 0) AS int), 0) AS save,\n    COALESCE(pnt.dp, 0) AS penalty_save\nFROM\n    {{ source ('cartola', 'pontuados') }} AS pnt\nLEFT JOIN {{ ref (\"dim_position\") }} AS pos ON pnt.posicao_id = pos.id\nLEFT JOIN {{ ref (\"dim_club\") }} AS clb ON pnt.clube_id = clb.id", "language": "sql", "refs": [{"name": "dim_position", "package": null, "version": null}, {"name": "dim_club", "package": null, "version": null}], "sources": [["cartola", "pontuados"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.cartola.pontuados", "seed.palpiteiro.dim_position", "seed.palpiteiro.dim_club"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/stg_pontuados_scoring.sql", "compiled": true, "compiled_code": "SELECT\n    pnt.id AS player_id,\n    pnt.rodada AS round,\n    pnt.temporada AS season,\n    clb.slug AS club,\n    pos.slug AS position,\n    pnt.pontuacao AS points,\n    (\n        pnt.temporada - 2000\n    ) * 100000000 + pnt.rodada * 1000000 + pnt.id AS play_id,\n    CAST(\n        IF(\n            pnt.posicao_id = 6,\n            FALSE,\n            COALESCE(pnt.entrou_em_campo, pnt.pontuacao != 0)\n        ) AS boolean\n    ) AS played,\n    COALESCE(pnt.g, 0) AS goal,\n    COALESCE(pnt.a, 0) AS assist,\n    COALESCE(pnt.ca, 0) AS yellow_card,\n    COALESCE(pnt.cv, 0) AS red_card,\n    COALESCE(pnt.ff, 0) AS missed_shoot,\n    COALESCE(pnt.ft, 0) AS on_post_shoot,\n    COALESCE(pnt.fd, 0) AS saved_shoot,\n    COALESCE(pnt.fs, 0) AS received_foul,\n    COALESCE(pnt.ps, 0) AS received_penalty,\n    COALESCE(pnt.pp, 0) AS missed_penalty,\n    COALESCE(pnt.i, 0) AS outside,\n    COALESCE(pnt.pe, pnt.pi, 0) AS missed_pass,\n    COALESCE(pnt.rb, pnt.ds, 0) AS tackle,\n    COALESCE(pnt.fc, 0) AS foul,\n    COALESCE(pnt.pc, 0) AS penalty,\n    COALESCE(pnt.gc, 0) AS own_goal,\n    COALESCE(pnt.gs, 0) AS allowed_goal,\n    COALESCE(pnt.sg, 0) AS no_goal,\n    -- Difficult Save was replaced by Save. I calculated that: \n    -- On average for each difficult save, there are 2.218 save.\n    COALESCE(pnt.de, CAST(ROUND(pnt.dd * 2.218, 0) AS int), 0) AS save,\n    COALESCE(pnt.dp, 0) AS penalty_save\nFROM\n    `palpiteiro-main`.`cartola`.`pontuados` AS pnt\nLEFT JOIN `palpiteiro-main`.`cartola`.`dim_position` AS pos ON pnt.posicao_id = pos.id\nLEFT JOIN `palpiteiro-main`.`cartola`.`dim_club` AS clb ON pnt.clube_id = clb.id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_atletas_scoring": {"database": "palpiteiro-main", "schema": "cartola", "name": "stg_atletas_scoring", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/cartola/stg_atletas_scoring.sql", "original_file_path": "models/staging/cartola/stg_atletas_scoring.sql", "unique_id": "model.palpiteiro.stg_atletas_scoring", "fqn": ["palpiteiro", "staging", "cartola", "stg_atletas_scoring"], "alias": "stg_atletas_scoring", "checksum": {"name": "sha256", "checksum": "dd01a368ee3ef7ac274738e7cec92bfca3e350cc6a91b5218b6b42ec57fe4ca4"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola players scoring for each round", "columns": {"play_id": {"name": "play_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "player_id": {"name": "player_id", "description": "Player ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "League round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "League season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "club": {"name": "club", "description": "Club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position": {"name": "position", "description": "Position", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "position_id": {"name": "position_id", "description": "Position ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "status": {"name": "status", "description": "Status for the match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "points": {"name": "points", "description": "Scored by the player in the match", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "price": {"name": "price", "description": "Price", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "variation": {"name": "variation", "description": "Price variation", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/staging/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373578.335332, "relation_name": "`palpiteiro-main`.`cartola`.`stg_atletas_scoring`", "raw_code": "WITH scoring AS (\n    SELECT\n        atl.atleta_id AS player_id,\n        atl.rodada_id AS round,\n        atl.temporada_id AS season,\n        clb.slug AS club,\n        pos.slug AS position,\n        pos.id AS position_id,\n        sts.slug AS status,\n        atl.pontos_num AS points,\n        atl.preco_num AS price,\n        atl.variacao_num AS variation,\n        (\n            atl.temporada_id - 2000\n        ) * 100000000 + atl.rodada_id * 1000000 + atl.atleta_id AS play_id\n    FROM\n        {{ source(\"cartola\", \"atletas\") }} AS atl\n    LEFT JOIN {{ ref (\"dim_position\") }} AS pos ON atl.posicao_id = pos.id\n    LEFT JOIN {{ ref (\"dim_status\") }} AS sts ON atl.status_id = sts.id\n    LEFT JOIN {{ ref (\"dim_club\") }} AS clb ON atl.clube_id = clb.id\n\n)\n\nSELECT\n    curr.play_id,\n    curr.player_id,\n    curr.round,\n    curr.season,\n    curr.club,\n    curr.position,\n    curr.position_id,\n    curr.points,\n    curr.price,\n    curr.variation,\n    IF(curr.season >= 2022, curr.status, prev.status) AS status\nFROM\n    scoring AS curr\nLEFT JOIN\n    scoring AS prev ON\n        curr.season = prev.season\n        AND curr.round = prev.round + 1\n        AND curr.player_id = prev.player_id", "language": "sql", "refs": [{"name": "dim_position", "package": null, "version": null}, {"name": "dim_status", "package": null, "version": null}, {"name": "dim_club", "package": null, "version": null}], "sources": [["cartola", "atletas"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.cartola.atletas", "seed.palpiteiro.dim_position", "seed.palpiteiro.dim_status", "seed.palpiteiro.dim_club"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/stg_atletas_scoring.sql", "compiled": true, "compiled_code": "WITH scoring AS (\n    SELECT\n        atl.atleta_id AS player_id,\n        atl.rodada_id AS round,\n        atl.temporada_id AS season,\n        clb.slug AS club,\n        pos.slug AS position,\n        pos.id AS position_id,\n        sts.slug AS status,\n        atl.pontos_num AS points,\n        atl.preco_num AS price,\n        atl.variacao_num AS variation,\n        (\n            atl.temporada_id - 2000\n        ) * 100000000 + atl.rodada_id * 1000000 + atl.atleta_id AS play_id\n    FROM\n        `palpiteiro-main`.`cartola`.`atletas` AS atl\n    LEFT JOIN `palpiteiro-main`.`cartola`.`dim_position` AS pos ON atl.posicao_id = pos.id\n    LEFT JOIN `palpiteiro-main`.`cartola`.`dim_status` AS sts ON atl.status_id = sts.id\n    LEFT JOIN `palpiteiro-main`.`cartola`.`dim_club` AS clb ON atl.clube_id = clb.id\n\n)\n\nSELECT\n    curr.play_id,\n    curr.player_id,\n    curr.round,\n    curr.season,\n    curr.club,\n    curr.position,\n    curr.position_id,\n    curr.points,\n    curr.price,\n    curr.variation,\n    IF(curr.season >= 2022, curr.status, prev.status) AS status\nFROM\n    scoring AS curr\nLEFT JOIN\n    scoring AS prev ON\n        curr.season = prev.season\n        AND curr.round = prev.round + 1\n        AND curr.player_id = prev.player_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_atletas_player": {"database": "palpiteiro-main", "schema": "cartola", "name": "stg_atletas_player", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/cartola/stg_atletas_player.sql", "original_file_path": "models/staging/cartola/stg_atletas_player.sql", "unique_id": "model.palpiteiro.stg_atletas_player", "fqn": ["palpiteiro", "staging", "cartola", "stg_atletas_player"], "alias": "stg_atletas_player", "checksum": {"name": "sha256", "checksum": "5372bddbf4efa669ecb0f85d095c193ad4983c7bfb5f27c0cb967db97650baa6"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola players", "columns": {"player_id": {"name": "player_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "slug": {"name": "slug", "description": "Slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "nickname": {"name": "nickname", "description": "Nickname", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "short_nickname": {"name": "short_nickname", "description": "Nickname", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "photo": {"name": "photo", "description": "Photo", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/staging/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373578.336811, "relation_name": "`palpiteiro-main`.`cartola`.`stg_atletas_player`", "raw_code": "SELECT\n    atleta_id AS player_id,\n    apelido AS nickname,\n    COALESCE(\n        slug,\n        TRANSLATE(\n            REPLACE(LOWER(apelido), ' ', '-'), '\u00e1\u00e2\u00e3\u00e7\u00e9\u00ea\u00ed\u00f1\u00f3\u00f4\u00f5\u00fa', 'aaaceeinooou'\n        )\n    ) AS slug,\n    COALESCE(\n        apelido_abreviado, REGEXP_REPLACE(TRIM(apelido), r'[a-z]+\\s', '. ')\n    ) AS short_nickname,\n    REPLACE(foto, 'FORMATO', '140x140') AS photo\nFROM\n    {{ source ('cartola', 'atletas') }}\nQUALIFY\n    ROW_NUMBER() OVER (\n        PARTITION BY atleta_id ORDER BY temporada_id DESC, rodada_id DESC\n    ) = 1", "language": "sql", "refs": [], "sources": [["cartola", "atletas"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.cartola.atletas"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/stg_atletas_player.sql", "compiled": true, "compiled_code": "SELECT\n    atleta_id AS player_id,\n    apelido AS nickname,\n    COALESCE(\n        slug,\n        TRANSLATE(\n            REPLACE(LOWER(apelido), ' ', '-'), '\u00e1\u00e2\u00e3\u00e7\u00e9\u00ea\u00ed\u00f1\u00f3\u00f4\u00f5\u00fa', 'aaaceeinooou'\n        )\n    ) AS slug,\n    COALESCE(\n        apelido_abreviado, REGEXP_REPLACE(TRIM(apelido), r'[a-z]+\\s', '. ')\n    ) AS short_nickname,\n    REPLACE(foto, 'FORMATO', '140x140') AS photo\nFROM\n    `palpiteiro-main`.`cartola`.`atletas`\nQUALIFY\n    ROW_NUMBER() OVER (\n        PARTITION BY atleta_id ORDER BY temporada_id DESC, rodada_id DESC\n    ) = 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_destaques_popular": {"database": "palpiteiro-main", "schema": "cartola", "name": "stg_destaques_popular", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/cartola/stg_destaques_popular.sql", "original_file_path": "models/staging/cartola/stg_destaques_popular.sql", "unique_id": "model.palpiteiro.stg_destaques_popular", "fqn": ["palpiteiro", "staging", "cartola", "stg_destaques_popular"], "alias": "stg_destaques_popular", "checksum": {"name": "sha256", "checksum": "638d85f991a4c120128403082e99203a7fb7f727fb688344f153c8246f6e3020"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373577.4038465, "relation_name": "`palpiteiro-main`.`cartola`.`stg_destaques_popular`", "raw_code": "SELECT\n    temporada AS season,\n    rodada AS round,\n    atleta_id AS player_id,\n    escalacoes AS drafts,\n    (temporada - 2000) * 100000000 + rodada * 1000000 + atleta_id AS play_id\nFROM\n    {{ source(\"cartola\", \"destaques\") }}", "language": "sql", "refs": [], "sources": [["cartola", "destaques"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.cartola.destaques"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/stg_destaques_popular.sql", "compiled": true, "compiled_code": "SELECT\n    temporada AS season,\n    rodada AS round,\n    atleta_id AS player_id,\n    escalacoes AS drafts,\n    (temporada - 2000) * 100000000 + rodada * 1000000 + atleta_id AS play_id\nFROM\n    `palpiteiro-main`.`cartola`.`destaques`", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_partidas_match": {"database": "palpiteiro-main", "schema": "cartola", "name": "stg_partidas_match", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/cartola/stg_partidas_match.sql", "original_file_path": "models/staging/cartola/stg_partidas_match.sql", "unique_id": "model.palpiteiro.stg_partidas_match", "fqn": ["palpiteiro", "staging", "cartola", "stg_partidas_match"], "alias": "stg_partidas_match", "checksum": {"name": "sha256", "checksum": "f183a0283da92b51fcbd1704cac06f76f4f98e6ea805d1b0d532af06ce8889b3"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Cartola matches", "columns": {"match_id": {"name": "match_id", "description": "Primary key", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "match_slug": {"name": "match_slug", "description": "Match slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "round": {"name": "round", "description": "Round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "UTC date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "valid": {"name": "valid", "description": "Is valid for this Cartola round", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "home": {"name": "home", "description": "Home club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "away": {"name": "away", "description": "Away club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/staging/cartola/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "cartola"}, "created_at": 1698373578.340544, "relation_name": "`palpiteiro-main`.`cartola`.`stg_partidas_match`", "raw_code": "SELECT\n    ptd.temporada AS season,\n    ptd.rodada AS round,\n    ptd.valida AS valid,\n    c_home.slug AS home,\n    c_away.slug AS away,\n    (ptd.temporada - 2000)\n    * 10000000000\n    + ptd.rodada\n    * 100000000\n    + ptd.clube_casa_id\n    * 10000\n    + ptd.clube_visitante_id AS match_id,\n    CONCAT(ptd.temporada, '-', c_home.slug, '-', c_away.slug) AS match_slug,\n    TIMESTAMP(ptd.partida_data, 'America/Sao_Paulo') AS timestamp -- noqa: L029\nFROM\n    {{ source ('cartola', 'partidas') }} AS ptd\nLEFT JOIN {{ ref (\"dim_club\") }} AS c_home ON ptd.clube_casa_id = c_home.id\nLEFT JOIN {{ ref (\"dim_club\") }} AS c_away ON ptd.clube_visitante_id = c_away.id", "language": "sql", "refs": [{"name": "dim_club", "package": null, "version": null}, {"name": "dim_club", "package": null, "version": null}], "sources": [["cartola", "partidas"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.cartola.partidas", "seed.palpiteiro.dim_club"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/stg_partidas_match.sql", "compiled": true, "compiled_code": "SELECT\n    ptd.temporada AS season,\n    ptd.rodada AS round,\n    ptd.valida AS valid,\n    c_home.slug AS home,\n    c_away.slug AS away,\n    (ptd.temporada - 2000)\n    * 10000000000\n    + ptd.rodada\n    * 100000000\n    + ptd.clube_casa_id\n    * 10000\n    + ptd.clube_visitante_id AS match_id,\n    CONCAT(ptd.temporada, '-', c_home.slug, '-', c_away.slug) AS match_slug,\n    TIMESTAMP(ptd.partida_data, 'America/Sao_Paulo') AS timestamp -- noqa: L029\nFROM\n    `palpiteiro-main`.`cartola`.`partidas` AS ptd\nLEFT JOIN `palpiteiro-main`.`cartola`.`dim_club` AS c_home ON ptd.clube_casa_id = c_home.id\nLEFT JOIN `palpiteiro-main`.`cartola`.`dim_club` AS c_away ON ptd.clube_visitante_id = c_away.id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_brasileirao_h2h": {"database": "palpiteiro-main", "schema": "odds", "name": "stg_brasileirao_h2h", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/odds/stg_brasileirao_h2h.sql", "original_file_path": "models/staging/odds/stg_brasileirao_h2h.sql", "unique_id": "model.palpiteiro.stg_brasileirao_h2h", "fqn": ["palpiteiro", "staging", "odds", "stg_brasileirao_h2h"], "alias": "stg_brasileirao_h2h", "checksum": {"name": "sha256", "checksum": "34a316b09b46641192223a1fc05e95a4c15ed72b12ab816b23e71a789dcc572e"}, "config": {"enabled": true, "alias": null, "schema": "odds", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Brasileir\u00e3o head-to-head odds.", "columns": {"match_slug": {"name": "match_slug", "description": "Matchup slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "timestamp": {"name": "timestamp", "description": "Match timestamp", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "home": {"name": "home", "description": "Home team", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "away": {"name": "away", "description": "Away team", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_home": {"name": "avg_home", "description": "Home team average odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_away": {"name": "avg_away", "description": "Away team average odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "avg_draw": {"name": "avg_draw", "description": "Draw average odds", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/staging/odds/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "odds"}, "created_at": 1698373578.574318, "relation_name": "`palpiteiro-main`.`odds`.`stg_brasileirao_h2h`", "raw_code": "SELECT\n    odds.season,\n    odds.timestamp,\n    c_home.slug AS home,\n    c_away.slug AS away,\n    odds.avg_home,\n    odds.avg_away,\n    odds.avg_draw,\n    CONCAT(odds.season, '-', c_home.slug, '-', c_away.slug) AS match_slug\nFROM\n    {{ source ('odds', 'brasileirao') }} AS odds\nLEFT JOIN {{ ref (\"dim_slug\") }} AS c_home ON home = c_home.name\nLEFT JOIN {{ ref (\"dim_slug\") }} AS c_away ON away = c_away.name", "language": "sql", "refs": [{"name": "dim_slug", "package": null, "version": null}, {"name": "dim_slug", "package": null, "version": null}], "sources": [["odds", "brasileirao"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.odds.brasileirao", "seed.palpiteiro.dim_slug"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/stg_brasileirao_h2h.sql", "compiled": true, "compiled_code": "SELECT\n    odds.season,\n    odds.timestamp,\n    c_home.slug AS home,\n    c_away.slug AS away,\n    odds.avg_home,\n    odds.avg_away,\n    odds.avg_draw,\n    CONCAT(odds.season, '-', c_home.slug, '-', c_away.slug) AS match_slug\nFROM\n    `palpiteiro-main`.`odds`.`brasileirao` AS odds\nLEFT JOIN `palpiteiro-main`.`palpiteiro`.`dim_slug` AS c_home ON home = c_home.name\nLEFT JOIN `palpiteiro-main`.`palpiteiro`.`dim_slug` AS c_away ON away = c_away.name", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "model.palpiteiro.stg_spi_match": {"database": "palpiteiro-main", "schema": "fivethirtyeight", "name": "stg_spi_match", "resource_type": "model", "package_name": "palpiteiro", "path": "staging/fivethirtyeight/stg_spi_match.sql", "original_file_path": "models/staging/fivethirtyeight/stg_spi_match.sql", "unique_id": "model.palpiteiro.stg_spi_match", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "stg_spi_match"], "alias": "stg_spi_match", "checksum": {"name": "sha256", "checksum": "0f3c5a61acfe5ed9d8a4320349e30a76b13a53f329401bb5d06e6853fd53963d"}, "config": {"enabled": true, "alias": null, "schema": "fivethirtyeight", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "Brasileir\u00e3o Fivethirtyeight Soccer Power Index", "columns": {"match_slug": {"name": "match_slug", "description": "Matchup slug", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "season": {"name": "season", "description": "Season", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "date": {"name": "date", "description": "Date", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "league_id": {"name": "league_id", "description": "League ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "home": {"name": "home", "description": "Home club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "away": {"name": "away", "description": "Away club", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_home": {"name": "spi_home", "description": "Home club soccer power index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "spi_away": {"name": "spi_away", "description": "Away club soccer power index", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_home": {"name": "prob_home", "description": "Home club win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_away": {"name": "prob_away", "description": "Away club win probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "prob_tie": {"name": "prob_tie", "description": "Tie probability", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_home": {"name": "importance_home", "description": "Home club match importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "importance_away": {"name": "importance_away", "description": "Away club match importance", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_home": {"name": "proj_score_home", "description": "Home club projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "proj_score_away": {"name": "proj_score_away", "description": "Away club projected score", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "palpiteiro://models/staging/fivethirtyeight/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fivethirtyeight"}, "created_at": 1698373578.6006708, "relation_name": "`palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`", "raw_code": "SELECT\n    spi.season AS season,\n    spi.league_id AS league_id,\n    c_home.slug AS home,\n    c_away.slug AS away,\n    spi.spi1 AS spi_home,\n    spi.spi2 AS spi_away,\n    spi.prob1 AS prob_home,\n    spi.prob2 AS prob_away,\n    spi.probtie AS prob_tie,\n    spi.importance1 AS importance_home,\n    spi.importance2 AS importance_away,\n    spi.proj_score1 AS proj_score_home,\n    spi.proj_score2 AS proj_score_away,\n    DATE(spi.date) AS date, -- noqa: L029\n    CONCAT(spi.season, '-', c_home.slug, '-', c_away.slug) AS match_slug\n\nFROM\n    {{ source ('fivethirtyeight', 'spi') }} AS spi\nLEFT JOIN {{ ref (\"dim_slug\") }} AS c_home ON spi.team1 = c_home.name\nLEFT JOIN {{ ref (\"dim_slug\") }} AS c_away ON spi.team2 = c_away.name", "language": "sql", "refs": [{"name": "dim_slug", "package": null, "version": null}, {"name": "dim_slug", "package": null, "version": null}], "sources": [["fivethirtyeight", "spi"]], "metrics": [], "depends_on": {"macros": [], "nodes": ["source.palpiteiro.fivethirtyeight.spi", "seed.palpiteiro.dim_slug"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/stg_spi_match.sql", "compiled": true, "compiled_code": "SELECT\n    spi.season AS season,\n    spi.league_id AS league_id,\n    c_home.slug AS home,\n    c_away.slug AS away,\n    spi.spi1 AS spi_home,\n    spi.spi2 AS spi_away,\n    spi.prob1 AS prob_home,\n    spi.prob2 AS prob_away,\n    spi.probtie AS prob_tie,\n    spi.importance1 AS importance_home,\n    spi.importance2 AS importance_away,\n    spi.proj_score1 AS proj_score_home,\n    spi.proj_score2 AS proj_score_away,\n    DATE(spi.date) AS date, -- noqa: L029\n    CONCAT(spi.season, '-', c_home.slug, '-', c_away.slug) AS match_slug\n\nFROM\n    `palpiteiro-main`.`fivethirtyeight`.`spi` AS spi\nLEFT JOIN `palpiteiro-main`.`palpiteiro`.`dim_slug` AS c_home ON spi.team1 = c_home.name\nLEFT JOIN `palpiteiro-main`.`palpiteiro`.`dim_slug` AS c_away ON spi.team2 = c_away.name", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null}, "seed.palpiteiro.dim_club": {"database": "palpiteiro-main", "schema": "cartola", "name": "dim_club", "resource_type": "seed", "package_name": "palpiteiro", "path": "cartola/dim_club.csv", "original_file_path": "seeds/cartola/dim_club.csv", "unique_id": "seed.palpiteiro.dim_club", "fqn": ["palpiteiro", "cartola", "dim_club"], "alias": "dim_club", "checksum": {"name": "sha256", "checksum": "1a60cd493429164dc14ac88d5aabc5b22418f221db21b2c4bf945629b27b16c1"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "cartola"}, "created_at": 1698373577.4598494, "relation_name": "`palpiteiro-main`.`cartola`.`dim_club`", "raw_code": "", "root_path": "/home/runner/work/palpiteiro-data/palpiteiro-data", "depends_on": {"macros": []}}, "seed.palpiteiro.dim_status": {"database": "palpiteiro-main", "schema": "cartola", "name": "dim_status", "resource_type": "seed", "package_name": "palpiteiro", "path": "cartola/dim_status.csv", "original_file_path": "seeds/cartola/dim_status.csv", "unique_id": "seed.palpiteiro.dim_status", "fqn": ["palpiteiro", "cartola", "dim_status"], "alias": "dim_status", "checksum": {"name": "sha256", "checksum": "69e7439de089d36c3d349bd8faa21ca03bc0476b94a8aac1cbfa9452cd3fa3a3"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "cartola"}, "created_at": 1698373577.4648933, "relation_name": "`palpiteiro-main`.`cartola`.`dim_status`", "raw_code": "", "root_path": "/home/runner/work/palpiteiro-data/palpiteiro-data", "depends_on": {"macros": []}}, "seed.palpiteiro.dim_position": {"database": "palpiteiro-main", "schema": "cartola", "name": "dim_position", "resource_type": "seed", "package_name": "palpiteiro", "path": "cartola/dim_position.csv", "original_file_path": "seeds/cartola/dim_position.csv", "unique_id": "seed.palpiteiro.dim_position", "fqn": ["palpiteiro", "cartola", "dim_position"], "alias": "dim_position", "checksum": {"name": "sha256", "checksum": "9ac17382ca054856a0da56529f4531e4549f2e093913e941577b51807327fbe2"}, "config": {"enabled": true, "alias": null, "schema": "cartola", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "cartola"}, "created_at": 1698373577.468924, "relation_name": "`palpiteiro-main`.`cartola`.`dim_position`", "raw_code": "", "root_path": "/home/runner/work/palpiteiro-data/palpiteiro-data", "depends_on": {"macros": []}}, "seed.palpiteiro.dim_slug": {"database": "palpiteiro-main", "schema": "palpiteiro", "name": "dim_slug", "resource_type": "seed", "package_name": "palpiteiro", "path": "palpiteiro/dim_slug.csv", "original_file_path": "seeds/palpiteiro/dim_slug.csv", "unique_id": "seed.palpiteiro.dim_slug", "fqn": ["palpiteiro", "palpiteiro", "dim_slug"], "alias": "dim_slug", "checksum": {"name": "sha256", "checksum": "e56c56e94ddfcd02545c5ebb5b27406799844c2cd330fc57012a936400211861"}, "config": {"enabled": true, "alias": null, "schema": "palpiteiro", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "palpiteiro"}, "created_at": 1698373577.472862, "relation_name": "`palpiteiro-main`.`palpiteiro`.`dim_slug`", "raw_code": "", "root_path": "/home/runner/work/palpiteiro-data/palpiteiro-data", "depends_on": {"macros": []}}, "seed.palpiteiro.contests_metadata": {"database": "palpiteiro-main", "schema": "express", "name": "contests_metadata", "resource_type": "seed", "package_name": "palpiteiro", "path": "express/contests_metadata.csv", "original_file_path": "seeds/express/contests_metadata.csv", "unique_id": "seed.palpiteiro.contests_metadata", "fqn": ["palpiteiro", "express", "contests_metadata"], "alias": "contests_metadata", "checksum": {"name": "sha256", "checksum": "1d4506e14f4c3dd8a95d368e8889356c8ee4bb343df93c6084af17bdeddce8c7"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "express"}, "created_at": 1698373577.4769385, "relation_name": "`palpiteiro-main`.`express`.`contests_metadata`", "raw_code": "", "root_path": "/home/runner/work/palpiteiro-data/palpiteiro-data", "depends_on": {"macros": []}}, "seed.palpiteiro.historico": {"database": "palpiteiro-main", "schema": "express", "name": "historico", "resource_type": "seed", "package_name": "palpiteiro", "path": "express/historico.csv", "original_file_path": "seeds/express/historico.csv", "unique_id": "seed.palpiteiro.historico", "fqn": ["palpiteiro", "express", "historico"], "alias": "historico", "checksum": {"name": "sha256", "checksum": "824e9fee5c4dfdbdb0eb8118b981f4ec411e9e86cc95ed63b3629f1a370bc423"}, "config": {"enabled": true, "alias": null, "schema": "express", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"schema": "express"}, "created_at": 1698373577.4817836, "relation_name": "`palpiteiro-main`.`express`.`historico`", "raw_code": "", "root_path": "/home/runner/work/palpiteiro-data/palpiteiro-data", "depends_on": {"macros": []}}, "operation.palpiteiro.palpiteiro-on-run-start-0": {"database": "palpiteiro-main", "schema": "palpiteiro", "name": "palpiteiro-on-run-start-0", "resource_type": "operation", "package_name": "palpiteiro", "path": "hooks/palpiteiro-on-run-start-0.sql", "original_file_path": "./dbt_project.yml", "unique_id": "operation.palpiteiro.palpiteiro-on-run-start-0", "fqn": ["palpiteiro", "hooks", "palpiteiro-on-run-start-0"], "alias": "palpiteiro-on-run-start-0", "checksum": {"name": "sha256", "checksum": "f1f194305220f3f27f024f4f78c1f39da2387907dea110a523b792b44e4379a9"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": ["on-run-start"], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.513332, "relation_name": null, "raw_code": "{{ create_udfs() }}", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.palpiteiro.create_udfs"], "nodes": []}, "compiled_path": "target/compiled/palpiteiro/./dbt_project.yml/hooks/palpiteiro-on-run-start-0.sql", "compiled": true, "compiled_code": "\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "index": 0}, "test.palpiteiro.not_null_fct_scoring_play_id.73da630efd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_play_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_play_id.73da630efd", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_play_id"], "alias": "not_null_fct_scoring_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.7608082, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect play_id\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere play_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.unique_fct_scoring_play_id.5585695148": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_scoring_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_scoring_play_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_fct_scoring_play_id.5585695148", "fqn": ["palpiteiro", "mart", "cartola", "unique_fct_scoring_play_id"], "alias": "unique_fct_scoring_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.7642667, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/unique_fct_scoring_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select play_id as unique_field\n  from `palpiteiro-main`.`cartola`.`fct_scoring`\n  where play_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_player_id.66f3af1ed3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_player_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_player_id.66f3af1ed3", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_player_id"], "alias": "not_null_fct_scoring_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.7673144, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_season.cc9239231f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_season.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_season.cc9239231f", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_season"], "alias": "not_null_fct_scoring_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.7702708, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_round.36934674ec": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_round.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_round.36934674ec", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_round"], "alias": "not_null_fct_scoring_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.773246, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_club.b360a85f51": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_club.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_club.b360a85f51", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_club"], "alias": "not_null_fct_scoring_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.776688, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_position.c63f3f5e61": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_position", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_position.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_position.c63f3f5e61", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_position"], "alias": "not_null_fct_scoring_position", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.779619, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_position.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere position is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach.d776465b77": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["goalkeeper", "fullback", "defender", "midfielder", "forward", "coach"], "column_name": "position", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_scoring_e35e1fd4864432a5bc17091fc6a14cd5.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach.d776465b77", "fqn": ["palpiteiro", "mart", "cartola", "accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach"], "alias": "accepted_values_fct_scoring_e35e1fd4864432a5bc17091fc6a14cd5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_scoring_e35e1fd4864432a5bc17091fc6a14cd5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_scoring_e35e1fd4864432a5bc17091fc6a14cd5"}, "created_at": 1698373577.782843, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_scoring_e35e1fd4864432a5bc17091fc6a14cd5\") }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/accepted_values_fct_scoring_e35e1fd4864432a5bc17091fc6a14cd5.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`fct_scoring`\n    group by position\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'goalkeeper','fullback','defender','midfielder','forward','coach'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_position_id.83f53cb578": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position_id", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_position_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_position_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_position_id.83f53cb578", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_position_id"], "alias": "not_null_fct_scoring_position_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.804498, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_position_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_id\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere position_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position_id", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6.9b9eed2849": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [1, 2, 3, 4, 5, 6], "quote": false, "column_name": "position_id", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_scoring_573172e155336692bd26a4f78edd882f.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6.9b9eed2849", "fqn": ["palpiteiro", "mart", "cartola", "accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6"], "alias": "accepted_values_fct_scoring_573172e155336692bd26a4f78edd882f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_scoring_573172e155336692bd26a4f78edd882f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_scoring_573172e155336692bd26a4f78edd882f"}, "created_at": 1698373577.807586, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_scoring_573172e155336692bd26a4f78edd882f\") }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/accepted_values_fct_scoring_573172e155336692bd26a4f78edd882f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position_id as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`fct_scoring`\n    group by position_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position_id", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected.27a852109b": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["doubt", "suspended", "injured", "null", "expected"], "column_name": "status", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_scoring_dba8170335e07be73642db59bf0017c8.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected.27a852109b", "fqn": ["palpiteiro", "mart", "cartola", "accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected"], "alias": "accepted_values_fct_scoring_dba8170335e07be73642db59bf0017c8", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_scoring_dba8170335e07be73642db59bf0017c8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_scoring_dba8170335e07be73642db59bf0017c8"}, "created_at": 1698373577.8138928, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_scoring_dba8170335e07be73642db59bf0017c8\") }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/accepted_values_fct_scoring_dba8170335e07be73642db59bf0017c8.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`fct_scoring`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'doubt','suspended','injured','null','expected'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "status", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_total_points.d95d460ee8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "total_points", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_total_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_total_points.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_total_points.d95d460ee8", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_total_points"], "alias": "not_null_fct_scoring_total_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": "played IS TRUE", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "played IS TRUE"}, "created_at": 1698373577.8238356, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"played IS TRUE\") }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_total_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_points\nfrom (select * from `palpiteiro-main`.`cartola`.`fct_scoring` where played IS TRUE) dbt_subquery\nwhere total_points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "total_points", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_offensive_points.1967169a17": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "offensive_points", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_offensive_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_offensive_points.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_offensive_points.1967169a17", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_offensive_points"], "alias": "not_null_fct_scoring_offensive_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": "played IS TRUE", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "played IS TRUE"}, "created_at": 1698373577.8267145, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"played IS TRUE\") }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_offensive_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect offensive_points\nfrom (select * from `palpiteiro-main`.`cartola`.`fct_scoring` where played IS TRUE) dbt_subquery\nwhere offensive_points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "offensive_points", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_defensive_points.86a868b152": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "defensive_points", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_defensive_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_defensive_points.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_defensive_points.86a868b152", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_defensive_points"], "alias": "not_null_fct_scoring_defensive_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": "played IS TRUE", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"where": "played IS TRUE"}, "created_at": 1698373577.8305237, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(where=\"played IS TRUE\") }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_defensive_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect defensive_points\nfrom (select * from `palpiteiro-main`.`cartola`.`fct_scoring` where played IS TRUE) dbt_subquery\nwhere defensive_points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "defensive_points", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_played.64519246d9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "played", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_played", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_played.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_played.64519246d9", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_played"], "alias": "not_null_fct_scoring_played", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8338206, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_played.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect played\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere played is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "played", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.accepted_values_fct_scoring_played__False__True__False.c05218ffa3": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "played", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_scoring_played__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_scoring_played__False__True__False.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_scoring_played__False__True__False.c05218ffa3", "fqn": ["palpiteiro", "mart", "cartola", "accepted_values_fct_scoring_played__False__True__False"], "alias": "accepted_values_fct_scoring_played__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8372104, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/accepted_values_fct_scoring_played__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        played as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`fct_scoring`\n    group by played\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "played", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_price.2a9a107df6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "price", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_price", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_price.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_price.2a9a107df6", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_price"], "alias": "not_null_fct_scoring_price", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8431575, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_price.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere price is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_scoring_variation.1f5b122271": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "variation", "model": "{{ get_where_subquery(ref('fct_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_scoring_variation", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_scoring_variation.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_scoring_variation.1f5b122271", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_scoring_variation"], "alias": "not_null_fct_scoring_variation", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8460033, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_scoring_variation.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect variation\nfrom `palpiteiro-main`.`cartola`.`fct_scoring`\nwhere variation is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "variation", "file_key_name": "models.fct_scoring", "attached_node": "model.palpiteiro.fct_scoring"}, "test.palpiteiro.not_null_fct_match_season.cbb23c5718": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_match_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_match_season.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_match_season.cbb23c5718", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_match_season"], "alias": "not_null_fct_match_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8486323, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_match_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`cartola`.`fct_match`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.not_null_fct_match_round.7afdf7facb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_match_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_match_round.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_match_round.7afdf7facb", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_match_round"], "alias": "not_null_fct_match_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8510754, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_match_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`cartola`.`fct_match`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.not_null_fct_match_timestamp.1c9626940b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_match_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_match_timestamp.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_match_timestamp.1c9626940b", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_match_timestamp"], "alias": "not_null_fct_match_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.85382, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_match_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`cartola`.`fct_match`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.accepted_values_fct_match_valid__False__True__False.ca5ce795ec": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "valid", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_match_valid__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_match_valid__False__True__False.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_match_valid__False__True__False.ca5ce795ec", "fqn": ["palpiteiro", "mart", "cartola", "accepted_values_fct_match_valid__False__True__False"], "alias": "accepted_values_fct_match_valid__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8570437, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/accepted_values_fct_match_valid__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        valid as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`fct_match`\n    group by valid\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.not_null_fct_match_club.43cda84750": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_match_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_match_club.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_match_club.43cda84750", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_match_club"], "alias": "not_null_fct_match_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8623583, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_match_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`cartola`.`fct_match`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.not_null_fct_match_opponent.a9a83d18b2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "opponent", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_match_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_match_opponent.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_match_opponent.a9a83d18b2", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_match_opponent"], "alias": "not_null_fct_match_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8657796, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_match_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opponent\nfrom `palpiteiro-main`.`cartola`.`fct_match`\nwhere opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "opponent", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.not_null_fct_match_home.d92a3dcec1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "home", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_match_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_match_home.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_match_home.d92a3dcec1", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_match_home"], "alias": "not_null_fct_match_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8686185, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_match_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect home\nfrom `palpiteiro-main`.`cartola`.`fct_match`\nwhere home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.accepted_values_fct_match_home__False__True__False.add19dfa7d": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "home", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_match_home__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_match_home__False__True__False.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_match_home__False__True__False.add19dfa7d", "fqn": ["palpiteiro", "mart", "cartola", "accepted_values_fct_match_home__False__True__False"], "alias": "accepted_values_fct_match_home__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8709676, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/accepted_values_fct_match_home__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        home as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`fct_match`\n    group by home\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.unique_fct_match_season_round_club.0ac618f77c": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "season || '-' || round || '-' || club", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_match_season_round_club", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_match_season_round_club.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_fct_match_season_round_club.0ac618f77c", "fqn": ["palpiteiro", "mart", "cartola", "unique_fct_match_season_round_club"], "alias": "unique_fct_match_season_round_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8768098, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/unique_fct_match_season_round_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select season || '-' || round || '-' || club as unique_field\n  from `palpiteiro-main`.`cartola`.`fct_match`\n  where season || '-' || round || '-' || club is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.unique_fct_match_season_round_opponent.b6ed216ce9": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "season || '-' || round || '-' || opponent", "model": "{{ get_where_subquery(ref('fct_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_match_season_round_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_match_season_round_opponent.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_fct_match_season_round_opponent.b6ed216ce9", "fqn": ["palpiteiro", "mart", "cartola", "unique_fct_match_season_round_opponent"], "alias": "unique_fct_match_season_round_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.880561, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_match"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/unique_fct_match_season_round_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select season || '-' || round || '-' || opponent as unique_field\n  from `palpiteiro-main`.`cartola`.`fct_match`\n  where season || '-' || round || '-' || opponent is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct_match", "attached_node": "model.palpiteiro.fct_match"}, "test.palpiteiro.unique_dim_player_player_id.292908c131": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('dim_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_dim_player_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_dim_player_player_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_dim_player_player_id.292908c131", "fqn": ["palpiteiro", "mart", "cartola", "unique_dim_player_player_id"], "alias": "unique_dim_player_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8835597, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/unique_dim_player_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select player_id as unique_field\n  from `palpiteiro-main`.`cartola`.`dim_player`\n  where player_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.dim_player", "attached_node": "model.palpiteiro.dim_player"}, "test.palpiteiro.not_null_dim_player_player_id.fa05bf9435": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('dim_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_player_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_player_id.fa05bf9435", "fqn": ["palpiteiro", "mart", "cartola", "not_null_dim_player_player_id"], "alias": "not_null_dim_player_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8864286, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_dim_player_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`cartola`.`dim_player`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.dim_player", "attached_node": "model.palpiteiro.dim_player"}, "test.palpiteiro.not_null_dim_player_slug.6d54625657": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "slug", "model": "{{ get_where_subquery(ref('dim_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_slug.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_slug.6d54625657", "fqn": ["palpiteiro", "mart", "cartola", "not_null_dim_player_slug"], "alias": "not_null_dim_player_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8889027, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_dim_player_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect slug\nfrom `palpiteiro-main`.`cartola`.`dim_player`\nwhere slug is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "slug", "file_key_name": "models.dim_player", "attached_node": "model.palpiteiro.dim_player"}, "test.palpiteiro.not_null_dim_player_nickname.9da16ea4db": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "nickname", "model": "{{ get_where_subquery(ref('dim_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_nickname", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_nickname.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_nickname.9da16ea4db", "fqn": ["palpiteiro", "mart", "cartola", "not_null_dim_player_nickname"], "alias": "not_null_dim_player_nickname", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8914547, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_dim_player_nickname.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect nickname\nfrom `palpiteiro-main`.`cartola`.`dim_player`\nwhere nickname is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "nickname", "file_key_name": "models.dim_player", "attached_node": "model.palpiteiro.dim_player"}, "test.palpiteiro.not_null_dim_player_short_nickname.50305f3ebe": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "short_nickname", "model": "{{ get_where_subquery(ref('dim_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_short_nickname", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_short_nickname.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_short_nickname.50305f3ebe", "fqn": ["palpiteiro", "mart", "cartola", "not_null_dim_player_short_nickname"], "alias": "not_null_dim_player_short_nickname", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.8949332, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_dim_player_short_nickname.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_nickname\nfrom `palpiteiro-main`.`cartola`.`dim_player`\nwhere short_nickname is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "short_nickname", "file_key_name": "models.dim_player", "attached_node": "model.palpiteiro.dim_player"}, "test.palpiteiro.not_null_fct_popular_play_id.c8853223fa": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_play_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_play_id.c8853223fa", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_popular_play_id"], "alias": "not_null_fct_popular_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.89805, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_popular_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect play_id\nfrom `palpiteiro-main`.`cartola`.`fct_popular`\nwhere play_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.unique_fct_popular_play_id.c5854a12fd": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_popular_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_popular_play_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_fct_popular_play_id.c5854a12fd", "fqn": ["palpiteiro", "mart", "cartola", "unique_fct_popular_play_id"], "alias": "unique_fct_popular_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9006665, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/unique_fct_popular_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select play_id as unique_field\n  from `palpiteiro-main`.`cartola`.`fct_popular`\n  where play_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.not_null_fct_popular_player_id.5c7b73bee3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_player_id.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_player_id.5c7b73bee3", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_popular_player_id"], "alias": "not_null_fct_popular_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9032466, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_popular_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`cartola`.`fct_popular`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.not_null_fct_popular_season.279cf1e516": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_season.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_season.279cf1e516", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_popular_season"], "alias": "not_null_fct_popular_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9058359, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_popular_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`cartola`.`fct_popular`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.not_null_fct_popular_round.06286e7268": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_round.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_round.06286e7268", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_popular_round"], "alias": "not_null_fct_popular_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9082916, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_popular_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`cartola`.`fct_popular`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.not_null_fct_popular_drafts.1aa45caeb7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "drafts", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_drafts", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_drafts.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_drafts.1aa45caeb7", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_popular_drafts"], "alias": "not_null_fct_popular_drafts", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9117312, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_popular_drafts.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect drafts\nfrom `palpiteiro-main`.`cartola`.`fct_popular`\nwhere drafts is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "drafts", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.not_null_fct_popular_drafts_norm.d6053e8356": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "drafts_norm", "model": "{{ get_where_subquery(ref('fct_popular')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_drafts_norm", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_drafts_norm.sql", "original_file_path": "models/mart/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_drafts_norm.d6053e8356", "fqn": ["palpiteiro", "mart", "cartola", "not_null_fct_popular_drafts_norm"], "alias": "not_null_fct_popular_drafts_norm", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9146452, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/cartola/schema.yml/not_null_fct_popular_drafts_norm.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect drafts_norm\nfrom `palpiteiro-main`.`cartola`.`fct_popular`\nwhere drafts_norm is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "drafts_norm", "file_key_name": "models.fct_popular", "attached_node": "model.palpiteiro.fct_popular"}, "test.palpiteiro.not_null_fct_h2h_season.c57a804223": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_h2h_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_h2h_season.sql", "original_file_path": "models/mart/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_h2h_season.c57a804223", "fqn": ["palpiteiro", "mart", "odds", "not_null_fct_h2h_season"], "alias": "not_null_fct_h2h_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9215848, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/odds/schema.yml/not_null_fct_h2h_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`odds`.`fct_h2h`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_h2h", "attached_node": "model.palpiteiro.fct_h2h"}, "test.palpiteiro.not_null_fct_h2h_timestamp.a4b25de270": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('fct_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_h2h_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_h2h_timestamp.sql", "original_file_path": "models/mart/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_h2h_timestamp.a4b25de270", "fqn": ["palpiteiro", "mart", "odds", "not_null_fct_h2h_timestamp"], "alias": "not_null_fct_h2h_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.92434, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/odds/schema.yml/not_null_fct_h2h_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`odds`.`fct_h2h`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.fct_h2h", "attached_node": "model.palpiteiro.fct_h2h"}, "test.palpiteiro.not_null_fct_h2h_club.8ec5e0bf8f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('fct_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_h2h_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_h2h_club.sql", "original_file_path": "models/mart/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_h2h_club.8ec5e0bf8f", "fqn": ["palpiteiro", "mart", "odds", "not_null_fct_h2h_club"], "alias": "not_null_fct_h2h_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.927299, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/odds/schema.yml/not_null_fct_h2h_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`odds`.`fct_h2h`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.fct_h2h", "attached_node": "model.palpiteiro.fct_h2h"}, "test.palpiteiro.not_null_fct_h2h_opponent.48c36e9477": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "opponent", "model": "{{ get_where_subquery(ref('fct_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_h2h_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_h2h_opponent.sql", "original_file_path": "models/mart/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_h2h_opponent.48c36e9477", "fqn": ["palpiteiro", "mart", "odds", "not_null_fct_h2h_opponent"], "alias": "not_null_fct_h2h_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9305117, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/odds/schema.yml/not_null_fct_h2h_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opponent\nfrom `palpiteiro-main`.`odds`.`fct_h2h`\nwhere opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "opponent", "file_key_name": "models.fct_h2h", "attached_node": "model.palpiteiro.fct_h2h"}, "test.palpiteiro.unique_fct_h2h_season_date_timestamp_club.236d162d50": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "season || '-' || date(timestamp) || '-' || club", "model": "{{ get_where_subquery(ref('fct_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_h2h_season_date_timestamp_club", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_h2h_season_date_timestamp_club.sql", "original_file_path": "models/mart/odds/schema.yml", "unique_id": "test.palpiteiro.unique_fct_h2h_season_date_timestamp_club.236d162d50", "fqn": ["palpiteiro", "mart", "odds", "unique_fct_h2h_season_date_timestamp_club"], "alias": "unique_fct_h2h_season_date_timestamp_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9333484, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/odds/schema.yml/unique_fct_h2h_season_date_timestamp_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select season || '-' || date(timestamp) || '-' || club as unique_field\n  from `palpiteiro-main`.`odds`.`fct_h2h`\n  where season || '-' || date(timestamp) || '-' || club is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct_h2h", "attached_node": "model.palpiteiro.fct_h2h"}, "test.palpiteiro.not_null_fct_club_club.59b419c957": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_club.59b419c957", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_club"], "alias": "not_null_fct_club_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.977201, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_season.6f0ac61ca5": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_season.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_season.6f0ac61ca5", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_season"], "alias": "not_null_fct_club_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9803376, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_round.fb0732dc75": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_round.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_round.fb0732dc75", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_round"], "alias": "not_null_fct_club_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9829834, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_timestamp.4701dd0456": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_timestamp.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_timestamp.4701dd0456", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_timestamp"], "alias": "not_null_fct_club_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9858382, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_home.f43d7de87e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "home", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_home.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_home.f43d7de87e", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_home"], "alias": "not_null_fct_club_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9886947, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect home\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.accepted_values_fct_club_home__False__True__False.7b22464e1a": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "home", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_club_home__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_club_home__False__True__False.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_club_home__False__True__False.7b22464e1a", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_fct_club_home__False__True__False"], "alias": "accepted_values_fct_club_home__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9916618, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_fct_club_home__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        home as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`fct_club`\n    group by home\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_opponent.e767f1b6d9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "opponent", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_opponent.e767f1b6d9", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_opponent"], "alias": "not_null_fct_club_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373577.9984412, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "opponent", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_valid.ca42e75ffe": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_valid", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_valid.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_valid.ca42e75ffe", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_valid"], "alias": "not_null_fct_club_valid", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0012333, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_valid.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere valid is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.accepted_values_fct_club_valid__False__True__False.18806e7c8d": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "valid", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_club_valid__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_club_valid__False__True__False.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_club_valid__False__True__False.18806e7c8d", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_fct_club_valid__False__True__False"], "alias": "accepted_values_fct_club_valid__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0040967, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_fct_club_valid__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        valid as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`fct_club`\n    group by valid\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_spi_club.a4e88636ba": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_club", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_spi_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_spi_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_spi_club.a4e88636ba", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_spi_club"], "alias": "not_null_fct_club_spi_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0103798, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_spi_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere spi_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_club", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_spi_opponent.7ff3c41878": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_opponent", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_spi_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_spi_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_spi_opponent.7ff3c41878", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_spi_opponent"], "alias": "not_null_fct_club_spi_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.012961, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_spi_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere spi_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_opponent", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_prob_club.07dddbc2b2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_club", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_prob_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_prob_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_prob_club.07dddbc2b2", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_prob_club"], "alias": "not_null_fct_club_prob_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0156596, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_prob_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere prob_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_club", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_prob_opponent.3fcf614a5d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_opponent", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_prob_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_prob_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_prob_opponent.3fcf614a5d", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_prob_opponent"], "alias": "not_null_fct_club_prob_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0185926, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_prob_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere prob_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_opponent", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_prob_tie.6aa8da3208": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_tie", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_prob_tie", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_prob_tie.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_prob_tie.6aa8da3208", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_prob_tie"], "alias": "not_null_fct_club_prob_tie", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0254238, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_prob_tie.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_tie\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere prob_tie is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_tie", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_proj_score_club.9250f71988": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_club", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_proj_score_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_proj_score_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_proj_score_club.9250f71988", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_proj_score_club"], "alias": "not_null_fct_club_proj_score_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.028499, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_proj_score_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere proj_score_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_club", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_proj_score_opponent.247117f603": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_opponent", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_proj_score_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_proj_score_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_proj_score_opponent.247117f603", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_proj_score_opponent"], "alias": "not_null_fct_club_proj_score_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.031058, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_proj_score_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere proj_score_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_opponent", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_avg_odds_club.36b00345cf": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_odds_club", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_avg_odds_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_avg_odds_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_avg_odds_club.36b00345cf", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_avg_odds_club"], "alias": "not_null_fct_club_avg_odds_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.033691, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_avg_odds_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_odds_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere avg_odds_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "avg_odds_club", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_avg_odds_opponent.efb6e0c712": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_odds_opponent", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_avg_odds_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_avg_odds_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_avg_odds_opponent.efb6e0c712", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_avg_odds_opponent"], "alias": "not_null_fct_club_avg_odds_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.036447, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_avg_odds_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_odds_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere avg_odds_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "avg_odds_opponent", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_avg_odds_draw.2685275f7e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_odds_draw", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_avg_odds_draw", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_avg_odds_draw.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_avg_odds_draw.2685275f7e", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_avg_odds_draw"], "alias": "not_null_fct_club_avg_odds_draw", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0403056, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_avg_odds_draw.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_odds_draw\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere avg_odds_draw is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "avg_odds_draw", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_valid_club_last_19.6bead0ba54": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_club_last_19", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_valid_club_last_19", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_valid_club_last_19.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_valid_club_last_19.6bead0ba54", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_valid_club_last_19"], "alias": "not_null_fct_club_valid_club_last_19", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.042786, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_valid_club_last_19.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_club_last_19\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere valid_club_last_19 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_club_last_19", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_valid_opponent_last_19.c37f80df2e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_opponent_last_19", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_valid_opponent_last_19", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_valid_opponent_last_19.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_valid_opponent_last_19.c37f80df2e", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_valid_opponent_last_19"], "alias": "not_null_fct_club_valid_opponent_last_19", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0454917, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_valid_opponent_last_19.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_opponent_last_19\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere valid_opponent_last_19 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_opponent_last_19", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_valid_club_last_5.75e965b6a6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_club_last_5", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_valid_club_last_5", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_valid_club_last_5.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_valid_club_last_5.75e965b6a6", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_valid_club_last_5"], "alias": "not_null_fct_club_valid_club_last_5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0485785, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_valid_club_last_5.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_club_last_5\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere valid_club_last_5 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_club_last_5", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_club_valid_opponent_last_5.d6649d4b45": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_opponent_last_5", "model": "{{ get_where_subquery(ref('fct_club')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_club_valid_opponent_last_5", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_club_valid_opponent_last_5.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_club_valid_opponent_last_5.d6649d4b45", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_club_valid_opponent_last_5"], "alias": "not_null_fct_club_valid_opponent_last_5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0512202, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_club", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_club"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_club_valid_opponent_last_5.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_opponent_last_5\nfrom `palpiteiro-main`.`palpiteiro`.`fct_club`\nwhere valid_opponent_last_5 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_opponent_last_5", "file_key_name": "models.fct_club", "attached_node": "model.palpiteiro.fct_club"}, "test.palpiteiro.not_null_fct_player_play_id.924b230eae": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_play_id.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_play_id.924b230eae", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_play_id"], "alias": "not_null_fct_player_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.05471, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect play_id\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere play_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.unique_fct_player_play_id.ae873cf4fb": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_player_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_player_play_id.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.unique_fct_player_play_id.ae873cf4fb", "fqn": ["palpiteiro", "mart", "palpiteiro", "unique_fct_player_play_id"], "alias": "unique_fct_player_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0581527, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/unique_fct_player_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select play_id as unique_field\n  from `palpiteiro-main`.`palpiteiro`.`fct_player`\n  where play_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_player_id.e7fb38f7d2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_player_id.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_player_id.e7fb38f7d2", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_player_id"], "alias": "not_null_fct_player_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0606234, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_season.399f9018fe": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_season.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_season.399f9018fe", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_season"], "alias": "not_null_fct_player_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.063171, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_round.c15295fc67": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_round.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_round.c15295fc67", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_round"], "alias": "not_null_fct_player_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.065769, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_timestamp.130555c28a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_timestamp.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_timestamp.130555c28a", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_timestamp"], "alias": "not_null_fct_player_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0686445, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_club.3f014a344c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_club.3f014a344c", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_club"], "alias": "not_null_fct_player_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.07207, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.accepted_values_fct_player_valid__False__True__False.dc8ff86a16": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "valid", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_player_valid__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_player_valid__False__True__False.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_player_valid__False__True__False.dc8ff86a16", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_fct_player_valid__False__True__False"], "alias": "accepted_values_fct_player_valid__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.074655, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_fct_player_valid__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        valid as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`fct_player`\n    group by valid\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_price_cartola.02bdf32c72": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "price_cartola", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_price_cartola", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_price_cartola.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_price_cartola.02bdf32c72", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_price_cartola"], "alias": "not_null_fct_player_price_cartola", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0812514, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_price_cartola.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price_cartola\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere price_cartola is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price_cartola", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_price_cartola_express.32e7893827": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "price_cartola_express", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_price_cartola_express", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_price_cartola_express.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_price_cartola_express.32e7893827", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_price_cartola_express"], "alias": "not_null_fct_player_price_cartola_express", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0841117, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_price_cartola_express.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price_cartola_express\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere price_cartola_express is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price_cartola_express", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_position.3b9ad0825f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_position", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_position.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_position.3b9ad0825f", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_position"], "alias": "not_null_fct_player_position", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.086947, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_position.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere position is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach.660c885d81": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["goalkeeper", "fullback", "defender", "midfielder", "forward", "coach"], "column_name": "position", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_player_7b32f42d3259dd67adda30e2eb63f77f.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach.660c885d81", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach"], "alias": "accepted_values_fct_player_7b32f42d3259dd67adda30e2eb63f77f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_player_7b32f42d3259dd67adda30e2eb63f77f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_player_7b32f42d3259dd67adda30e2eb63f77f"}, "created_at": 1698373578.089897, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_player_7b32f42d3259dd67adda30e2eb63f77f\") }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_fct_player_7b32f42d3259dd67adda30e2eb63f77f.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`fct_player`\n    group by position\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'goalkeeper','fullback','defender','midfielder','forward','coach'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_position_id.78ffa74f15": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position_id", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_position_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_position_id.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_position_id.78ffa74f15", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_position_id"], "alias": "not_null_fct_player_position_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0964227, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_position_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_id\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere position_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position_id", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.accepted_values_fct_player_position_id__False__1__2__3__4__5__6.292d4fd108": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [1, 2, 3, 4, 5, 6], "quote": false, "column_name": "position_id", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_player_position_id__False__1__2__3__4__5__6", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_player_position_id__False__1__2__3__4__5__6.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_player_position_id__False__1__2__3__4__5__6.292d4fd108", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_fct_player_position_id__False__1__2__3__4__5__6"], "alias": "accepted_values_fct_player_position_id__False__1__2__3__4__5__6", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.0991192, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_fct_player_position_id__False__1__2__3__4__5__6.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position_id as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`fct_player`\n    group by position_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position_id", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.accepted_values_fct_player_status__doubt__suspended__injured__null__expected.64e982e9e3": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["doubt", "suspended", "injured", "null", "expected"], "column_name": "status", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_fct_player_status__doubt__suspended__injured__null__expected", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_fct_player_e50500fe7db425e17e2997bc5986cc62.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_fct_player_status__doubt__suspended__injured__null__expected.64e982e9e3", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_fct_player_status__doubt__suspended__injured__null__expected"], "alias": "accepted_values_fct_player_e50500fe7db425e17e2997bc5986cc62", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_fct_player_e50500fe7db425e17e2997bc5986cc62", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_fct_player_e50500fe7db425e17e2997bc5986cc62"}, "created_at": 1698373578.1052086, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_fct_player_e50500fe7db425e17e2997bc5986cc62\") }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_fct_player_e50500fe7db425e17e2997bc5986cc62.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`fct_player`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'doubt','suspended','injured','null','expected'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "status", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_spi_club.e941397e61": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_club", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_spi_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_spi_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_spi_club.e941397e61", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_spi_club"], "alias": "not_null_fct_player_spi_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1111732, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_spi_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere spi_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_club", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_spi_opponent.8a9f6a40a4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_opponent", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_spi_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_spi_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_spi_opponent.8a9f6a40a4", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_spi_opponent"], "alias": "not_null_fct_player_spi_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1137846, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_spi_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere spi_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_opponent", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_prob_club.fd0bda9b1a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_club", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_prob_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_prob_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_prob_club.fd0bda9b1a", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_prob_club"], "alias": "not_null_fct_player_prob_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.117571, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_prob_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere prob_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_club", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_prob_opponent.056cddd319": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_opponent", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_prob_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_prob_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_prob_opponent.056cddd319", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_prob_opponent"], "alias": "not_null_fct_player_prob_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1201463, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_prob_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere prob_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_opponent", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_prob_tie.ac153e8370": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_tie", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_prob_tie", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_prob_tie.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_prob_tie.ac153e8370", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_prob_tie"], "alias": "not_null_fct_player_prob_tie", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1229582, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_prob_tie.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_tie\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere prob_tie is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_tie", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_proj_score_club.42054ea31f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_club", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_proj_score_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_proj_score_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_proj_score_club.42054ea31f", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_proj_score_club"], "alias": "not_null_fct_player_proj_score_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.12547, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_proj_score_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere proj_score_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_club", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_proj_score_opponent.3fcf06f229": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_opponent", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_proj_score_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_proj_score_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_proj_score_opponent.3fcf06f229", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_proj_score_opponent"], "alias": "not_null_fct_player_proj_score_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1282516, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_proj_score_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere proj_score_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_opponent", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_valid_club_last_19.bcef3cf407": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_club_last_19", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_valid_club_last_19", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_valid_club_last_19.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_valid_club_last_19.bcef3cf407", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_valid_club_last_19"], "alias": "not_null_fct_player_valid_club_last_19", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1312544, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_valid_club_last_19.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_club_last_19\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere valid_club_last_19 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_club_last_19", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_valid_opponent_last_19.ff554939b4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_opponent_last_19", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_valid_opponent_last_19", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_valid_opponent_last_19.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_valid_opponent_last_19.ff554939b4", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_valid_opponent_last_19"], "alias": "not_null_fct_player_valid_opponent_last_19", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1349597, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_valid_opponent_last_19.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_opponent_last_19\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere valid_opponent_last_19 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_opponent_last_19", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_valid_club_last_5.7ca96c36c3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_club_last_5", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_valid_club_last_5", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_valid_club_last_5.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_valid_club_last_5.7ca96c36c3", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_valid_club_last_5"], "alias": "not_null_fct_player_valid_club_last_5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1380022, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_valid_club_last_5.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_club_last_5\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere valid_club_last_5 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_club_last_5", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_valid_opponent_last_5.afbfe8369e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "valid_opponent_last_5", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_valid_opponent_last_5", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_valid_opponent_last_5.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_valid_opponent_last_5.afbfe8369e", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_valid_opponent_last_5"], "alias": "not_null_fct_player_valid_opponent_last_5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1405888, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_valid_opponent_last_5.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect valid_opponent_last_5\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere valid_opponent_last_5 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid_opponent_last_5", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_avg_odds_club.c9efd67540": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_odds_club", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_avg_odds_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_avg_odds_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_avg_odds_club.c9efd67540", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_avg_odds_club"], "alias": "not_null_fct_player_avg_odds_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1432626, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_avg_odds_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_odds_club\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere avg_odds_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "avg_odds_club", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_avg_odds_opponent.502530ee1e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_odds_opponent", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_avg_odds_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_avg_odds_opponent.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_avg_odds_opponent.502530ee1e", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_avg_odds_opponent"], "alias": "not_null_fct_player_avg_odds_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1458752, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_avg_odds_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_odds_opponent\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere avg_odds_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "avg_odds_opponent", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_avg_odds_draw.e36c6852db": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_odds_draw", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_avg_odds_draw", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_avg_odds_draw.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_avg_odds_draw.e36c6852db", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_avg_odds_draw"], "alias": "not_null_fct_player_avg_odds_draw", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1496155, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_avg_odds_draw.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect avg_odds_draw\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere avg_odds_draw is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "avg_odds_draw", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_played_last_19.d3192258e7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "played_last_19", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_played_last_19", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_played_last_19.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_played_last_19.d3192258e7", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_played_last_19"], "alias": "not_null_fct_player_played_last_19", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1521516, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_played_last_19.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect played_last_19\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere played_last_19 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "played_last_19", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.not_null_fct_player_played_last_5.188463159c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "played_last_5", "model": "{{ get_where_subquery(ref('fct_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_player_played_last_5", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_player_played_last_5.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_player_played_last_5.188463159c", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_fct_player_played_last_5"], "alias": "not_null_fct_player_played_last_5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.154876, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_player"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_fct_player_played_last_5.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect played_last_5\nfrom `palpiteiro-main`.`palpiteiro`.`fct_player`\nwhere played_last_5 is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "played_last_5", "file_key_name": "models.fct_player", "attached_node": "model.palpiteiro.fct_player"}, "test.palpiteiro.unique_dim_player_last_id.f60e176f1a": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_dim_player_last_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_dim_player_last_id.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.unique_dim_player_last_id.f60e176f1a", "fqn": ["palpiteiro", "mart", "palpiteiro", "unique_dim_player_last_id"], "alias": "unique_dim_player_last_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1572757, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/unique_dim_player_last_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select id as unique_field\n  from `palpiteiro-main`.`palpiteiro`.`dim_player_last`\n  where id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_id.b75d66c182": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_id.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_id.b75d66c182", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_id"], "alias": "not_null_dim_player_last_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1603177, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_timestamp.89614bfcf1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_timestamp.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_timestamp.89614bfcf1", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_timestamp"], "alias": "not_null_dim_player_last_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.16327, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_name.96b4d87b04": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "name", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_name", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_name.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_name.96b4d87b04", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_name"], "alias": "not_null_dim_player_last_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.166809, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_name.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect name\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere name is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "name", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_club.84b8cc80dd": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_club.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_club.84b8cc80dd", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_club"], "alias": "not_null_dim_player_last_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1697912, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_club_badge.b620e6d1e0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club_badge", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_club_badge", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_club_badge.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_club_badge.b620e6d1e0", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_club_badge"], "alias": "not_null_dim_player_last_club_badge", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1723425, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_club_badge.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club_badge\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere club_badge is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club_badge", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_position.96d76a6433": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_position", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_position.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_position.96d76a6433", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_position"], "alias": "not_null_dim_player_last_position", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1747494, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_position.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere position is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach.0c8c12982e": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["goalkeeper", "fullback", "defender", "midfielder", "forward", "coach"], "column_name": "position", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_dim_player_las_c6ccc1f85bff69a6855bea269fde2979.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach.0c8c12982e", "fqn": ["palpiteiro", "mart", "palpiteiro", "accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach"], "alias": "accepted_values_dim_player_las_c6ccc1f85bff69a6855bea269fde2979", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_dim_player_las_c6ccc1f85bff69a6855bea269fde2979", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_dim_player_las_c6ccc1f85bff69a6855bea269fde2979"}, "created_at": 1698373578.1778946, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_dim_player_las_c6ccc1f85bff69a6855bea269fde2979\") }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/accepted_values_dim_player_las_c6ccc1f85bff69a6855bea269fde2979.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`palpiteiro`.`dim_player_last`\n    group by position\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'goalkeeper','fullback','defender','midfielder','forward','coach'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_price_cartola.2a9cd148c3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "price_cartola", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_price_cartola", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_price_cartola.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_price_cartola.2a9cd148c3", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_price_cartola"], "alias": "not_null_dim_player_last_price_cartola", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1853614, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_price_cartola.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price_cartola\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere price_cartola is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price_cartola", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_price_cartola_express.77f0e352f7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "price_cartola_express", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_price_cartola_express", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_price_cartola_express.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_price_cartola_express.77f0e352f7", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_price_cartola_express"], "alias": "not_null_dim_player_last_price_cartola_express", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.187865, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_price_cartola_express.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price_cartola_express\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere price_cartola_express is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price_cartola_express", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_points.08809dfccb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_points.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_points.08809dfccb", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_points"], "alias": "not_null_dim_player_last_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.1908836, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_dim_player_last_materialized_at.dfa312315b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "materialized_at", "model": "{{ get_where_subquery(ref('dim_player_last')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_dim_player_last_materialized_at", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_dim_player_last_materialized_at.sql", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "test.palpiteiro.not_null_dim_player_last_materialized_at.dfa312315b", "fqn": ["palpiteiro", "mart", "palpiteiro", "not_null_dim_player_last_materialized_at"], "alias": "not_null_dim_player_last_materialized_at", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.193665, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.dim_player_last"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/palpiteiro/schema.yml/not_null_dim_player_last_materialized_at.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect materialized_at\nfrom `palpiteiro-main`.`palpiteiro`.`dim_player_last`\nwhere materialized_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "materialized_at", "file_key_name": "models.dim_player_last", "attached_node": "model.palpiteiro.dim_player_last"}, "test.palpiteiro.not_null_fct_popular_points_season.6b2b5e927e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_popular_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_points_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_points_season.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_points_season.6b2b5e927e", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_popular_points_season"], "alias": "not_null_fct_popular_points_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2203956, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_popular_points_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`express`.`fct_popular_points`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_popular_points", "attached_node": "model.palpiteiro.fct_popular_points"}, "test.palpiteiro.not_null_fct_popular_points_round.8c5f367c56": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_popular_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_points_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_points_round.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_points_round.8c5f367c56", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_popular_points_round"], "alias": "not_null_fct_popular_points_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.223159, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_popular_points_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`express`.`fct_popular_points`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_popular_points", "attached_node": "model.palpiteiro.fct_popular_points"}, "test.palpiteiro.not_null_fct_popular_points_points.c2e836e4f9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('fct_popular_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_popular_points_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_popular_points_points.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_popular_points_points.c2e836e4f9", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_popular_points_points"], "alias": "not_null_fct_popular_points_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2256768, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_popular_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_popular_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_popular_points_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`express`.`fct_popular_points`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.fct_popular_points", "attached_node": "model.palpiteiro.fct_popular_points"}, "test.palpiteiro.not_null_fct_best_points_season.4d912cfd4a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_best_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_best_points_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_best_points_season.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_best_points_season.4d912cfd4a", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_best_points_season"], "alias": "not_null_fct_best_points_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.228416, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_best_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_best_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_best_points_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`express`.`fct_best_points`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_best_points", "attached_node": "model.palpiteiro.fct_best_points"}, "test.palpiteiro.not_null_fct_best_points_round.5a3ac1bfff": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_best_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_best_points_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_best_points_round.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_best_points_round.5a3ac1bfff", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_best_points_round"], "alias": "not_null_fct_best_points_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.231173, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_best_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_best_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_best_points_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`express`.`fct_best_points`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_best_points", "attached_node": "model.palpiteiro.fct_best_points"}, "test.palpiteiro.not_null_fct_best_points_points.a85913a38c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('fct_best_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_best_points_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_best_points_points.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_best_points_points.a85913a38c", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_best_points_points"], "alias": "not_null_fct_best_points_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2340765, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_best_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_best_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_best_points_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`express`.`fct_best_points`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.fct_best_points", "attached_node": "model.palpiteiro.fct_best_points"}, "test.palpiteiro.not_null_fct_best_expected_points_season.439cb23115": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_best_expected_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_best_expected_points_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_best_expected_points_season.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_best_expected_points_season.439cb23115", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_best_expected_points_season"], "alias": "not_null_fct_best_expected_points_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2368817, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_best_expected_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_best_expected_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_best_expected_points_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`express`.`fct_best_expected_points`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_best_expected_points", "attached_node": "model.palpiteiro.fct_best_expected_points"}, "test.palpiteiro.not_null_fct_best_expected_points_round.9e19354d18": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_best_expected_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_best_expected_points_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_best_expected_points_round.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_best_expected_points_round.9e19354d18", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_best_expected_points_round"], "alias": "not_null_fct_best_expected_points_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2399235, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_best_expected_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_best_expected_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_best_expected_points_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`express`.`fct_best_expected_points`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_best_expected_points", "attached_node": "model.palpiteiro.fct_best_expected_points"}, "test.palpiteiro.not_null_fct_best_expected_points_points.6cec6b47ed": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('fct_best_expected_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_best_expected_points_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_best_expected_points_points.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_best_expected_points_points.6cec6b47ed", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_best_expected_points_points"], "alias": "not_null_fct_best_expected_points_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.242642, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_best_expected_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_best_expected_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_best_expected_points_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`express`.`fct_best_expected_points`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.fct_best_expected_points", "attached_node": "model.palpiteiro.fct_best_expected_points"}, "test.palpiteiro.unique_fct_prize_rank_id.8808e5bf31": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "rank_id", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_prize_rank_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_prize_rank_id.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.unique_fct_prize_rank_id.8808e5bf31", "fqn": ["palpiteiro", "mart", "express", "unique_fct_prize_rank_id"], "alias": "unique_fct_prize_rank_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2467413, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/unique_fct_prize_rank_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select rank_id as unique_field\n  from `palpiteiro-main`.`express`.`fct_prize`\n  where rank_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "rank_id", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_rank_id.a914f86ca2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "rank_id", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_rank_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_rank_id.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_rank_id.a914f86ca2", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_rank_id"], "alias": "not_null_fct_prize_rank_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2500958, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_rank_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rank_id\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere rank_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "rank_id", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_season.ad40506eb4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_season.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_season.ad40506eb4", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_season"], "alias": "not_null_fct_prize_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.252884, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_round.351efaf4e6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_round.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_round.351efaf4e6", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_round"], "alias": "not_null_fct_prize_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2556875, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_contest.dab2d646da": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contest", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_contest", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_contest.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_contest.dab2d646da", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_contest"], "alias": "not_null_fct_prize_contest", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.258458, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_contest.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contest\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere contest is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "contest", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_points.b11461b735": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_points.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_points.b11461b735", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_points"], "alias": "not_null_fct_prize_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2613947, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_prizes.e2872c7d20": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prizes", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_prizes", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_prizes.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_prizes.e2872c7d20", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_prizes"], "alias": "not_null_fct_prize_prizes", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.263821, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_prizes.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prizes\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere prizes is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prizes", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.not_null_fct_prize_rank.359534a391": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "rank", "model": "{{ get_where_subquery(ref('fct_prize')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_prize_rank", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_prize_rank.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_prize_rank.359534a391", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_prize_rank"], "alias": "not_null_fct_prize_rank", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2670014, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_prize", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_prize"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_prize_rank.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rank\nfrom `palpiteiro-main`.`express`.`fct_prize`\nwhere rank is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "rank", "file_key_name": "models.fct_prize", "attached_node": "model.palpiteiro.fct_prize"}, "test.palpiteiro.unique_fct_norm_points_rank_id.14599c7ace": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "rank_id", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_norm_points_rank_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_norm_points_rank_id.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.unique_fct_norm_points_rank_id.14599c7ace", "fqn": ["palpiteiro", "mart", "express", "unique_fct_norm_points_rank_id"], "alias": "unique_fct_norm_points_rank_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2700906, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/unique_fct_norm_points_rank_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select rank_id as unique_field\n  from `palpiteiro-main`.`express`.`fct_norm_points`\n  where rank_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "rank_id", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_norm_points_rank_id.1474eb70c8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "rank_id", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_norm_points_rank_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_norm_points_rank_id.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_norm_points_rank_id.1474eb70c8", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_norm_points_rank_id"], "alias": "not_null_fct_norm_points_rank_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2733793, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_norm_points_rank_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect rank_id\nfrom `palpiteiro-main`.`express`.`fct_norm_points`\nwhere rank_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "rank_id", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_norm_points_season.0ce2635941": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_norm_points_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_norm_points_season.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_norm_points_season.0ce2635941", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_norm_points_season"], "alias": "not_null_fct_norm_points_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.276301, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_norm_points_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`express`.`fct_norm_points`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_norm_points_round.6b7a10fe0a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_norm_points_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_norm_points_round.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_norm_points_round.6b7a10fe0a", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_norm_points_round"], "alias": "not_null_fct_norm_points_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2789385, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_norm_points_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`express`.`fct_norm_points`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_norm_points_contest.33557b263c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "contest", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_norm_points_contest", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_norm_points_contest.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_norm_points_contest.33557b263c", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_norm_points_contest"], "alias": "not_null_fct_norm_points_contest", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2823155, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_norm_points_contest.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect contest\nfrom `palpiteiro-main`.`express`.`fct_norm_points`\nwhere contest is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "contest", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_norm_points_points_norm.b02603cb93": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points_norm", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_norm_points_points_norm", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_norm_points_points_norm.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_norm_points_points_norm.b02603cb93", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_norm_points_points_norm"], "alias": "not_null_fct_norm_points_points_norm", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2851272, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_norm_points_points_norm.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points_norm\nfrom `palpiteiro-main`.`express`.`fct_norm_points`\nwhere points_norm is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points_norm", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_norm_points_prizes.14bcc50613": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prizes", "model": "{{ get_where_subquery(ref('fct_norm_points')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_norm_points_prizes", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_norm_points_prizes.sql", "original_file_path": "models/mart/express/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_norm_points_prizes.14bcc50613", "fqn": ["palpiteiro", "mart", "express", "not_null_fct_norm_points_prizes"], "alias": "not_null_fct_norm_points_prizes", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2875788, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_norm_points", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_norm_points"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/express/schema.yml/not_null_fct_norm_points_prizes.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prizes\nfrom `palpiteiro-main`.`express`.`fct_norm_points`\nwhere prizes is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prizes", "file_key_name": "models.fct_norm_points", "attached_node": "model.palpiteiro.fct_norm_points"}, "test.palpiteiro.not_null_fct_spi_season.ab67e5ba7e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_season.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_season.ab67e5ba7e", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_season"], "alias": "not_null_fct_spi_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2942827, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_date.ec0c4025ea": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_date", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_date.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_date.ec0c4025ea", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_date"], "alias": "not_null_fct_spi_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.2970726, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_club.9e59c5653e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_club.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_club.9e59c5653e", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_club"], "alias": "not_null_fct_spi_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.30079, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_opponent.6e8c02a367": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "opponent", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_opponent.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_opponent.6e8c02a367", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_opponent"], "alias": "not_null_fct_spi_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3037908, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opponent\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "opponent", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_spi_club.d31ac9e0fc": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_club", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_spi_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_spi_club.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_spi_club.d31ac9e0fc", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_spi_club"], "alias": "not_null_fct_spi_spi_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.306422, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_spi_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_club\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere spi_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_club", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_spi_opponent.7697652318": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_opponent", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_spi_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_spi_opponent.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_spi_opponent.7697652318", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_spi_opponent"], "alias": "not_null_fct_spi_spi_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3091824, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_spi_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_opponent\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere spi_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_opponent", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_prob_club.49caf6f648": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_club", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_prob_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_prob_club.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_prob_club.49caf6f648", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_prob_club"], "alias": "not_null_fct_spi_prob_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3117352, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_prob_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_club\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere prob_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_club", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_prob_opponent.3a40ebc85a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_opponent", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_prob_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_prob_opponent.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_prob_opponent.3a40ebc85a", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_prob_opponent"], "alias": "not_null_fct_spi_prob_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3147016, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_prob_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_opponent\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere prob_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_opponent", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_prob_tie.d05eb39d10": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_tie", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_prob_tie", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_prob_tie.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_prob_tie.d05eb39d10", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_prob_tie"], "alias": "not_null_fct_spi_prob_tie", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3173118, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_prob_tie.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_tie\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere prob_tie is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_tie", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_importance_club.db196afee4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "importance_club", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_importance_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_importance_club.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_importance_club.db196afee4", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_importance_club"], "alias": "not_null_fct_spi_importance_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3203983, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_importance_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect importance_club\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere importance_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "importance_club", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_importance_opponent.d54d6fbd8d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "importance_opponent", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_importance_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_importance_opponent.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_importance_opponent.d54d6fbd8d", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_importance_opponent"], "alias": "not_null_fct_spi_importance_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3231084, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_importance_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect importance_opponent\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere importance_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "importance_opponent", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_proj_score_club.31b27c5595": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_club", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_proj_score_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_proj_score_club.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_proj_score_club.31b27c5595", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_proj_score_club"], "alias": "not_null_fct_spi_proj_score_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.325585, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_proj_score_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_club\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere proj_score_club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_club", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.not_null_fct_spi_proj_score_opponent.f66814ae82": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_opponent", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_fct_spi_proj_score_opponent", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_fct_spi_proj_score_opponent.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_fct_spi_proj_score_opponent.f66814ae82", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "not_null_fct_spi_proj_score_opponent"], "alias": "not_null_fct_spi_proj_score_opponent", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3279614, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/not_null_fct_spi_proj_score_opponent.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_opponent\nfrom `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\nwhere proj_score_opponent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_opponent", "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.unique_fct_spi_season_date_club.0ecc449a40": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "season || '-' || date || '-' || club", "model": "{{ get_where_subquery(ref('fct_spi')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_fct_spi_season_date_club", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_fct_spi_season_date_club.sql", "original_file_path": "models/mart/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.unique_fct_spi_season_date_club.0ecc449a40", "fqn": ["palpiteiro", "mart", "fivethirtyeight", "unique_fct_spi_season_date_club"], "alias": "unique_fct_spi_season_date_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.33133, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "fct_spi", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.fct_spi"]}, "compiled_path": "target/compiled/palpiteiro/models/mart/fivethirtyeight/schema.yml/unique_fct_spi_season_date_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select season || '-' || date || '-' || club as unique_field\n  from `palpiteiro-main`.`fivethirtyeight`.`fct_spi`\n  where season || '-' || date || '-' || club is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": null, "file_key_name": "models.fct_spi", "attached_node": "model.palpiteiro.fct_spi"}, "test.palpiteiro.unique_stg_atletas_scoring_play_id.68d480502e": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_atletas_scoring_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_atletas_scoring_play_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_stg_atletas_scoring_play_id.68d480502e", "fqn": ["palpiteiro", "staging", "cartola", "unique_stg_atletas_scoring_play_id"], "alias": "unique_stg_atletas_scoring_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3595772, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/unique_stg_atletas_scoring_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select play_id as unique_field\n  from `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\n  where play_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_play_id.e69a20408f": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_play_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_play_id.e69a20408f", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_play_id"], "alias": "not_null_stg_atletas_scoring_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.362414, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect play_id\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere play_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_player_id.2635af2452": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_player_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_player_id.2635af2452", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_player_id"], "alias": "not_null_stg_atletas_scoring_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3652253, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_round.37b28f3a3d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_round.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_round.37b28f3a3d", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_round"], "alias": "not_null_stg_atletas_scoring_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3676987, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_season.827f1326a3": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_season.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_season.827f1326a3", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_season"], "alias": "not_null_stg_atletas_scoring_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3706048, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_club.947dc34955": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_club.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_club.947dc34955", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_club"], "alias": "not_null_stg_atletas_scoring_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3731065, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_position.b786098d29": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_position", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_position.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_position.b786098d29", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_position"], "alias": "not_null_stg_atletas_scoring_position", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3758724, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_position.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere position is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.7d0850dfa6": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["goalkeeper", "defender", "fullback", "midfielder", "forward", "coach"], "quote": true, "column_name": "position", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_atletas_sc_8edcdbb11802aed65cd325e6bd9b9299.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.7d0850dfa6", "fqn": ["palpiteiro", "staging", "cartola", "accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach"], "alias": "accepted_values_stg_atletas_sc_8edcdbb11802aed65cd325e6bd9b9299", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_atletas_sc_8edcdbb11802aed65cd325e6bd9b9299", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_atletas_sc_8edcdbb11802aed65cd325e6bd9b9299"}, "created_at": 1698373578.379175, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_atletas_sc_8edcdbb11802aed65cd325e6bd9b9299\") }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/accepted_values_stg_atletas_sc_8edcdbb11802aed65cd325e6bd9b9299.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\n    group by position\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'goalkeeper','defender','fullback','midfielder','forward','coach'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_position_id.151f0f38c9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position_id", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_position_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_position_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_position_id.151f0f38c9", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_position_id"], "alias": "not_null_stg_atletas_scoring_position_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.3856559, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_position_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position_id\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere position_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position_id", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6.6d9589d112": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [1, 2, 3, 4, 5, 6], "quote": false, "column_name": "position_id", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_atletas_sc_0a0260e7dcc65282d7bf9a39378afb79.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6.6d9589d112", "fqn": ["palpiteiro", "staging", "cartola", "accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6"], "alias": "accepted_values_stg_atletas_sc_0a0260e7dcc65282d7bf9a39378afb79", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_atletas_sc_0a0260e7dcc65282d7bf9a39378afb79", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_atletas_sc_0a0260e7dcc65282d7bf9a39378afb79"}, "created_at": 1698373578.3883507, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_atletas_sc_0a0260e7dcc65282d7bf9a39378afb79\") }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/accepted_values_stg_atletas_sc_0a0260e7dcc65282d7bf9a39378afb79.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position_id as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\n    group by position_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    1,2,3,4,5,6\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position_id", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected.a9580e2695": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["doubt", "suspended", "injured", "null", "expected"], "quote": true, "column_name": "status", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_atletas_sc_58f0c0e341d3fc087a6f9fa739474ffb.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected.a9580e2695", "fqn": ["palpiteiro", "staging", "cartola", "accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected"], "alias": "accepted_values_stg_atletas_sc_58f0c0e341d3fc087a6f9fa739474ffb", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_atletas_sc_58f0c0e341d3fc087a6f9fa739474ffb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_atletas_sc_58f0c0e341d3fc087a6f9fa739474ffb"}, "created_at": 1698373578.3946922, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_atletas_sc_58f0c0e341d3fc087a6f9fa739474ffb\") }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/accepted_values_stg_atletas_sc_58f0c0e341d3fc087a6f9fa739474ffb.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'doubt','suspended','injured','null','expected'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "status", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_points.b9eb069fa4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_points.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_points.b9eb069fa4", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_points"], "alias": "not_null_stg_atletas_scoring_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.40123, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_price.58865b3b64": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "price", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_price", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_price.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_price.58865b3b64", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_price"], "alias": "not_null_stg_atletas_scoring_price", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4041512, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_price.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere price is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_negative_stg_atletas_scoring_price.9a51364748": {"test_metadata": {"name": "not_negative", "kwargs": {"column_name": "price", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_negative_stg_atletas_scoring_price", "resource_type": "test", "package_name": "palpiteiro", "path": "not_negative_stg_atletas_scoring_price.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_negative_stg_atletas_scoring_price.9a51364748", "fqn": ["palpiteiro", "staging", "cartola", "not_negative_stg_atletas_scoring_price"], "alias": "not_negative_stg_atletas_scoring_price", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4065866, "relation_name": null, "raw_code": "{{ test_not_negative(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.palpiteiro.test_not_negative", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_negative_stg_atletas_scoring_price.sql", "compiled": true, "compiled_code": " \n\nWITH validation AS (\n    SELECT\n        price AS field\n    FROM\n        `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\n),\n\nvalidation_errors AS (\n    SELECT\n        field\n    FROM\n        validation\n    WHERE\n        field < 0\n)\nSELECT\n    *\nFROM\n    validation_errors\n    \n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "price", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.not_null_stg_atletas_scoring_variation.6218e2305a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "variation", "model": "{{ get_where_subquery(ref('stg_atletas_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_scoring_variation", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_scoring_variation.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_scoring_variation.6218e2305a", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_scoring_variation"], "alias": "not_null_stg_atletas_scoring_variation", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4135752, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_scoring_variation.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect variation\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_scoring`\nwhere variation is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "variation", "file_key_name": "models.stg_atletas_scoring", "attached_node": "model.palpiteiro.stg_atletas_scoring"}, "test.palpiteiro.unique_stg_atletas_player_player_id.356b4a4120": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('stg_atletas_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_atletas_player_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_atletas_player_player_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_stg_atletas_player_player_id.356b4a4120", "fqn": ["palpiteiro", "staging", "cartola", "unique_stg_atletas_player_player_id"], "alias": "unique_stg_atletas_player_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4160118, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_player"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/unique_stg_atletas_player_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select player_id as unique_field\n  from `palpiteiro-main`.`cartola`.`stg_atletas_player`\n  where player_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.stg_atletas_player", "attached_node": "model.palpiteiro.stg_atletas_player"}, "test.palpiteiro.not_null_stg_atletas_player_player_id.262ab9afc2": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('stg_atletas_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_player_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_player_player_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_player_player_id.262ab9afc2", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_player_player_id"], "alias": "not_null_stg_atletas_player_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4189558, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_player"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_player_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_player`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.stg_atletas_player", "attached_node": "model.palpiteiro.stg_atletas_player"}, "test.palpiteiro.not_null_stg_atletas_player_slug.1de81164f1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "slug", "model": "{{ get_where_subquery(ref('stg_atletas_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_player_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_player_slug.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_player_slug.1de81164f1", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_player_slug"], "alias": "not_null_stg_atletas_player_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4218285, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_player"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_player_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect slug\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_player`\nwhere slug is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "slug", "file_key_name": "models.stg_atletas_player", "attached_node": "model.palpiteiro.stg_atletas_player"}, "test.palpiteiro.not_null_stg_atletas_player_nickname.caf5413aeb": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "nickname", "model": "{{ get_where_subquery(ref('stg_atletas_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_player_nickname", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_player_nickname.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_player_nickname.caf5413aeb", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_player_nickname"], "alias": "not_null_stg_atletas_player_nickname", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.424411, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_player"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_player_nickname.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect nickname\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_player`\nwhere nickname is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "nickname", "file_key_name": "models.stg_atletas_player", "attached_node": "model.palpiteiro.stg_atletas_player"}, "test.palpiteiro.not_null_stg_atletas_player_short_nickname.fc9ac1839c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "short_nickname", "model": "{{ get_where_subquery(ref('stg_atletas_player')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_atletas_player_short_nickname", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_atletas_player_short_nickname.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_atletas_player_short_nickname.fc9ac1839c", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_atletas_player_short_nickname"], "alias": "not_null_stg_atletas_player_short_nickname", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4274092, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_atletas_player", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_atletas_player"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_atletas_player_short_nickname.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect short_nickname\nfrom `palpiteiro-main`.`cartola`.`stg_atletas_player`\nwhere short_nickname is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "short_nickname", "file_key_name": "models.stg_atletas_player", "attached_node": "model.palpiteiro.stg_atletas_player"}, "test.palpiteiro.not_null_stg_partidas_match_match_id.df3ce3391b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "match_id", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_match_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_match_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_match_id.df3ce3391b", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_match_id"], "alias": "not_null_stg_partidas_match_match_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4300418, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_match_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect match_id\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere match_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_id", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.unique_stg_partidas_match_match_id.a4298c4837": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "match_id", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_partidas_match_match_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_partidas_match_match_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_stg_partidas_match_match_id.a4298c4837", "fqn": ["palpiteiro", "staging", "cartola", "unique_stg_partidas_match_match_id"], "alias": "unique_stg_partidas_match_match_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4328837, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/unique_stg_partidas_match_match_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select match_id as unique_field\n  from `palpiteiro-main`.`cartola`.`stg_partidas_match`\n  where match_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_id", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.not_null_stg_partidas_match_match_slug.08a845651d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "match_slug", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_match_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_match_slug.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_match_slug.08a845651d", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_match_slug"], "alias": "not_null_stg_partidas_match_match_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4355676, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_match_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect match_slug\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere match_slug is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_slug", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.unique_stg_partidas_match_match_slug.61c97b5261": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "match_slug", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_partidas_match_match_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_partidas_match_match_slug.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_stg_partidas_match_match_slug.61c97b5261", "fqn": ["palpiteiro", "staging", "cartola", "unique_stg_partidas_match_match_slug"], "alias": "unique_stg_partidas_match_match_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.438, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/unique_stg_partidas_match_match_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select match_slug as unique_field\n  from `palpiteiro-main`.`cartola`.`stg_partidas_match`\n  where match_slug is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_slug", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.not_null_stg_partidas_match_season.0ec3cd2c58": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_season.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_season.0ec3cd2c58", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_season"], "alias": "not_null_stg_partidas_match_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4413395, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.not_null_stg_partidas_match_round.b58a0dbc93": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_round.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_round.b58a0dbc93", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_round"], "alias": "not_null_stg_partidas_match_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4439366, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.not_null_stg_partidas_match_timestamp.4ce4b5987b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_timestamp.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_timestamp.4ce4b5987b", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_timestamp"], "alias": "not_null_stg_partidas_match_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4463506, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.accepted_values_stg_partidas_match_valid__False__True__False.09bae63cde": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [true, false], "quote": false, "column_name": "valid", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_partidas_match_valid__False__True__False", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_partidas_match_valid__False__True__False.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_partidas_match_valid__False__True__False.09bae63cde", "fqn": ["palpiteiro", "staging", "cartola", "accepted_values_stg_partidas_match_valid__False__True__False"], "alias": "accepted_values_stg_partidas_match_valid__False__True__False", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.44878, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/accepted_values_stg_partidas_match_valid__False__True__False.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        valid as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`stg_partidas_match`\n    group by valid\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    True,False\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "valid", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.not_null_stg_partidas_match_home.46af0aee0b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "home", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_home.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_home.46af0aee0b", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_home"], "alias": "not_null_stg_partidas_match_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4546273, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect home\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.not_null_stg_partidas_match_away.81f3a95016": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "away", "model": "{{ get_where_subquery(ref('stg_partidas_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_partidas_match_away", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_partidas_match_away.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_partidas_match_away.81f3a95016", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_partidas_match_away"], "alias": "not_null_stg_partidas_match_away", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4571223, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_partidas_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_partidas_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_partidas_match_away.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect away\nfrom `palpiteiro-main`.`cartola`.`stg_partidas_match`\nwhere away is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "away", "file_key_name": "models.stg_partidas_match", "attached_node": "model.palpiteiro.stg_partidas_match"}, "test.palpiteiro.unique_stg_pontuados_scoring_play_id.b8fc53f536": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_pontuados_scoring_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_pontuados_scoring_play_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_stg_pontuados_scoring_play_id.b8fc53f536", "fqn": ["palpiteiro", "staging", "cartola", "unique_stg_pontuados_scoring_play_id"], "alias": "unique_stg_pontuados_scoring_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4594889, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/unique_stg_pontuados_scoring_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select play_id as unique_field\n  from `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\n  where play_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_play_id.57d6534261": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_play_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_play_id.57d6534261", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_play_id"], "alias": "not_null_stg_pontuados_scoring_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4663246, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_play_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect play_id\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere play_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_player_id.e1ed5ae787": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_player_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_player_id.e1ed5ae787", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_player_id"], "alias": "not_null_stg_pontuados_scoring_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4692554, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_player_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere player_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_round.5a8d297241": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_round.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_round.5a8d297241", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_round"], "alias": "not_null_stg_pontuados_scoring_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4719148, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_round.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect round\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere round is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_season.8dd9e4b9d5": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_season.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_season.8dd9e4b9d5", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_season"], "alias": "not_null_stg_pontuados_scoring_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4745712, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_club.a08e2b303d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "club", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_club", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_club.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_club.a08e2b303d", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_club"], "alias": "not_null_stg_pontuados_scoring_club", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4769406, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_club.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect club\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere club is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "club", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_position.c0b20e665d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "position", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_position", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_position.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_position.c0b20e665d", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_position"], "alias": "not_null_stg_pontuados_scoring_position", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4792411, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_position.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect position\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere position is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.f7ed8bc639": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": ["goalkeeper", "defender", "fullback", "midfielder", "forward", "coach"], "quote": true, "column_name": "position", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_pontuados__af735dc04e80bbbc9da5b58894cac220.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.f7ed8bc639", "fqn": ["palpiteiro", "staging", "cartola", "accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach"], "alias": "accepted_values_stg_pontuados__af735dc04e80bbbc9da5b58894cac220", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_pontuados__af735dc04e80bbbc9da5b58894cac220", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_pontuados__af735dc04e80bbbc9da5b58894cac220"}, "created_at": 1698373578.4832213, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_pontuados__af735dc04e80bbbc9da5b58894cac220\") }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/accepted_values_stg_pontuados__af735dc04e80bbbc9da5b58894cac220.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\n    group by position\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'goalkeeper','defender','fullback','midfielder','forward','coach'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "position", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_played.8592091d9b": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "played", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_played", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_played.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_played.8592091d9b", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_played"], "alias": "not_null_stg_pontuados_scoring_played", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4888322, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_played.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect played\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere played is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "played", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.accepted_values_stg_pontuados_scoring_played__False__False__True.de0291663f": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [false, true], "quote": false, "column_name": "played", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_pontuados_scoring_played__False__False__True", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_pontuados__8911d9de68b61071dfcc91f63dbd56c4.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_pontuados_scoring_played__False__False__True.de0291663f", "fqn": ["palpiteiro", "staging", "cartola", "accepted_values_stg_pontuados_scoring_played__False__False__True"], "alias": "accepted_values_stg_pontuados__8911d9de68b61071dfcc91f63dbd56c4", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_pontuados__8911d9de68b61071dfcc91f63dbd56c4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"alias": "accepted_values_stg_pontuados__8911d9de68b61071dfcc91f63dbd56c4"}, "created_at": 1698373578.4920015, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_pontuados__8911d9de68b61071dfcc91f63dbd56c4\") }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/accepted_values_stg_pontuados__8911d9de68b61071dfcc91f63dbd56c4.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        played as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\n    group by played\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    False,True\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "played", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_points.24d9842ea8": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "points", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_points", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_points.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_points.24d9842ea8", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_points"], "alias": "not_null_stg_pontuados_scoring_points", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.4983623, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_points.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect points\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere points is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "points", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_goal.77e63501b7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "goal", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_goal", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_goal.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_goal.77e63501b7", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_goal"], "alias": "not_null_stg_pontuados_scoring_goal", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5008047, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_goal.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect goal\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere goal is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "goal", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_assist.a8e205d4b6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "assist", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_assist", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_assist.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_assist.a8e205d4b6", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_assist"], "alias": "not_null_stg_pontuados_scoring_assist", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5036592, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_assist.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect assist\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere assist is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "assist", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_yellow_card.2b58f72328": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "yellow_card", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_yellow_card", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_yellow_card.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_yellow_card.2b58f72328", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_yellow_card"], "alias": "not_null_stg_pontuados_scoring_yellow_card", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.506006, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_yellow_card.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect yellow_card\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere yellow_card is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "yellow_card", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_red_card.bdc40eff44": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "red_card", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_red_card", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_red_card.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_red_card.bdc40eff44", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_red_card"], "alias": "not_null_stg_pontuados_scoring_red_card", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.508967, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_red_card.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect red_card\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere red_card is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "red_card", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_missed_shoot.b83127deda": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "missed_shoot", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_missed_shoot", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_missed_shoot.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_missed_shoot.b83127deda", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_missed_shoot"], "alias": "not_null_stg_pontuados_scoring_missed_shoot", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5118337, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_missed_shoot.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect missed_shoot\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere missed_shoot is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "missed_shoot", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_on_post_shoot.5e2bf26946": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "on_post_shoot", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_on_post_shoot", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_on_post_shoot.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_on_post_shoot.5e2bf26946", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_on_post_shoot"], "alias": "not_null_stg_pontuados_scoring_on_post_shoot", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5146894, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_on_post_shoot.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect on_post_shoot\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere on_post_shoot is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "on_post_shoot", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_saved_shoot.615c5780ff": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "saved_shoot", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_saved_shoot", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_saved_shoot.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_saved_shoot.615c5780ff", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_saved_shoot"], "alias": "not_null_stg_pontuados_scoring_saved_shoot", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5173945, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_saved_shoot.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect saved_shoot\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere saved_shoot is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "saved_shoot", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_received_foul.88582cca0e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_foul", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_received_foul", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_received_foul.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_received_foul.88582cca0e", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_received_foul"], "alias": "not_null_stg_pontuados_scoring_received_foul", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5202935, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_received_foul.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect received_foul\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere received_foul is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "received_foul", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_received_penalty.fe08226a2e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "received_penalty", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_received_penalty", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_received_penalty.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_received_penalty.fe08226a2e", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_received_penalty"], "alias": "not_null_stg_pontuados_scoring_received_penalty", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5235977, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_received_penalty.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect received_penalty\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere received_penalty is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "received_penalty", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_missed_penalty.63542801c0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "missed_penalty", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_missed_penalty", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_missed_penalty.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_missed_penalty.63542801c0", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_missed_penalty"], "alias": "not_null_stg_pontuados_scoring_missed_penalty", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5262842, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_missed_penalty.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect missed_penalty\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere missed_penalty is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "missed_penalty", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_outside.245ab505c7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "outside", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_outside", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_outside.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_outside.245ab505c7", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_outside"], "alias": "not_null_stg_pontuados_scoring_outside", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5286462, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_outside.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect outside\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere outside is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "outside", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_missed_pass.dab4c11b2c": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "missed_pass", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_missed_pass", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_missed_pass.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_missed_pass.dab4c11b2c", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_missed_pass"], "alias": "not_null_stg_pontuados_scoring_missed_pass", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5315804, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_missed_pass.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect missed_pass\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere missed_pass is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "missed_pass", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_tackle.3608d37f04": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "tackle", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_tackle", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_tackle.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_tackle.3608d37f04", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_tackle"], "alias": "not_null_stg_pontuados_scoring_tackle", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5341792, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_tackle.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tackle\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere tackle is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "tackle", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_foul.87544aef61": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "foul", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_foul", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_foul.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_foul.87544aef61", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_foul"], "alias": "not_null_stg_pontuados_scoring_foul", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5373032, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_foul.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect foul\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere foul is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "foul", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_penalty.0323bbdb72": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "penalty", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_penalty", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_penalty.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_penalty.0323bbdb72", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_penalty"], "alias": "not_null_stg_pontuados_scoring_penalty", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.539863, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_penalty.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect penalty\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere penalty is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "penalty", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_own_goal.4b1f22ec78": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "own_goal", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_own_goal", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_own_goal.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_own_goal.4b1f22ec78", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_own_goal"], "alias": "not_null_stg_pontuados_scoring_own_goal", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5426686, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_own_goal.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect own_goal\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere own_goal is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "own_goal", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_allowed_goal.ed8ea2fe08": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "allowed_goal", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_allowed_goal", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_allowed_goal.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_allowed_goal.ed8ea2fe08", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_allowed_goal"], "alias": "not_null_stg_pontuados_scoring_allowed_goal", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5452547, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_allowed_goal.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect allowed_goal\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere allowed_goal is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "allowed_goal", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_no_goal.ffa3bc4a1e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "no_goal", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_no_goal", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_no_goal.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_no_goal.ffa3bc4a1e", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_no_goal"], "alias": "not_null_stg_pontuados_scoring_no_goal", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.547659, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_no_goal.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect no_goal\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere no_goal is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "no_goal", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_save.54eee6a890": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "save", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_save", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_save.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_save.54eee6a890", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_save"], "alias": "not_null_stg_pontuados_scoring_save", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5503976, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_save.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect save\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere save is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "save", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.not_null_stg_pontuados_scoring_penalty_save.3d202fb7f1": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "penalty_save", "model": "{{ get_where_subquery(ref('stg_pontuados_scoring')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_pontuados_scoring_penalty_save", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_pontuados_scoring_penalty_save.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_pontuados_scoring_penalty_save.3d202fb7f1", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_pontuados_scoring_penalty_save"], "alias": "not_null_stg_pontuados_scoring_penalty_save", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5537148, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_pontuados_scoring", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_pontuados_scoring"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/cartola/schema.yml/not_null_stg_pontuados_scoring_penalty_save.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect penalty_save\nfrom `palpiteiro-main`.`cartola`.`stg_pontuados_scoring`\nwhere penalty_save is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "penalty_save", "file_key_name": "models.stg_pontuados_scoring", "attached_node": "model.palpiteiro.stg_pontuados_scoring"}, "test.palpiteiro.unique_stg_destaque_popular.sql_play_id.311eb8be34": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('stg_destaque_popular.sql')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_destaque_popular.sql_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_destaque_popular.sql_play_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.unique_stg_destaque_popular.sql_play_id.311eb8be34", "fqn": ["palpiteiro", "staging", "cartola", "unique_stg_destaque_popular.sql_play_id"], "alias": "unique_stg_destaque_popular.sql_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.556247, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_destaque_popular.sql", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.stg_destaque_popular.sql", "attached_node": null}, "test.palpiteiro.not_null_stg_destaque_popular.sql_play_id.7ce87dc289": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "play_id", "model": "{{ get_where_subquery(ref('stg_destaque_popular.sql')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_destaque_popular.sql_play_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_destaque_popular.sql_play_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_destaque_popular.sql_play_id.7ce87dc289", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_destaque_popular.sql_play_id"], "alias": "not_null_stg_destaque_popular.sql_play_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5585644, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_destaque_popular.sql", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "play_id", "file_key_name": "models.stg_destaque_popular.sql", "attached_node": null}, "test.palpiteiro.not_null_stg_destaque_popular.sql_player_id.e8aa7e8b4e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "player_id", "model": "{{ get_where_subquery(ref('stg_destaque_popular.sql')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_destaque_popular.sql_player_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_destaque_popular.sql_player_id.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_destaque_popular.sql_player_id.e8aa7e8b4e", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_destaque_popular.sql_player_id"], "alias": "not_null_stg_destaque_popular.sql_player_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5612006, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_destaque_popular.sql", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "player_id", "file_key_name": "models.stg_destaque_popular.sql", "attached_node": null}, "test.palpiteiro.not_null_stg_destaque_popular.sql_season.17fb2cf01e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('stg_destaque_popular.sql')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_destaque_popular.sql_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_destaque_popular.sql_season.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_destaque_popular.sql_season.17fb2cf01e", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_destaque_popular.sql_season"], "alias": "not_null_stg_destaque_popular.sql_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.564119, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_destaque_popular.sql", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.stg_destaque_popular.sql", "attached_node": null}, "test.palpiteiro.not_null_stg_destaque_popular.sql_round.3bb05e33c7": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "round", "model": "{{ get_where_subquery(ref('stg_destaque_popular.sql')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_destaque_popular.sql_round", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_destaque_popular.sql_round.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_destaque_popular.sql_round.3bb05e33c7", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_destaque_popular.sql_round"], "alias": "not_null_stg_destaque_popular.sql_round", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5672793, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_destaque_popular.sql", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "round", "file_key_name": "models.stg_destaque_popular.sql", "attached_node": null}, "test.palpiteiro.not_null_stg_destaque_popular.sql_drafts.45851de2e4": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "drafts", "model": "{{ get_where_subquery(ref('stg_destaque_popular.sql')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_destaque_popular.sql_drafts", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_destaque_popular.sql_drafts.sql", "original_file_path": "models/staging/cartola/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_destaque_popular.sql_drafts.45851de2e4", "fqn": ["palpiteiro", "staging", "cartola", "not_null_stg_destaque_popular.sql_drafts"], "alias": "not_null_stg_destaque_popular.sql_drafts", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5697703, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_destaque_popular.sql", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "checksum": null}, "column_name": "drafts", "file_key_name": "models.stg_destaque_popular.sql", "attached_node": null}, "test.palpiteiro.not_null_stg_brasileirao_h2h_match_slug.21151dfd18": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "match_slug", "model": "{{ get_where_subquery(ref('stg_brasileirao_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_brasileirao_h2h_match_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_brasileirao_h2h_match_slug.sql", "original_file_path": "models/staging/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_brasileirao_h2h_match_slug.21151dfd18", "fqn": ["palpiteiro", "staging", "odds", "not_null_stg_brasileirao_h2h_match_slug"], "alias": "not_null_stg_brasileirao_h2h_match_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5755174, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/schema.yml/not_null_stg_brasileirao_h2h_match_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect match_slug\nfrom `palpiteiro-main`.`odds`.`stg_brasileirao_h2h`\nwhere match_slug is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_slug", "file_key_name": "models.stg_brasileirao_h2h", "attached_node": "model.palpiteiro.stg_brasileirao_h2h"}, "test.palpiteiro.unique_stg_brasileirao_h2h_match_slug.bb3f319ad5": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "match_slug", "model": "{{ get_where_subquery(ref('stg_brasileirao_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_brasileirao_h2h_match_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_brasileirao_h2h_match_slug.sql", "original_file_path": "models/staging/odds/schema.yml", "unique_id": "test.palpiteiro.unique_stg_brasileirao_h2h_match_slug.bb3f319ad5", "fqn": ["palpiteiro", "staging", "odds", "unique_stg_brasileirao_h2h_match_slug"], "alias": "unique_stg_brasileirao_h2h_match_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5789218, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/schema.yml/unique_stg_brasileirao_h2h_match_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select match_slug as unique_field\n  from `palpiteiro-main`.`odds`.`stg_brasileirao_h2h`\n  where match_slug is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_slug", "file_key_name": "models.stg_brasileirao_h2h", "attached_node": "model.palpiteiro.stg_brasileirao_h2h"}, "test.palpiteiro.not_null_stg_brasileirao_h2h_season.af4e86f9e6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('stg_brasileirao_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_brasileirao_h2h_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_brasileirao_h2h_season.sql", "original_file_path": "models/staging/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_brasileirao_h2h_season.af4e86f9e6", "fqn": ["palpiteiro", "staging", "odds", "not_null_stg_brasileirao_h2h_season"], "alias": "not_null_stg_brasileirao_h2h_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5817673, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/schema.yml/not_null_stg_brasileirao_h2h_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`odds`.`stg_brasileirao_h2h`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.stg_brasileirao_h2h", "attached_node": "model.palpiteiro.stg_brasileirao_h2h"}, "test.palpiteiro.not_null_stg_brasileirao_h2h_timestamp.d9f0510fda": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "timestamp", "model": "{{ get_where_subquery(ref('stg_brasileirao_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_brasileirao_h2h_timestamp", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_brasileirao_h2h_timestamp.sql", "original_file_path": "models/staging/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_brasileirao_h2h_timestamp.d9f0510fda", "fqn": ["palpiteiro", "staging", "odds", "not_null_stg_brasileirao_h2h_timestamp"], "alias": "not_null_stg_brasileirao_h2h_timestamp", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.584895, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/schema.yml/not_null_stg_brasileirao_h2h_timestamp.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect timestamp\nfrom `palpiteiro-main`.`odds`.`stg_brasileirao_h2h`\nwhere timestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "timestamp", "file_key_name": "models.stg_brasileirao_h2h", "attached_node": "model.palpiteiro.stg_brasileirao_h2h"}, "test.palpiteiro.not_null_stg_brasileirao_h2h_home.c176232638": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "home", "model": "{{ get_where_subquery(ref('stg_brasileirao_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_brasileirao_h2h_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_brasileirao_h2h_home.sql", "original_file_path": "models/staging/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_brasileirao_h2h_home.c176232638", "fqn": ["palpiteiro", "staging", "odds", "not_null_stg_brasileirao_h2h_home"], "alias": "not_null_stg_brasileirao_h2h_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5883956, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/schema.yml/not_null_stg_brasileirao_h2h_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect home\nfrom `palpiteiro-main`.`odds`.`stg_brasileirao_h2h`\nwhere home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.stg_brasileirao_h2h", "attached_node": "model.palpiteiro.stg_brasileirao_h2h"}, "test.palpiteiro.not_null_stg_brasileirao_h2h_away.ebc07d9543": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "away", "model": "{{ get_where_subquery(ref('stg_brasileirao_h2h')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_brasileirao_h2h_away", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_brasileirao_h2h_away.sql", "original_file_path": "models/staging/odds/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_brasileirao_h2h_away.ebc07d9543", "fqn": ["palpiteiro", "staging", "odds", "not_null_stg_brasileirao_h2h_away"], "alias": "not_null_stg_brasileirao_h2h_away", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.5908992, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_brasileirao_h2h", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_brasileirao_h2h"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/odds/schema.yml/not_null_stg_brasileirao_h2h_away.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect away\nfrom `palpiteiro-main`.`odds`.`stg_brasileirao_h2h`\nwhere away is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "away", "file_key_name": "models.stg_brasileirao_h2h", "attached_node": "model.palpiteiro.stg_brasileirao_h2h"}, "test.palpiteiro.not_null_stg_spi_match_match_slug.5fdfa77f23": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "match_slug", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_match_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_match_slug.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_match_slug.5fdfa77f23", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_match_slug"], "alias": "not_null_stg_spi_match_match_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6021156, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_match_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect match_slug\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere match_slug is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_slug", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.unique_stg_spi_match_match_slug.6463ac59cb": {"test_metadata": {"name": "unique", "kwargs": {"column_name": "match_slug", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "unique_stg_spi_match_match_slug", "resource_type": "test", "package_name": "palpiteiro", "path": "unique_stg_spi_match_match_slug.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.unique_stg_spi_match_match_slug.6463ac59cb", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "unique_stg_spi_match_match_slug"], "alias": "unique_stg_spi_match_match_slug", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6051621, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/unique_stg_spi_match_match_slug.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select match_slug as unique_field\n  from `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\n  where match_slug is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "match_slug", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_season.f3ed990de5": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "season", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_season", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_season.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_season.f3ed990de5", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_season"], "alias": "not_null_stg_spi_match_season", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.607816, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_season.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere season is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "season", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_date.b3a6c26426": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "date", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_date", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_date.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_date.b3a6c26426", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_date"], "alias": "not_null_stg_spi_match_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6106017, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_date.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "date", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_league_id.ed7c95199d": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "league_id", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_league_id", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_league_id.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_league_id.ed7c95199d", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_league_id"], "alias": "not_null_stg_spi_match_league_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6136782, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_league_id.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect league_id\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere league_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "league_id", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.accepted_values_stg_spi_match_league_id__False__2105.1b56be2b79": {"test_metadata": {"name": "accepted_values", "kwargs": {"values": [2105], "quote": false, "column_name": "league_id", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "accepted_values_stg_spi_match_league_id__False__2105", "resource_type": "test", "package_name": "palpiteiro", "path": "accepted_values_stg_spi_match_league_id__False__2105.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.accepted_values_stg_spi_match_league_id__False__2105.1b56be2b79", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "accepted_values_stg_spi_match_league_id__False__2105"], "alias": "accepted_values_stg_spi_match_league_id__False__2105", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6167302, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/accepted_values_stg_spi_match_league_id__False__2105.sql", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        league_id as value_field,\n        count(*) as n_records\n\n    from `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\n    group by league_id\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    2105\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "league_id", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_home.150f369a08": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "home", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_home.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_home.150f369a08", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_home"], "alias": "not_null_stg_spi_match_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6223893, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect home\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "home", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_away.74a57690a9": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "away", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_away", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_away.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_away.74a57690a9", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_away"], "alias": "not_null_stg_spi_match_away", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.625369, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_away.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect away\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere away is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "away", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_spi_home.ee13cceea0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_home", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_spi_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_spi_home.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_spi_home.ee13cceea0", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_spi_home"], "alias": "not_null_stg_spi_match_spi_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.628365, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_spi_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_home\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere spi_home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_home", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_spi_away.e38b4fd2e6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "spi_away", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_spi_away", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_spi_away.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_spi_away.e38b4fd2e6", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_spi_away"], "alias": "not_null_stg_spi_match_spi_away", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6308217, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_spi_away.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect spi_away\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere spi_away is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "spi_away", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_prob_home.9a32d6a47e": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_home", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_prob_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_prob_home.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_prob_home.9a32d6a47e", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_prob_home"], "alias": "not_null_stg_spi_match_prob_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6335838, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_prob_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_home\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere prob_home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_home", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_prob_away.b4b522a72a": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_away", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_prob_away", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_prob_away.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_prob_away.b4b522a72a", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_prob_away"], "alias": "not_null_stg_spi_match_prob_away", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6360645, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_prob_away.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_away\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere prob_away is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_away", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_prob_tie.b0490e24a0": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "prob_tie", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_prob_tie", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_prob_tie.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_prob_tie.b0490e24a0", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_prob_tie"], "alias": "not_null_stg_spi_match_prob_tie", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6387956, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_prob_tie.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect prob_tie\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere prob_tie is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "prob_tie", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_proj_score_home.d1a53513f6": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_home", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_proj_score_home", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_proj_score_home.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_proj_score_home.d1a53513f6", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_proj_score_home"], "alias": "not_null_stg_spi_match_proj_score_home", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6419399, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_proj_score_home.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_home\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere proj_score_home is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_home", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}, "test.palpiteiro.not_null_stg_spi_match_proj_score_away.b6178dfe41": {"test_metadata": {"name": "not_null", "kwargs": {"column_name": "proj_score_away", "model": "{{ get_where_subquery(ref('stg_spi_match')) }}"}, "namespace": null}, "database": "palpiteiro-main", "schema": "dbt_test__audit", "name": "not_null_stg_spi_match_proj_score_away", "resource_type": "test", "package_name": "palpiteiro", "path": "not_null_stg_spi_match_proj_score_away.sql", "original_file_path": "models/staging/fivethirtyeight/schema.yml", "unique_id": "test.palpiteiro.not_null_stg_spi_match_proj_score_away.b6178dfe41", "fqn": ["palpiteiro", "staging", "fivethirtyeight", "not_null_stg_spi_match_proj_score_away"], "alias": "not_null_stg_spi_match_proj_score_away", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1698373578.6451244, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "stg_spi_match", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.palpiteiro.stg_spi_match"]}, "compiled_path": "target/compiled/palpiteiro/models/staging/fivethirtyeight/schema.yml/not_null_stg_spi_match_proj_score_away.sql", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect proj_score_away\nfrom `palpiteiro-main`.`fivethirtyeight`.`stg_spi_match`\nwhere proj_score_away is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "proj_score_away", "file_key_name": "models.stg_spi_match", "attached_node": "model.palpiteiro.stg_spi_match"}}, "sources": {"source.palpiteiro.cartola.atletas": {"database": "palpiteiro-main", "schema": "cartola", "name": "atletas", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.cartola.atletas", "fqn": ["palpiteiro", "cartola", "atletas"], "source_name": "cartola", "source_description": "", "loader": "", "identifier": "atletas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`cartola`.`atletas`", "created_at": 1698373578.647615}, "source.palpiteiro.cartola.partidas": {"database": "palpiteiro-main", "schema": "cartola", "name": "partidas", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.cartola.partidas", "fqn": ["palpiteiro", "cartola", "partidas"], "source_name": "cartola", "source_description": "", "loader": "", "identifier": "partidas", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`cartola`.`partidas`", "created_at": 1698373578.6478746}, "source.palpiteiro.cartola.pontuados": {"database": "palpiteiro-main", "schema": "cartola", "name": "pontuados", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.cartola.pontuados", "fqn": ["palpiteiro", "cartola", "pontuados"], "source_name": "cartola", "source_description": "", "loader": "", "identifier": "pontuados", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`cartola`.`pontuados`", "created_at": 1698373578.6481254}, "source.palpiteiro.cartola.selecao": {"database": "palpiteiro-main", "schema": "cartola", "name": "selecao", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.cartola.selecao", "fqn": ["palpiteiro", "cartola", "selecao"], "source_name": "cartola", "source_description": "", "loader": "", "identifier": "selecao", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`cartola`.`selecao`", "created_at": 1698373578.6483688}, "source.palpiteiro.cartola.destaques": {"database": "palpiteiro-main", "schema": "cartola", "name": "destaques", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.cartola.destaques", "fqn": ["palpiteiro", "cartola", "destaques"], "source_name": "cartola", "source_description": "", "loader": "", "identifier": "destaques", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`cartola`.`destaques`", "created_at": 1698373578.648591}, "source.palpiteiro.fivethirtyeight.spi": {"database": "palpiteiro-main", "schema": "fivethirtyeight", "name": "spi", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.fivethirtyeight.spi", "fqn": ["palpiteiro", "fivethirtyeight", "spi"], "source_name": "fivethirtyeight", "source_description": "", "loader": "", "identifier": "spi", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`fivethirtyeight`.`spi`", "created_at": 1698373578.6488469}, "source.palpiteiro.odds.brasileirao": {"database": "palpiteiro-main", "schema": "odds", "name": "brasileirao", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.odds.brasileirao", "fqn": ["palpiteiro", "odds", "brasileirao"], "source_name": "odds", "source_description": "", "loader": "", "identifier": "brasileirao", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "loaded_at", "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": 1, "period": "day"}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`odds`.`brasileirao`", "created_at": 1698373578.6490846}, "source.palpiteiro.express.prize": {"database": "palpiteiro-main", "schema": "express", "name": "prize", "resource_type": "source", "package_name": "palpiteiro", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "unique_id": "source.palpiteiro.express.prize", "fqn": ["palpiteiro", "express", "prize"], "source_name": "express", "source_description": "", "loader": "", "identifier": "prize", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "`palpiteiro-main`.`express`.`prize`", "created_at": 1698373578.6493745}}, "macros": {"macro.palpiteiro.predict_points": {"name": "predict_points", "resource_type": "macro", "package_name": "palpiteiro", "path": "macros/predict_points.sql", "original_file_path": "macros/predict_points.sql", "unique_id": "macro.palpiteiro.predict_points", "macro_sql": "{% macro predict_points() %}\n\nCREATE OR REPLACE FUNCTION {{ target.dataset }}.PREDICT_POINTS(player_json JSON)\nRETURNS FLOAT64\nREMOTE WITH CONNECTION `us-east4.remote-function` OPTIONS (\n    endpoint = 'https://us-east4-{{ target.project }}.cloudfunctions.net/points'\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.166376, "supported_languages": null}, "macro.palpiteiro.all_time_round": {"name": "all_time_round", "resource_type": "macro", "package_name": "palpiteiro", "path": "macros/all_time_round.sql", "original_file_path": "macros/all_time_round.sql", "unique_id": "macro.palpiteiro.all_time_round", "macro_sql": "{% macro all_time_round() %}\n\nCREATE OR REPLACE FUNCTION {{ target.dataset }}.ALL_TIME_ROUND(\n    season INT,\n    round INT\n) RETURNS INT AS (\n    38 * (season - 2017) + round\n);\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1668866, "supported_languages": null}, "macro.palpiteiro.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "palpiteiro", "path": "macros/get_custom_schema.sql", "original_file_path": "macros/get_custom_schema.sql", "unique_id": "macro.palpiteiro.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1678772, "supported_languages": null}, "macro.palpiteiro.create_udfs": {"name": "create_udfs", "resource_type": "macro", "package_name": "palpiteiro", "path": "macros/create_udfs.sql", "original_file_path": "macros/create_udfs.sql", "unique_id": "macro.palpiteiro.create_udfs", "macro_sql": "{% macro create_udfs() %}\n\n{% do run_query(predict_points()) %}\n{% do run_query(points_cartola()) %}\n{% do run_query(all_time_round()) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.palpiteiro.predict_points", "macro.palpiteiro.points_cartola", "macro.palpiteiro.all_time_round"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1690283, "supported_languages": null}, "macro.palpiteiro.points_cartola": {"name": "points_cartola", "resource_type": "macro", "package_name": "palpiteiro", "path": "macros/points.sql", "original_file_path": "macros/points.sql", "unique_id": "macro.palpiteiro.points_cartola", "macro_sql": "{% macro points_cartola() %}\n\nCREATE OR REPLACE FUNCTION {{ target.dataset }}.OFFENSIVE_POINTS_CARTOLA(\n    position STRING,\n    goal INT,\n    assist INT,\n    yellow_card INT,\n    red_card INT,\n    missed_shoot INT,\n    on_post_shoot INT,\n    saved_shoot INT,\n    received_foul INT,\n    received_penalty INT,\n    missed_penalty INT,\n    outside INT,\n    missed_pass INT,\n    tackle INT,\n    foul INT,\n    penalty INT,\n    own_goal INT,\n    allowed_goal INT,\n    no_goal INT,\n    save INT,\n    penalty_save INT\n) RETURNS FLOAT64 AS (\n    8.0 * goal \n    + 5.0 * assist \n    + 3.0 * on_post_shoot \n    + 1.2 * saved_shoot \n    + 0.8 * missed_shoot \n    + 0.5 * received_foul \n    + 1.0 * received_penalty \n    - 4.0 * missed_penalty \n    - 0.1 * outside\n    - IF(position != 'goalkeeper', 0.1 * missed_pass, 0.0)\n);\n\nCREATE OR REPLACE FUNCTION {{ target.dataset }}.DEFENSIVE_POINTS_CARTOLA(\n    position STRING,\n    goal INT,\n    assist INT,\n    yellow_card INT,\n    red_card INT,\n    missed_shoot INT,\n    on_post_shoot INT,\n    saved_shoot INT,\n    received_foul INT,\n    received_penalty INT,\n    missed_penalty INT,\n    outside INT,\n    missed_pass INT,\n    tackle INT,\n    foul INT,\n    penalty INT,\n    own_goal INT,\n    allowed_goal INT,\n    no_goal INT,\n    save INT,\n    penalty_save INT\n) RETURNS FLOAT64 AS (\n    IF(position IN ('goalkeeper', 'defender', 'fullback'), 5.0 * no_goal, 0.0)\n    + IF(position = 'goalkeeper', 7.0 * penalty_save, 0.0)\n    + IF(position = 'goalkeeper', 1.0 * save, 0.0)\n    - IF(position = 'goalkeeper', 1.0 * allowed_goal, 0.0)\n    + 1.2 * tackle \n    - 3.0 * own_goal\n    - 3.0 * red_card \n    - 1.0 * yellow_card \n    - 0.3 * foul \n    - 1.0 * penalty\n);\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1701252, "supported_languages": null}, "macro.palpiteiro.test_not_negative": {"name": "test_not_negative", "resource_type": "macro", "package_name": "palpiteiro", "path": "tests/generic/test_not_negative.sql", "original_file_path": "tests/generic/test_not_negative.sql", "unique_id": "macro.palpiteiro.test_not_negative", "macro_sql": "{% test not_negative (model, column_name) %} \n\nWITH validation AS (\n    SELECT\n        {{ column_name }} AS field\n    FROM\n        {{ model }}\n),\n\nvalidation_errors AS (\n    SELECT\n        field\n    FROM\n        validation\n    WHERE\n        field < 0\n)\nSELECT\n    *\nFROM\n    validation_errors\n    \n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1708086, "supported_languages": null}, "macro.dbt_bigquery.partition_by": {"name": "partition_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.partition_by", "macro_sql": "{% macro partition_by(partition_config) -%}\n    {%- if partition_config is none -%}\n      {% do return('') %}\n    {%- elif partition_config.time_ingestion_partitioning -%}\n        partition by {{ partition_config.render_wrapped() }}\n    {%- elif partition_config.data_type | lower in ('date','timestamp','datetime') -%}\n        partition by {{ partition_config.render() }}\n    {%- elif partition_config.data_type | lower in ('int64') -%}\n        {%- set range = partition_config.range -%}\n        partition by range_bucket(\n            {{ partition_config.field }},\n            generate_array({{ range.start}}, {{ range.end }}, {{ range.interval }})\n        )\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1818855, "supported_languages": null}, "macro.dbt_bigquery.cluster_by": {"name": "cluster_by", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.cluster_by", "macro_sql": "{% macro cluster_by(raw_cluster_by) %}\n  {%- if raw_cluster_by is not none -%}\n  cluster by {% if raw_cluster_by is string -%}\n    {% set raw_cluster_by = [raw_cluster_by] %}\n  {%- endif -%}\n  {%- for cluster in raw_cluster_by -%}\n    {{ cluster }}\n    {%- if not loop.last -%}, {% endif -%}\n  {%- endfor -%}\n\n  {% endif %}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1830351, "supported_languages": null}, "macro.dbt_bigquery.bigquery_options": {"name": "bigquery_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_options", "macro_sql": "{% macro bigquery_options(opts) %}\n  {% set options -%}\n    OPTIONS({% for opt_key, opt_val in opts.items() %}\n      {{ opt_key }}={{ opt_val }}{{ \",\" if not loop.last }}\n    {% endfor %})\n  {%- endset %}\n  {%- do return(options) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1843517, "supported_languages": null}, "macro.dbt_bigquery.bigquery_table_options": {"name": "bigquery_table_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_table_options", "macro_sql": "{% macro bigquery_table_options(config, node, temporary) %}\n  {% set opts = adapter.get_table_options(config, node, temporary) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.185094, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_table_as": {"name": "bigquery__create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_table_as", "macro_sql": "{% macro bigquery__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {%- if language == 'sql' -%}\n    {%- set raw_partition_by = config.get('partition_by', none) -%}\n    {%- set raw_cluster_by = config.get('cluster_by', none) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set partition_config = adapter.parse_partition_by(raw_partition_by) -%}\n    {%- if partition_config.time_ingestion_partitioning -%}\n    {%- set columns = get_columns_with_types_in_query_sql(sql) -%}\n    {%- set table_dest_columns_csv = columns_without_partition_fields_csv(partition_config, columns) -%}\n    {%- set columns = '(' ~ table_dest_columns_csv ~ ')' -%}\n    {%- endif -%}\n\n    {{ sql_header if sql_header is not none }}\n\n    create or replace table {{ relation }}\n      {%- set contract_config = config.get('contract') -%}\n      {%- if contract_config.enforced -%}\n        {{ get_assert_columns_equivalent(compiled_code) }}\n        {{ get_table_columns_and_constraints() }}\n        {%- set compiled_code = get_select_subquery(compiled_code) %}\n      {% else %}\n        {#-- cannot do contracts at the same time as time ingestion partitioning -#}\n        {{ columns }}\n      {% endif %}\n    {{ partition_by(partition_config) }}\n    {{ cluster_by(raw_cluster_by) }}\n\n    {{ bigquery_table_options(config, model, temporary) }}\n\n    {#-- PARTITION BY cannot be used with the AS query_statement clause.\n         https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#partition_expression\n    -#}\n    {%- if not partition_config.time_ingestion_partitioning %}\n    as (\n      {{ compiled_code }}\n    );\n    {%- endif %}\n  {%- elif language == 'python' -%}\n    {#--\n    N.B. Python models _can_ write to temp views HOWEVER they use a different session\n    and have already expired by the time they need to be used (I.E. in merges for incremental models)\n\n    TODO: Deep dive into spark sessions to see if we can reuse a single session for an entire\n    dbt invocation.\n     --#}\n\n    {#-- when a user wants to change the schema of an existing relation, they must intentionally drop the table in the dataset --#}\n    {%- set old_relation = adapter.get_relation(database=relation.database, schema=relation.schema, identifier=relation.identifier) -%}\n    {%- if (old_relation.is_table and (should_full_refresh())) -%}\n      {% do adapter.drop_relation(relation) %}\n    {%- endif -%}\n    {{ py_write_table(compiled_code=compiled_code, target_relation=relation.quote(database=False, schema=False, identifier=False)) }}\n  {%- else -%}\n    {% do exceptions.raise_compiler_error(\"bigquery__create_table_as macro didn't get supported language, it got %s\" % language) %}\n  {%- endif -%}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery", "macro.dbt_bigquery.partition_by", "macro.dbt_bigquery.cluster_by", "macro.dbt_bigquery.bigquery_table_options", "macro.dbt.should_full_refresh", "macro.dbt_bigquery.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1906264, "supported_languages": null}, "macro.dbt_bigquery.bigquery_view_options": {"name": "bigquery_view_options", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery_view_options", "macro_sql": "{% macro bigquery_view_options(config, node) %}\n  {% set opts = adapter.get_view_options(config, node) %}\n  {%- do return(bigquery_options(opts)) -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1915119, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_view_as": {"name": "bigquery__create_view_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_view_as", "macro_sql": "{% macro bigquery__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create or replace view {{ relation }}\n  {{ bigquery_view_options(config, model) }}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  as {{ sql }};\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery_view_options", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.192984, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_schema": {"name": "bigquery__drop_schema", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_schema", "macro_sql": "{% macro bigquery__drop_schema(relation) -%}\n  {{ adapter.drop_schema(relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.193418, "supported_languages": null}, "macro.dbt_bigquery.bigquery__drop_relation": {"name": "bigquery__drop_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__drop_relation", "macro_sql": "{% macro bigquery__drop_relation(relation) -%}\n  {% call statement('drop_relation') -%}\n    drop {{ relation.type }} if exists {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1940153, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_columns_in_relation": {"name": "bigquery__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_columns_in_relation", "macro_sql": "{% macro bigquery__get_columns_in_relation(relation) -%}\n  {{ return(adapter.get_columns_in_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1946518, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_relations_without_caching": {"name": "bigquery__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_relations_without_caching", "macro_sql": "{% macro bigquery__list_relations_without_caching(schema_relation) -%}\n  {{ return(adapter.list_relations_without_caching(schema_relation)) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1952453, "supported_languages": null}, "macro.dbt_bigquery.bigquery__list_schemas": {"name": "bigquery__list_schemas", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__list_schemas", "macro_sql": "{% macro bigquery__list_schemas(database) -%}\n  {{ return(adapter.list_schemas(database)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1957693, "supported_languages": null}, "macro.dbt_bigquery.bigquery__check_schema_exists": {"name": "bigquery__check_schema_exists", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__check_schema_exists", "macro_sql": "{% macro bigquery__check_schema_exists(information_schema, schema) %}\n  {{ return(adapter.check_schema_exists(information_schema.database, schema)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.196461, "supported_languages": null}, "macro.dbt_bigquery.bigquery__persist_docs": {"name": "bigquery__persist_docs", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__persist_docs", "macro_sql": "{% macro bigquery__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do alter_column_comment(relation, model.columns) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1973317, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_comment": {"name": "bigquery__alter_column_comment", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_comment", "macro_sql": "{% macro bigquery__alter_column_comment(relation, column_dict) -%}\n  {% do adapter.update_columns(relation, column_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1977894, "supported_languages": null}, "macro.dbt_bigquery.bigquery__rename_relation": {"name": "bigquery__rename_relation", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__rename_relation", "macro_sql": "{% macro bigquery__rename_relation(from_relation, to_relation) -%}\n  {% do adapter.rename_relation(from_relation, to_relation) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1982446, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_add_columns": {"name": "bigquery__alter_relation_add_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_add_columns", "macro_sql": "{% macro bigquery__alter_relation_add_columns(relation, add_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n        {% for column in add_columns %}\n          add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.1997046, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_relation_drop_columns": {"name": "bigquery__alter_relation_drop_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_relation_drop_columns", "macro_sql": "{% macro bigquery__alter_relation_drop_columns(relation, drop_columns) %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n        {% for column in drop_columns %}\n          drop column {{ column.name }}{{ ',' if not loop.last }}\n        {% endfor %}\n\n  {%- endset -%}\n\n  {{ return(run_query(sql)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.200752, "supported_languages": null}, "macro.dbt_bigquery.bigquery__alter_column_type": {"name": "bigquery__alter_column_type", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__alter_column_type", "macro_sql": "{% macro bigquery__alter_column_type(relation, column_name, new_column_type) -%}\n  {#-- Changing a column's data type using a query requires you to scan the entire table.\n    The query charges can be significant if the table is very large.\n\n    https://cloud.google.com/bigquery/docs/manually-changing-schemas#changing_a_columns_data_type\n  #}\n  {% set relation_columns = get_columns_in_relation(relation) %}\n\n  {% set sql %}\n    select\n      {%- for col in relation_columns -%}\n        {% if col.column == column_name %}\n          CAST({{ col.quoted }} AS {{ new_column_type }}) AS {{ col.quoted }}\n        {%- else %}\n          {{ col.quoted }}\n        {%- endif %}\n        {%- if not loop.last %},{% endif -%}\n      {%- endfor %}\n    from {{ relation }}\n  {% endset %}\n\n  {% call statement('alter_column_type') %}\n    {{ create_table_as(False, relation, sql)}}\n  {%- endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_relation", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.202935, "supported_languages": null}, "macro.dbt_bigquery.bigquery__test_unique": {"name": "bigquery__test_unique", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__test_unique", "macro_sql": "{% macro bigquery__test_unique(model, column_name) %}\n\nwith dbt_test__target as (\n\n  select {{ column_name }} as unique_field\n  from {{ model }}\n  where {{ column_name }} is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2035336, "supported_languages": null}, "macro.dbt_bigquery.bigquery__upload_file": {"name": "bigquery__upload_file", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_bigquery.bigquery__upload_file", "macro_sql": "{% macro bigquery__upload_file(local_file_path, database, table_schema, table_name) %}\n\n  {{ log(\"kwargs: \" ~ kwargs) }}\n\n  {% do adapter.upload_file(local_file_path, database, table_schema, table_name, kwargs=kwargs) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.204483, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_catalog": {"name": "bigquery__get_catalog", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_catalog", "macro_sql": "{% macro bigquery__get_catalog(information_schema, schemas) -%}\n\n  {%- if (schemas | length) == 0 -%}\n    {# Hopefully nothing cares about the columns we return when there are no rows #}\n    {%- set query  = \"select 1 as id limit 0\" -%}\n  {%- else -%}\n\n  {%- set query -%}\n    with tables as (\n        select\n            project_id as table_database,\n            dataset_id as table_schema,\n            table_id as original_table_name,\n\n            concat(project_id, '.', dataset_id, '.', table_id) as relation_id,\n\n            row_count,\n            size_bytes as size_bytes,\n            case\n                when type = 1 then 'table'\n                when type = 2 then 'view'\n                else 'external'\n            end as table_type,\n\n            REGEXP_CONTAINS(table_id, '^.+[0-9]{8}$') and coalesce(type, 0) = 1 as is_date_shard,\n            REGEXP_EXTRACT(table_id, '^(.+)[0-9]{8}$') as shard_base_name,\n            REGEXP_EXTRACT(table_id, '^.+([0-9]{8})$') as shard_name\n\n        from {{ information_schema.replace(information_schema_view='__TABLES__') }}\n        where (\n          {%- for schema in schemas -%}\n            upper(dataset_id) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n    ),\n\n    table_options as (\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            JSON_VALUE(option_value) as table_comment\n\n        from {{ information_schema.replace(information_schema_view='TABLE_OPTIONS') }}\n        where option_name = 'description'\n    ),\n    extracted as (\n\n        select *,\n            case\n                when is_date_shard then shard_base_name\n                else original_table_name\n            end as table_name\n\n        from tables\n\n    ),\n\n    unsharded_tables as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            coalesce(table_type, 'external') as table_type,\n            is_date_shard,\n\n            struct(\n                min(shard_name) as shard_min,\n                max(shard_name) as shard_max,\n                count(*) as shard_count\n            ) as table_shards,\n\n            sum(size_bytes) as size_bytes,\n            sum(row_count) as row_count,\n\n            max(relation_id) as relation_id\n\n        from extracted\n        group by 1,2,3,4,5\n\n    ),\n\n    info_schema_columns as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            table_catalog as table_database,\n            table_schema,\n            table_name,\n\n            -- use the \"real\" column name from the paths query below\n            column_name as base_column_name,\n            ordinal_position as column_index,\n\n            is_partitioning_column,\n            clustering_ordinal_position\n\n        from {{ information_schema.replace(information_schema_view='COLUMNS') }}\n        where ordinal_position is not null\n\n    ),\n\n    info_schema_column_paths as (\n\n        select\n            concat(table_catalog, '.', table_schema, '.', table_name) as relation_id,\n            field_path as column_name,\n            data_type as column_type,\n            column_name as base_column_name,\n            description as column_comment\n\n        from {{ information_schema.replace(information_schema_view='COLUMN_FIELD_PATHS') }}\n\n    ),\n\n    columns as (\n\n        select * except (base_column_name)\n        from info_schema_columns\n        join info_schema_column_paths using (relation_id, base_column_name)\n\n    ),\n\n    column_stats as (\n\n        select\n            table_database,\n            table_schema,\n            table_name,\n            max(relation_id) as relation_id,\n            max(case when is_partitioning_column = 'YES' then 1 else 0 end) = 1 as is_partitioned,\n            max(case when is_partitioning_column = 'YES' then column_name else null end) as partition_column,\n            max(case when clustering_ordinal_position is not null then 1 else 0 end) = 1 as is_clustered,\n            array_to_string(\n                array_agg(\n                    case\n                        when clustering_ordinal_position is not null then column_name\n                        else null\n                    end ignore nulls\n                    order by clustering_ordinal_position\n                ), ', '\n            ) as clustering_columns\n\n        from columns\n        group by 1,2,3\n\n    )\n\n    select\n        unsharded_tables.table_database,\n        unsharded_tables.table_schema,\n        case\n            when is_date_shard then concat(unsharded_tables.table_name, '*')\n            else unsharded_tables.table_name\n        end as table_name,\n        unsharded_tables.table_type,\n        table_options.table_comment,\n\n        -- coalesce name and type for External tables - these columns are not\n        -- present in the COLUMN_FIELD_PATHS resultset\n        coalesce(columns.column_name, '<unknown>') as column_name,\n        -- invent a row number to account for nested fields -- BQ does\n        -- not treat these nested properties as independent fields\n        row_number() over (\n            partition by relation_id\n            order by columns.column_index, columns.column_name\n        ) as column_index,\n        coalesce(columns.column_type, '<unknown>') as column_type,\n        columns.column_comment,\n\n        'Shard count' as `stats__date_shards__label`,\n        table_shards.shard_count as `stats__date_shards__value`,\n        'The number of date shards in this table' as `stats__date_shards__description`,\n        is_date_shard as `stats__date_shards__include`,\n\n        'Shard (min)' as `stats__date_shard_min__label`,\n        table_shards.shard_min as `stats__date_shard_min__value`,\n        'The first date shard in this table' as `stats__date_shard_min__description`,\n        is_date_shard as `stats__date_shard_min__include`,\n\n        'Shard (max)' as `stats__date_shard_max__label`,\n        table_shards.shard_max as `stats__date_shard_max__value`,\n        'The last date shard in this table' as `stats__date_shard_max__description`,\n        is_date_shard as `stats__date_shard_max__include`,\n\n        '# Rows' as `stats__num_rows__label`,\n        row_count as `stats__num_rows__value`,\n        'Approximate count of rows in this table' as `stats__num_rows__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_rows__include`,\n\n        'Approximate Size' as `stats__num_bytes__label`,\n        size_bytes as `stats__num_bytes__value`,\n        'Approximate size of table as reported by BigQuery' as `stats__num_bytes__description`,\n        (unsharded_tables.table_type = 'table') as `stats__num_bytes__include`,\n\n        'Partitioned By' as `stats__partitioning_type__label`,\n        partition_column as `stats__partitioning_type__value`,\n        'The partitioning column for this table' as `stats__partitioning_type__description`,\n        is_partitioned as `stats__partitioning_type__include`,\n\n        'Clustered By' as `stats__clustering_fields__label`,\n        clustering_columns as `stats__clustering_fields__value`,\n        'The clustering columns for this table' as `stats__clustering_fields__description`,\n        is_clustered as `stats__clustering_fields__include`\n\n    -- join using relation_id (an actual relation, not a shard prefix) to make\n    -- sure that column metadata is picked up through the join. This will only\n    -- return the column information for the \"max\" table in a date-sharded table set\n    from unsharded_tables\n    left join table_options using (relation_id)\n    left join columns using (relation_id)\n    left join column_stats using (relation_id)\n  {%- endset -%}\n\n  {%- endif -%}\n\n  {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.212794, "supported_languages": null}, "macro.dbt_bigquery.date_sharded_table": {"name": "date_sharded_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.date_sharded_table", "macro_sql": "{% macro date_sharded_table(base_name) %}\n    {{ return(base_name ~ \"[DBT__PARTITION_DATE]\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2135472, "supported_languages": null}, "macro.dbt_bigquery.grant_access_to": {"name": "grant_access_to", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.grant_access_to", "macro_sql": "{% macro grant_access_to(entity, entity_type, role, grant_target_dict) -%}\n  {% do adapter.grant_access_to(entity, entity_type, role, grant_target_dict) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2141273, "supported_languages": null}, "macro.dbt_bigquery.get_partitions_metadata": {"name": "get_partitions_metadata", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/etc.sql", "original_file_path": "macros/etc.sql", "unique_id": "macro.dbt_bigquery.get_partitions_metadata", "macro_sql": "\n\n{%- macro get_partitions_metadata(table) -%}\n  {%- if execute -%}\n    {%- set res = adapter.get_partitions_metadata(table) -%}\n    {{- return(res) -}}\n  {%- endif -%}\n  {{- return(None) -}}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2149515, "supported_languages": null}, "macro.dbt_bigquery.bigquery__resolve_model_name": {"name": "bigquery__resolve_model_name", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt_bigquery.bigquery__resolve_model_name", "macro_sql": "{% macro bigquery__resolve_model_name(input_model_name) -%}\n    {{ input_model_name | string | replace('`', '') | replace('\"', '\\\"') }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2156706, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_show_grant_sql": {"name": "bigquery__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_show_grant_sql", "macro_sql": "{% macro bigquery__get_show_grant_sql(relation) %}\n    {% set location = adapter.get_dataset_location(relation) %}\n    {% set relation = relation.incorporate(location=location) %}\n\n    select privilege_type, grantee\n    from {{ relation.information_schema(\"OBJECT_PRIVILEGES\") }}\n    where object_schema = \"{{ relation.dataset }}\"\n      and object_name = \"{{ relation.identifier }}\"\n      -- filter out current user\n      and split(grantee, ':')[offset(1)] != session_user()\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.217389, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_grant_sql": {"name": "bigquery__get_grant_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_grant_sql", "macro_sql": "\n\n\n{%- macro bigquery__get_grant_sql(relation, privilege, grantee) -%}\n    grant `{{ privilege }}` on {{ relation.type }} {{ relation }} to {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2181284, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_revoke_sql": {"name": "bigquery__get_revoke_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_revoke_sql", "macro_sql": "{%- macro bigquery__get_revoke_sql(relation, privilege, grantee) -%}\n    revoke `{{ privilege }}` on {{ relation.type }} {{ relation }} from {{ '\\\"' + grantee|join('\\\", \\\"') + '\\\"' }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.218819, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_empty_subquery_sql": {"name": "bigquery__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_empty_subquery_sql", "macro_sql": "{% macro bigquery__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false and current_timestamp() = current_timestamp()\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.219726, "supported_languages": null}, "macro.dbt_bigquery.bigquery__escape_single_quotes": {"name": "bigquery__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt_bigquery.bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2202795, "supported_languages": null}, "macro.dbt_bigquery.bigquery__date_trunc": {"name": "bigquery__date_trunc", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt_bigquery.bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) -%}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2208188, "supported_languages": null}, "macro.dbt_bigquery.bigquery__safe_cast": {"name": "bigquery__safe_cast", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_bigquery.bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2213473, "supported_languages": null}, "macro.dbt_bigquery.bigquery__intersect": {"name": "bigquery__intersect", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt_bigquery.bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2217023, "supported_languages": null}, "macro.dbt_bigquery.bigquery__right": {"name": "bigquery__right", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt_bigquery.bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2224534, "supported_languages": null}, "macro.dbt_bigquery.bigquery__split_part": {"name": "bigquery__split_part", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt_bigquery.bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n  {% else %}\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset(\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 1 + {{ part_number }}\n        )]\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2238634, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_concat": {"name": "bigquery__array_concat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_concat", "macro_sql": "{% macro bigquery__array_concat(array_1, array_2) -%}\n    array_concat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2243738, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp": {"name": "bigquery__current_timestamp", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() -%}\n  current_timestamp()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2248235, "supported_languages": null}, "macro.dbt_bigquery.bigquery__snapshot_string_as_time": {"name": "bigquery__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_string_as_time", "macro_sql": "{% macro bigquery__snapshot_string_as_time(timestamp) -%}\n    {%- set result = 'TIMESTAMP(\"' ~ timestamp ~ '\")' -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.225477, "supported_languages": null}, "macro.dbt_bigquery.bigquery__current_timestamp_backcompat": {"name": "bigquery__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_bigquery.bigquery__current_timestamp_backcompat", "macro_sql": "{% macro bigquery__current_timestamp_backcompat() -%}\n  current_timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2257073, "supported_languages": null}, "macro.dbt_bigquery.bigquery__format_column": {"name": "bigquery__format_column", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__format_column", "macro_sql": "{% macro bigquery__format_column(column) -%}\n  {% set data_type = column.data_type %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2282207, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_empty_schema_sql": {"name": "bigquery__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_empty_schema_sql", "macro_sql": "{% macro bigquery__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {% for col in columns.values() %}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n\n    {%- set columns = adapter.nest_column_data_types(columns) -%}\n    {{ return(dbt.default__get_empty_schema_sql(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2301362, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_select_subquery": {"name": "bigquery__get_select_subquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_select_subquery", "macro_sql": "{% macro bigquery__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2306154, "supported_languages": null}, "macro.dbt_bigquery.bigquery__get_column_names": {"name": "bigquery__get_column_names", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/get_columns_spec_ddl.sql", "original_file_path": "macros/utils/get_columns_spec_ddl.sql", "unique_id": "macro.dbt_bigquery.bigquery__get_column_names", "macro_sql": "{% macro bigquery__get_column_names() %}\n  {#- loop through nested user_provided_columns to get column names -#}\n    {%- set user_provided_columns = adapter.nest_column_data_types(model['columns']) -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2320251, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_construct": {"name": "bigquery__array_construct", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_construct", "macro_sql": "{% macro bigquery__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    [ {{ inputs|join(' , ') }} ]\n    {% else %}\n    ARRAY<{{data_type}}>[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2331457, "supported_languages": null}, "macro.dbt_bigquery.bigquery__dateadd": {"name": "bigquery__dateadd", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_bigquery.bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2337694, "supported_languages": null}, "macro.dbt_bigquery.bigquery__datediff": {"name": "bigquery__datediff", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_bigquery.bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) -%}\n\n  {% if dbt_version[0] == 1 and dbt_version[2] >= 2 %}\n    {{ return(dbt.datediff(first_date, second_date, datepart)) }}\n  {% else %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2351685, "supported_languages": null}, "macro.dbt_bigquery.bigquery__hash": {"name": "bigquery__hash", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt_bigquery.bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt.default__hash(field)}})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.235677, "supported_languages": null}, "macro.dbt_bigquery.bigquery__position": {"name": "bigquery__position", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt_bigquery.bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2362158, "supported_languages": null}, "macro.dbt_bigquery.bigquery__except": {"name": "bigquery__except", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt_bigquery.bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.236518, "supported_languages": null}, "macro.dbt_bigquery.bigquery__listagg": {"name": "bigquery__listagg", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_bigquery.bigquery__listagg", "macro_sql": "{% macro bigquery__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        {% if limit_num -%}\n        limit {{ limit_num }}\n        {%- endif %}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2376285, "supported_languages": null}, "macro.dbt_bigquery.bigquery__array_append": {"name": "bigquery__array_append", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt_bigquery.bigquery__array_append", "macro_sql": "{% macro bigquery__array_append(array, new_element) -%}\n    {{ array_concat(array, array_construct([new_element])) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.array_concat", "macro.dbt.array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2383778, "supported_languages": null}, "macro.dbt_bigquery.bigquery__bool_or": {"name": "bigquery__bool_or", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt_bigquery.bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n\n    logical_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.238771, "supported_languages": null}, "macro.dbt_bigquery.materialization_table_bigquery": {"name": "materialization_table_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.materialization_table_bigquery", "macro_sql": "{% materialization table, adapter='bigquery', supported_languages=['sql', 'python']-%}\n\n  {%- set language = model['language'] -%}\n  {%- set identifier = model['alias'] -%}\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n  {%- set target_relation = api.Relation.create(database=database, schema=schema, identifier=identifier, type='table') -%}\n\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {#\n      We only need to drop this thing if it is not a table.\n      If it _is_ already a table, then we can overwrite it without downtime\n      Unlike table -> view, no need for `--full-refresh`: dropping a view is no big deal\n  #}\n  {%- if exists_not_as_table -%}\n      {{ adapter.drop_relation(old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n  {% if not adapter.is_replaceable(old_relation, partition_by, cluster_by) %}\n    {% do log(\"Hard refreshing \" ~ old_relation ~ \" because it is not replaceable\") %}\n    {% do adapter.drop_relation(old_relation) %}\n  {% endif %}\n\n  -- build model\n  {%- call statement('main', language=language) -%}\n    {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall -%}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2477098, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_bigquery.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation) %}\nfrom pyspark.sql import SparkSession\n\nspark = SparkSession.builder.appName('smallTest').getOrCreate()\n\nspark.conf.set(\"viewsEnabled\",\"true\")\nspark.conf.set(\"temporaryGcsBucket\",\"{{target.gcs_bucket}}\")\n\n{{ compiled_code }}\ndbt = dbtObj(spark.read.format(\"bigquery\").load)\ndf = model(dbt, spark)\n\n# COMMAND ----------\n# this is materialization code dbt generated, please do not modify\n\nimport pyspark\n# make sure pandas exists before using it\ntry:\n  import pandas\n  pandas_available = True\nexcept ImportError:\n  pandas_available = False\n\n# make sure pyspark.pandas exists before using it\ntry:\n  import pyspark.pandas\n  pyspark_pandas_api_available = True\nexcept ImportError:\n  pyspark_pandas_api_available = False\n\n# make sure databricks.koalas exists before using it\ntry:\n  import databricks.koalas\n  koalas_available = True\nexcept ImportError:\n  koalas_available = False\n\n# preferentially convert pandas DataFrames to pandas-on-Spark or Koalas DataFrames first\n# since they know how to convert pandas DataFrames better than `spark.createDataFrame(df)`\n# and converting from pandas-on-Spark to Spark DataFrame has no overhead\nif pyspark_pandas_api_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = pyspark.pandas.frame.DataFrame(df)\nelif koalas_available and pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = databricks.koalas.frame.DataFrame(df)\n\n# convert to pyspark.sql.dataframe.DataFrame\nif isinstance(df, pyspark.sql.dataframe.DataFrame):\n  pass  # since it is already a Spark DataFrame\nelif pyspark_pandas_api_available and isinstance(df, pyspark.pandas.frame.DataFrame):\n  df = df.to_spark()\nelif koalas_available and isinstance(df, databricks.koalas.frame.DataFrame):\n  df = df.to_spark()\nelif pandas_available and isinstance(df, pandas.core.frame.DataFrame):\n  df = spark.createDataFrame(df)\nelse:\n  msg = f\"{type(df)} is not a supported type for dbt Python materialization\"\n  raise Exception(msg)\n\ndf.write \\\n  .mode(\"overwrite\") \\\n  .format(\"bigquery\") \\\n  .option(\"writeMethod\", \"direct\").option(\"writeDisposition\", 'WRITE_TRUNCATE') \\\n  .save(\"{{target_relation}}\")\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2485335, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_csv_table": {"name": "bigquery__create_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_csv_table", "macro_sql": "{% macro bigquery__create_csv_table(model, agate_table) %}\n    -- no-op\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2498055, "supported_languages": null}, "macro.dbt_bigquery.bigquery__reset_csv_table": {"name": "bigquery__reset_csv_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__reset_csv_table", "macro_sql": "{% macro bigquery__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.250267, "supported_languages": null}, "macro.dbt_bigquery.bigquery__load_csv_rows": {"name": "bigquery__load_csv_rows", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_bigquery.bigquery__load_csv_rows", "macro_sql": "{% macro bigquery__load_csv_rows(model, agate_table) %}\n\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {{ adapter.load_dataframe(model['database'], model['schema'], model['alias'],\n  \t\t\t\t\t\t\tagate_table, column_override) }}\n\n  {% call statement() %}\n    alter table {{ this.render() }} set {{ bigquery_table_options(config, model) }}\n  {% endcall %}\n\n  {% if config.persist_relation_docs() and 'description' in model %}\n\n  \t{{ adapter.update_table_description(model['database'], model['schema'], model['alias'], model['description']) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bigquery_table_options"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2522154, "supported_languages": null}, "macro.dbt_bigquery.materialization_copy_bigquery": {"name": "materialization_copy_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/copy.sql", "original_file_path": "macros/materializations/copy.sql", "unique_id": "macro.dbt_bigquery.materialization_copy_bigquery", "macro_sql": "{% materialization copy, adapter='bigquery' -%}\n\n  {# Setup #}\n  {{ run_hooks(pre_hooks) }}\n\n  {% set destination = this.incorporate(type='table') %}\n\n  {# there can be several ref() or source() according to BQ copy API docs #}\n  {# cycle over ref() and source() to create source tables array #}\n  {% set source_array = [] %}\n  {% for ref_table in model.refs %}\n    {{ source_array.append(ref(*ref_table)) }}\n  {% endfor %}\n\n  {% for src_table in model.sources %}\n    {{ source_array.append(source(*src_table)) }}\n  {% endfor %}\n\n  {# Call adapter copy_table function #}\n  {%- set result_str = adapter.copy_table(\n      source_array,\n      destination,\n      config.get('copy_materialization', default = 'table')) -%}\n\n  {{ store_result('main', response=result_str) }}\n\n  {# Clean up #}\n  {{ run_hooks(post_hooks) }}\n  {%- do apply_grants(target_relation, grant_config) -%}\n  {{ adapter.commit() }}\n\n  {{ return({'relations': [destination]}) }}\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2554479, "supported_languages": ["sql"]}, "macro.dbt_bigquery.bigquery__snapshot_hash_arguments": {"name": "bigquery__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__snapshot_hash_arguments", "macro_sql": "{% macro bigquery__snapshot_hash_arguments(args) -%}\n  to_hex(md5(concat({%- for arg in args -%}\n    coalesce(cast({{ arg }} as string), ''){% if not loop.last %}, '|',{% endif -%}\n  {%- endfor -%}\n  )))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.256497, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_columns": {"name": "bigquery__create_columns", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_columns", "macro_sql": "{% macro bigquery__create_columns(relation, columns) %}\n  {{ adapter.alter_table_add_columns(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2570038, "supported_languages": null}, "macro.dbt_bigquery.bigquery__post_snapshot": {"name": "bigquery__post_snapshot", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_bigquery.bigquery__post_snapshot", "macro_sql": "{% macro bigquery__post_snapshot(staging_relation) %}\n  -- Clean up the snapshot temp table\n  {% do drop_relation(staging_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2573853, "supported_languages": null}, "macro.dbt_bigquery.bigquery__can_clone_table": {"name": "bigquery__can_clone_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__can_clone_table", "macro_sql": "{% macro bigquery__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2581112, "supported_languages": null}, "macro.dbt_bigquery.bigquery__create_or_replace_clone": {"name": "bigquery__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_bigquery.bigquery__create_or_replace_clone", "macro_sql": "{% macro bigquery__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2585807, "supported_languages": null}, "macro.dbt_bigquery.bigquery__handle_existing_table": {"name": "bigquery__handle_existing_table", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.bigquery__handle_existing_table", "macro_sql": "{% macro bigquery__handle_existing_table(full_refresh, old_relation) %}\n    {%- if full_refresh -%}\n      {{ adapter.drop_relation(old_relation) }}\n    {%- else -%}\n      {{ exceptions.relation_wrong_type(old_relation, 'view') }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.260115, "supported_languages": null}, "macro.dbt_bigquery.materialization_view_bigquery": {"name": "materialization_view_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_bigquery.materialization_view_bigquery", "macro_sql": "{% materialization view, adapter='bigquery' -%}\n    -- grab current tables grants config for comparision later on\n    {% set grant_config = config.get('grants') %}\n\n    {% set to_return = create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {% if config.get('grant_access_to') %}\n      {% for grant_target_dict in config.get('grant_access_to') %}\n        {% do adapter.grant_access_to(this, 'view', None, grant_target_dict) %}\n      {% endfor %}\n    {% endif %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.262237, "supported_languages": ["sql"]}, "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy": {"name": "dbt_bigquery_validate_get_incremental_strategy", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro_sql": "{% macro dbt_bigquery_validate_get_incremental_strategy(config) %}\n  {#-- Find and validate the incremental strategy #}\n  {%- set strategy = config.get(\"incremental_strategy\") or 'merge' -%}\n\n  {% set invalid_strategy_msg -%}\n    Invalid incremental strategy provided: {{ strategy }}\n    Expected one of: 'merge', 'insert_overwrite'\n  {%- endset %}\n  {% if strategy not in ['merge', 'insert_overwrite'] %}\n    {% do exceptions.raise_compiler_error(invalid_strategy_msg) %}\n  {% endif %}\n\n  {% do return(strategy) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2671263, "supported_languages": null}, "macro.dbt_bigquery.source_sql_with_partition": {"name": "source_sql_with_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.source_sql_with_partition", "macro_sql": "{% macro source_sql_with_partition(partition_by, source_sql) %}\n\n  {%- if partition_by.time_ingestion_partitioning %}\n    {{ return(wrap_with_time_ingestion_partitioning_sql(partition_by, source_sql, False))  }}\n  {% else %}\n    {{ return(source_sql)  }}\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.268115, "supported_languages": null}, "macro.dbt_bigquery.bq_create_table_as": {"name": "bq_create_table_as", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_create_table_as", "macro_sql": "{% macro bq_create_table_as(partition_by, temporary, relation, compiled_code, language='sql') %}\n  {%- set _dbt_max_partition = declare_dbt_max_partition(this, partition_by, compiled_code, language) -%}\n  {% if partition_by.time_ingestion_partitioning and language == 'python' %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models do not support ingestion time partitioning\"\n    ) %}\n  {% elif partition_by.time_ingestion_partitioning and language == 'sql' %}\n    {#-- Create the table before inserting data as ingestion time partitioned tables can't be created with the transformed data --#}\n    {% do run_query(create_table_as(temporary, relation, compiled_code)) %}\n    {{ return(_dbt_max_partition + bq_insert_into_ingestion_time_partitioned_table_sql(relation, compiled_code)) }}\n  {% else %}\n    {{ return(_dbt_max_partition + create_table_as(temporary, relation, compiled_code, language)) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.declare_dbt_max_partition", "macro.dbt.run_query", "macro.dbt.create_table_as", "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2703404, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_build_sql": {"name": "bq_generate_incremental_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro_sql": "{% macro bq_generate_incremental_build_sql(\n    strategy, tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions, incremental_predicates\n) %}\n  {#-- if partitioned, use BQ scripting to get the range of partition values to be updated --#}\n  {% if strategy == 'insert_overwrite' %}\n\n    {% set build_sql = bq_generate_incremental_insert_overwrite_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n  {% else %} {# strategy == 'merge' #}\n\n    {% set build_sql = bq_generate_incremental_merge_build_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n    ) %}\n\n  {% endif %}\n\n  {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2728584, "supported_languages": null}, "macro.dbt_bigquery.materialization_incremental_bigquery": {"name": "materialization_incremental_bigquery", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_bigquery.materialization_incremental_bigquery", "macro_sql": "{% materialization incremental, adapter='bigquery', supported_languages=['sql', 'python'] -%}\n\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] %}\n\n  {%- set target_relation = this %}\n  {%- set existing_relation = load_relation(this) %}\n  {%- set tmp_relation = make_temp_relation(this) %}\n\n  {#-- Validate early so we don't run SQL if the strategy is invalid --#}\n  {% set strategy = dbt_bigquery_validate_get_incremental_strategy(config) -%}\n\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {%- set partitions = config.get('partitions', none) -%}\n  {%- set cluster_by = config.get('cluster_by', none) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n  {% set incremental_predicates = config.get('predicates', default=none) or config.get('incremental_predicates', default=none) %}\n\n   -- grab current tables grants config for comparison later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if partition_by.copy_partitions is true and strategy != 'insert_overwrite' %} {#-- We can't copy partitions with merge strategy --#}\n        {% set wrong_strategy_msg -%}\n        The 'copy_partitions' option requires the 'incremental_strategy' option to be set to 'insert_overwrite'.\n        {%- endset %}\n        {% do exceptions.raise_compiler_error(wrong_strategy_msg) %}\n\n  {% elif existing_relation is none %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n      {#-- There's no way to atomically replace a view with a table on BQ --#}\n      {{ adapter.drop_relation(existing_relation) }}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% elif full_refresh_mode %}\n      {#-- If the partition/cluster config has changed, then we must drop and recreate --#}\n      {% if not adapter.is_replaceable(existing_relation, partition_by, cluster_by) %}\n          {% do log(\"Hard refreshing \" ~ existing_relation ~ \" because it is not replaceable\") %}\n          {{ adapter.drop_relation(existing_relation) }}\n      {% endif %}\n      {%- call statement('main', language=language) -%}\n        {{ bq_create_table_as(partition_by, False, target_relation, compiled_code, language) }}\n      {%- endcall -%}\n\n  {% else %}\n    {%- if language == 'python' and strategy == 'insert_overwrite' -%}\n      {#-- This lets us move forward assuming no python will be directly templated into a query --#}\n      {%- set python_unsupported_msg -%}\n        The 'insert_overwrite' strategy is not yet supported for python models.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(python_unsupported_msg) %}\n    {%- endif -%}\n\n    {% set tmp_relation_exists = false %}\n    {% if on_schema_change != 'ignore' or language == 'python' %}\n      {#-- Check first, since otherwise we may not build a temp table --#}\n      {#-- Python always needs to create a temp table --#}\n      {%- call statement('create_tmp_relation', language=language) -%}\n        {{ bq_create_table_as(partition_by, True, tmp_relation, compiled_code, language) }}\n      {%- endcall -%}\n      {% set tmp_relation_exists = true %}\n      {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n      {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {#--  Add time ingestion pseudo column to destination column as not part of the 'schema' but still need it for actual data insertion --#}\n    {% if partition_by.time_ingestion_partitioning %}\n      {% set dest_columns = adapter.add_time_ingestion_partition_column(partition_by, dest_columns) %}\n    {% endif %}\n\n    {% set build_sql = bq_generate_incremental_build_sql(\n        strategy, tmp_relation, target_relation, compiled_code, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, partition_by.copy_partitions, incremental_predicates\n    ) %}\n\n    {%- call statement('main') -%}\n      {{ build_sql }}\n    {% endcall %}\n\n    {%- if language == 'python' and tmp_relation -%}\n      {{ adapter.drop_relation(tmp_relation) }}\n    {%- endif -%}\n\n  {% endif %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt_bigquery.dbt_bigquery_validate_get_incremental_strategy", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.process_schema_changes", "macro.dbt_bigquery.bq_generate_incremental_build_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2853415, "supported_languages": ["sql", "python"]}, "macro.dbt_bigquery.declare_dbt_max_partition": {"name": "declare_dbt_max_partition", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/common.sql", "original_file_path": "macros/materializations/incremental_strategy/common.sql", "unique_id": "macro.dbt_bigquery.declare_dbt_max_partition", "macro_sql": "{% macro declare_dbt_max_partition(relation, partition_by, compiled_code, language='sql') %}\n\n  {#-- TODO: revisit partitioning with python models --#}\n  {%- if '_dbt_max_partition' in compiled_code and language == 'sql' -%}\n\n    declare _dbt_max_partition {{ partition_by.data_type_for_partition() }} default (\n      select max({{ partition_by.field }}) from {{ this }}\n      where {{ partition_by.field }} is not null\n    );\n\n  {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2864943, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql": {"name": "bq_generate_incremental_merge_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/merge.sql", "original_file_path": "macros/materializations/incremental_strategy/merge.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_merge_build_sql", "macro_sql": "{% macro bq_generate_incremental_merge_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, incremental_predicates\n) %}\n    {%- set source_sql -%}\n        {%- if tmp_relation_exists -%}\n        (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n        )\n        {%- else -%} {#-- wrap sql in parens to make it a subquery --#}\n        (\n            {%- if partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n            {%- else -%}\n            {{sql}}\n            {%- endif %}\n        )\n        {%- endif -%}\n    {%- endset -%}\n\n    {% set build_sql = get_merge_sql(target_relation, source_sql, unique_key, dest_columns, incremental_predicates) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.288845, "supported_languages": null}, "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql": {"name": "bq_generate_incremental_insert_overwrite_build_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_generate_incremental_insert_overwrite_build_sql", "macro_sql": "{% macro bq_generate_incremental_insert_overwrite_build_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n    {% if partition_by is none %}\n      {% set missing_partition_msg -%}\n      The 'insert_overwrite' strategy requires the `partition_by` config.\n      {%- endset %}\n      {% do exceptions.raise_compiler_error(missing_partition_msg) %}\n    {% endif %}\n\n    {% set build_sql = bq_insert_overwrite_sql(\n        tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n    ) %}\n\n    {{ return(build_sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2952745, "supported_languages": null}, "macro.dbt_bigquery.bq_copy_partitions": {"name": "bq_copy_partitions", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_copy_partitions", "macro_sql": "{% macro bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n\n  {% for partition in partitions %}\n    {% if partition_by.granularity == 'hour' %}\n      {% set partition = partition.strftime(\"%Y%m%d%H\") %}\n    {% elif partition_by.granularity == 'day' %}\n      {% set partition = partition.strftime(\"%Y%m%d\") %}\n    {% elif partition_by.granularity == 'month' %}\n      {% set partition = partition.strftime(\"%Y%m\") %}\n    {% elif partition_by.granularity == 'year' %}\n      {% set partition = partition.strftime(\"%Y\") %}\n    {% endif %}\n    {% set tmp_relation_partitioned = api.Relation.create(database=tmp_relation.database, schema=tmp_relation.schema, identifier=tmp_relation.table ~ '$' ~ partition, type=tmp_relation.type) %}\n    {% set target_relation_partitioned = api.Relation.create(database=target_relation.database, schema=target_relation.schema, identifier=target_relation.table ~ '$' ~ partition, type=target_relation.type) %}\n    {% do adapter.copy_table(tmp_relation_partitioned, target_relation_partitioned, \"table\") %}\n  {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.2985501, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_overwrite_sql": {"name": "bq_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_insert_overwrite_sql", "macro_sql": "{% macro bq_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, unique_key, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n  {% if partitions is not none and partitions != [] %} {# static #}\n      {{ bq_static_insert_overwrite_sql(tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else %} {# dynamic #}\n      {{ bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3003747, "supported_languages": null}, "macro.dbt_bigquery.bq_static_insert_overwrite_sql": {"name": "bq_static_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_static_insert_overwrite_sql", "macro_sql": "{% macro bq_static_insert_overwrite_sql(\n    tmp_relation, target_relation, sql, partition_by, partitions, dest_columns, tmp_relation_exists, copy_partitions\n) %}\n\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in (\n              {{ partitions | join (', ') }}\n          )\n      {%- endset %}\n\n      {%- set source_sql -%}\n        (\n          {% if partition_by.time_ingestion_partitioning and tmp_relation_exists -%}\n          select\n            {{ partition_by.insertable_time_partitioning_field() }},\n            * from {{ tmp_relation }}\n          {% elif tmp_relation_exists -%}\n            select\n            * from {{ tmp_relation }}\n          {%- elif partition_by.time_ingestion_partitioning -%}\n            {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, True) }}\n          {%- else -%}\n            {{sql}}\n          {%- endif -%}\n\n        )\n      {%- endset -%}\n\n      {% if copy_partitions %}\n          {% do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) %}\n      {% else %}\n\n      {#-- In case we're putting the model SQL _directly_ into the MERGE statement,\n         we need to prepend the MERGE statement with the user-configured sql_header,\n         which may be needed to resolve that model SQL (e.g. referencing a variable or UDF in the header)\n         in the \"temporary table exists\" case, we save the model SQL result as a temp table first, wherein the\n         sql_header is included by the create_table_as macro.\n      #}\n      -- 1. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate], include_sql_header = not tmp_relation_exists) }};\n\n      {%- if tmp_relation_exists -%}\n      -- 2. clean up the temp table\n      drop table if exists {{ tmp_relation }};\n      {%- endif -%}\n\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro.dbt_bigquery.bq_copy_partitions", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3036518, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql": {"name": "bq_dynamic_copy_partitions_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_copy_partitions_insert_overwrite_sql(\n  tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions\n  ) %}\n  {# We run temp table creation in a separated script to move to partitions copy #}\n  {%- call statement('create_tmp_relation_for_copy', language='sql') -%}\n    {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql')\n  }}\n  {%- endcall %}\n  {%- set partitions_sql -%}\n    select distinct {{ partition_by.render_wrapped() }}\n    from {{ tmp_relation }}\n  {%- endset -%}\n  {%- set partitions = run_query(partitions_sql).columns[0].values() -%}\n  {# We copy the partitions #}\n  {%- do bq_copy_partitions(tmp_relation, target_relation, partitions, partition_by) -%}\n  -- Clean up the temp table\n  drop table if exists {{ tmp_relation }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.run_query", "macro.dbt_bigquery.bq_copy_partitions"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3059213, "supported_languages": null}, "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql": {"name": "bq_dynamic_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental_strategy/insert_overwrite.sql", "unique_id": "macro.dbt_bigquery.bq_dynamic_insert_overwrite_sql", "macro_sql": "{% macro bq_dynamic_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) %}\n  {%- if copy_partitions is true %}\n     {{ bq_dynamic_copy_partitions_insert_overwrite_sql(tmp_relation, target_relation, sql, unique_key, partition_by, dest_columns, tmp_relation_exists, copy_partitions) }}\n  {% else -%}\n      {% set predicate -%}\n          {{ partition_by.render_wrapped(alias='DBT_INTERNAL_DEST') }} in unnest(dbt_partitions_for_replacement)\n      {%- endset %}\n\n      {%- set source_sql -%}\n      (\n        select\n        {% if partition_by.time_ingestion_partitioning -%}\n        {{ partition_by.insertable_time_partitioning_field() }},\n        {%- endif -%}\n        * from {{ tmp_relation }}\n      )\n      {%- endset -%}\n\n      -- generated script to merge partitions into {{ target_relation }}\n      declare dbt_partitions_for_replacement array<{{ partition_by.data_type_for_partition() }}>;\n\n      {# have we already created the temp table to check for schema changes? #}\n      {% if not tmp_relation_exists %}\n       -- 1. create a temp table with model data\n        {{ bq_create_table_as(partition_by, True, tmp_relation, sql, 'sql') }}\n      {% else %}\n        -- 1. temp table already exists, we used it to check for schema changes\n      {% endif %}\n      {%- set partition_field = partition_by.time_partitioning_field() if partition_by.time_ingestion_partitioning else partition_by.render_wrapped() -%}\n\n      -- 2. define partitions to update\n      set (dbt_partitions_for_replacement) = (\n          select as struct\n              -- IGNORE NULLS: this needs to be aligned to _dbt_max_partition, which ignores null\n              array_agg(distinct {{ partition_field }} IGNORE NULLS)\n          from {{ tmp_relation }}\n      );\n\n      -- 3. run the merge statement\n      {{ get_insert_overwrite_merge_sql(target_relation, source_sql, dest_columns, [predicate]) }};\n\n      -- 4. clean up the temp table\n      drop table if exists {{ tmp_relation }}\n\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bq_dynamic_copy_partitions_insert_overwrite_sql", "macro.dbt_bigquery.bq_create_table_as", "macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3092668, "supported_languages": null}, "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql": {"name": "wrap_with_time_ingestion_partitioning_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql", "macro_sql": "{% macro wrap_with_time_ingestion_partitioning_sql(partition_by, sql, is_nested) %}\n\n  select TIMESTAMP({{ partition_by.field }}) as {{ partition_by.insertable_time_partitioning_field() }}, * EXCEPT({{ partition_by.field }}) from (\n    {{ sql }}\n  ){%- if not is_nested -%};{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.312581, "supported_languages": null}, "macro.dbt_bigquery.get_quoted_with_types_csv": {"name": "get_quoted_with_types_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_quoted_with_types_csv", "macro_sql": "{% macro get_quoted_with_types_csv(columns) %}\n    {% set quoted = [] %}\n    {% for col in columns -%}\n        {%- do quoted.append(adapter.quote(col.name) ~ \" \" ~ col.data_type) -%}\n    {%- endfor %}\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3137789, "supported_languages": null}, "macro.dbt_bigquery.columns_without_partition_fields_csv": {"name": "columns_without_partition_fields_csv", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.columns_without_partition_fields_csv", "macro_sql": "{% macro columns_without_partition_fields_csv(partition_config, columns) -%}\n  {%- set columns_no_partition = partition_config.reject_partition_field_column(columns) -%}\n  {% set columns_names = get_quoted_with_types_csv(columns_no_partition) %}\n  {{ return(columns_names) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.get_quoted_with_types_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3145998, "supported_languages": null}, "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql": {"name": "bq_insert_into_ingestion_time_partitioned_table_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.bq_insert_into_ingestion_time_partitioned_table_sql", "macro_sql": "{% macro bq_insert_into_ingestion_time_partitioned_table_sql(target_relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {{ sql_header if sql_header is not none }}\n  {%- set raw_partition_by = config.get('partition_by', none) -%}\n  {%- set partition_by = adapter.parse_partition_by(raw_partition_by) -%}\n  {% set dest_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set dest_columns_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n  insert into {{ target_relation }} ({{ partition_by.insertable_time_partitioning_field() }}, {{ dest_columns_csv }})\n    {{ wrap_with_time_ingestion_partitioning_sql(partition_by, sql, False) }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt_bigquery.wrap_with_time_ingestion_partitioning_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3167775, "supported_languages": null}, "macro.dbt_bigquery.get_columns_with_types_in_query_sql": {"name": "get_columns_with_types_in_query_sql", "resource_type": "macro", "package_name": "dbt_bigquery", "path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "original_file_path": "macros/materializations/incremental_strategy/time_ingestion_tables.sql", "unique_id": "macro.dbt_bigquery.get_columns_with_types_in_query_sql", "macro_sql": "{% macro get_columns_with_types_in_query_sql(select_sql) %}\n  {% set sql %}\n    {%- set sql_header = config.get('sql_header', none) -%}\n    {{ sql_header if sql_header is not none }}\n    select * from (\n      {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n  {% endset %}\n  {{ return(adapter.get_columns_in_select_sql(sql)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3178968, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3218758, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3223915, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.325304, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3266757, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3285346, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3301222, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3304338, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3364058, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3369188, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3376873, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3385978, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3394246, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3405814, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3411648, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3416846, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.34231, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.34318, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3440228, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3458817, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.346581, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3470597, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.347645, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3518565, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3522694, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3530025, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.353517, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3545327, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3553488, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.355703, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.356447, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3571484, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3578773, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.35846, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.35916, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3613567, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3620152, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3628216, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3635964, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3673208, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3724115, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3728874, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3738234, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3745117, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.375147, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3756843, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      cast(null as {{ col['data_type'] }}) as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.377953, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3792477, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.379906, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3812618, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.382216, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3840227, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3848052, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3889692, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3914502, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {%- if relation.is_table -%}\n            {{- drop_table(relation) -}}\n        {%- elif relation.is_view -%}\n            {{- drop_view(relation) -}}\n        {%- elif relation.is_materialized_view -%}\n            {{- drop_materialized_view(relation) -}}\n        {%- else -%}\n            drop {{ relation.type }} if exists {{ relation }} cascade\n        {%- endif -%}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.drop_table", "macro.dbt.drop_view", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3927922, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n  {{ return(adapter.dispatch('drop_table', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3934772, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3938155, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n  {{ return(adapter.dispatch('drop_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3945136, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.394981, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n  {{ return(adapter.dispatch('drop_materialized_view', 'dbt')(relation)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3955655, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/drop_relation.sql", "original_file_path": "macros/adapters/drop_relation.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3960392, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3974497, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3979259, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3983812, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.398726, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3992476, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.3994966, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4001222, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_bigquery.bigquery__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.400859, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4052358, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4065049, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4075098, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.408091, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.408989, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4098628, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4110255, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.412621, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.413751, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4142556, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4152486, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4165983, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4171002, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4181545, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4241455, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4252229, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4259975, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4266043, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4274201, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.43045, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4354208, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.435885, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.436398, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4384632, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4390776, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4400332, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4412048, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4416392, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header -%}\n  {{ sql_header }}\n  {%- endif -%}\n  {%- if limit is not none -%}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n  {%- else -%}\n  {{ compiled_code }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4430597, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "{% macro get_limit_subquery_sql(sql, limit) %}\n  {{ adapter.dispatch('get_limit_subquery_sql', 'dbt')(sql, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4436517, "supported_languages": null}, "macro.dbt.default__get_limit_subquery_sql": {"name": "default__get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_subquery_sql", "macro_sql": "{% macro default__get_limit_subquery_sql(sql, limit) %}\n    select *\n    from (\n        {{ sql }}\n    ) as model_limit_subq\n    limit {{ limit }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4447217, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4464684, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.44767, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4485064, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4491618, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4554868, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4571402, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4588587, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4647014, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4695792, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4719884, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4726791, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4760797, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.477326, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4781764, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4792466, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4807594, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.481958, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4827378, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4834695, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4839187, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4851165, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.485608, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4876819, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4884403, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4894028, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.490093, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4907384, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4909832, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4919732, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.492396, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4936728, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4941766, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4948328, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4955084, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.495825, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4995127, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.4999917, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5005229, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.50112, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5018466, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5024328, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.503049, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.503694, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5044432, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.504924, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5054133, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5058866, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5064092, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5068326, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5075867, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.50803, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5087254, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5090497, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5097888, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5101368, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5112042, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5122461, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.516467, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5169327, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.517805, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5183814, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5191362, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.519678, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.520528, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5212464, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5220866, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5224676, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5231006, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5233338, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5250354, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5262227, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5272505, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5280156, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5284593, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5294075, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.529833, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5306668, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5309713, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5321255, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5326426, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.534265, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5349686, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5358639, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.536923, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5378668, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5388863, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5398428, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5428839, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5434794, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5439372, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5444696, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.54499, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.545692, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.54603, "supported_languages": null}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5469933, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation }} clone {{ defer_relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.547416, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {{ create_or_replace_clone(target_relation, defer_relation) }}\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5555222, "supported_languages": ["sql"]}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5563776, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5570364, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5647593, "supported_languages": ["sql"]}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5658476, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.566287, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5668006, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.568056, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5726824, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.57497, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5753176, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5770867, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5775666, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5780091, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5815983, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5828266, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5837052, "supported_languages": null}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.59018, "supported_languages": ["sql"]}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.592562, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.593094, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5941548, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5963814, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5977187, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5982893, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.5988214, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6007383, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6013434, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6018975, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.605995, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6065369, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6073163, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6078794, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6088712, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6094792, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6102285, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6111493, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6150186, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6168487, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6186664, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6192913, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6212368, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.623134, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6349645, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.639679, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.640601, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6436586, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6444123, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.646209, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6594083, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6699293, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6739287, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6775908, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6801229, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_as_sql": {"name": "get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "unique_id": "macro.dbt.get_replace_materialized_view_as_sql", "macro_sql": "{% macro get_replace_materialized_view_as_sql(relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {{- log('Applying REPLACE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_replace_materialized_view_as_sql', 'dbt')(relation, sql, existing_relation, backup_relation, intermediate_relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6814425, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_as_sql": {"name": "default__get_replace_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/replace_materialized_view.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_as_sql", "macro_sql": "{% macro default__get_replace_materialized_view_as_sql(relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.681992, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.682912, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/create_materialized_view.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6835558, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6849852, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/alter_materialized_view.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6856396, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6867013, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/refresh_materialized_view.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.687089, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "original_file_path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6886048, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "original_file_path": "macros/materializations/models/materialized_view/get_materialized_view_configuration_changes.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.6890771, "supported_languages": null}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.699656, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7010238, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7020488, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_materialized_view_as_sql(target_relation, sql, existing_relation, backup_relation, intermediate_relation) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_materialized_view_as_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7074218, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7081504, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.709947, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7110596, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7122269, "supported_languages": null}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7133732, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7145073, "supported_languages": null}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.719703, "supported_languages": ["sql"]}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7284462, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7380228, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.740426, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7410698, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7425964, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.74321, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7435849, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.744175, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7445836, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7450504, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7453942, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.746667, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7471797, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7504828, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.758701, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7592125, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7598653, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.762002, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7624674, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7629974, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7675333, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7715333, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7861106, "supported_languages": ["sql"]}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.793212, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.794192, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7948968, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.795246, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7957637, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7962427, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.796847, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.7996612, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8003242, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8011436, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8024912, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8036568, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8047388, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_bigquery.bigquery__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8061638, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.8068383, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.807669, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1698373576.808467, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {"exposure.palpiteiro.draft_api": {"name": "draft_api", "resource_type": "exposure", "package_name": "palpiteiro", "path": "mart/palpiteiro/schema.yml", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "exposure.palpiteiro.draft_api", "fqn": ["palpiteiro", "mart", "palpiteiro", "draft_api"], "type": "application", "owner": {"email": "matheusccouto@gmail.com", "name": "Matheus Couto"}, "description": "Draft best players for current round given a budget.", "label": null, "maturity": null, "meta": {}, "tags": [], "config": {"enabled": true}, "unrendered_config": {}, "url": "https://github.com/matheusccouto/palpiteiro-draft", "depends_on": {"macros": [], "nodes": ["model.palpiteiro.dim_player_last"]}, "refs": [{"name": "dim_player_last", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1698373578.2050169}, "exposure.palpiteiro.points_estimator": {"name": "points_estimator", "resource_type": "exposure", "package_name": "palpiteiro", "path": "mart/palpiteiro/schema.yml", "original_file_path": "models/mart/palpiteiro/schema.yml", "unique_id": "exposure.palpiteiro.points_estimator", "fqn": ["palpiteiro", "mart", "palpiteiro", "points_estimator"], "type": "ml", "owner": {"email": "matheusccouto@gmail.com", "name": "Matheus Couto"}, "description": "Estimate how many points a player will score in the next round.", "label": null, "maturity": null, "meta": {}, "tags": [], "config": {"enabled": true}, "unrendered_config": {}, "url": "https://github.com/matheusccouto/palpiteiro-predict", "depends_on": {"macros": [], "nodes": ["model.palpiteiro.fct_player"]}, "refs": [{"name": "fct_player", "package": null, "version": null}], "sources": [], "metrics": [], "created_at": 1698373578.2081304}}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.palpiteiro.fct_popular": ["model.palpiteiro.stg_destaques_popular"], "model.palpiteiro.fct_scoring": ["model.palpiteiro.stg_atletas_scoring", "model.palpiteiro.stg_pontuados_scoring"], "model.palpiteiro.fct_match": ["model.palpiteiro.stg_partidas_match"], "model.palpiteiro.dim_player": ["model.palpiteiro.stg_atletas_player"], "model.palpiteiro.fct_h2h": ["model.palpiteiro.stg_brasileirao_h2h"], "model.palpiteiro.dim_player_last": ["model.palpiteiro.dim_player", "model.palpiteiro.fct_match", "model.palpiteiro.fct_player", "seed.palpiteiro.dim_club"], "model.palpiteiro.fct_player": ["model.palpiteiro.fct_club", "model.palpiteiro.fct_popular", "model.palpiteiro.fct_scoring"], "model.palpiteiro.fct_club": ["model.palpiteiro.fct_h2h", "model.palpiteiro.fct_match", "model.palpiteiro.fct_scoring", "model.palpiteiro.fct_spi"], "model.palpiteiro.fct_popular_points": ["model.palpiteiro.fct_popular", "model.palpiteiro.fct_scoring"], "model.palpiteiro.fct_prize": ["seed.palpiteiro.contests_metadata", "source.palpiteiro.express.prize"], "model.palpiteiro.fct_best_expected_points": ["model.palpiteiro.fct_scoring"], "model.palpiteiro.fct_best_points": ["model.palpiteiro.fct_scoring"], "model.palpiteiro.fct_norm_points": ["model.palpiteiro.fct_best_expected_points", "model.palpiteiro.fct_popular_points", "model.palpiteiro.fct_prize"], "model.palpiteiro.fct_spi": ["model.palpiteiro.stg_spi_match"], "model.palpiteiro.stg_pontuados_scoring": ["seed.palpiteiro.dim_club", "seed.palpiteiro.dim_position", "source.palpiteiro.cartola.pontuados"], "model.palpiteiro.stg_atletas_scoring": ["seed.palpiteiro.dim_club", "seed.palpiteiro.dim_position", "seed.palpiteiro.dim_status", "source.palpiteiro.cartola.atletas"], "model.palpiteiro.stg_atletas_player": ["source.palpiteiro.cartola.atletas"], "model.palpiteiro.stg_destaques_popular": ["source.palpiteiro.cartola.destaques"], "model.palpiteiro.stg_partidas_match": ["seed.palpiteiro.dim_club", "source.palpiteiro.cartola.partidas"], "model.palpiteiro.stg_brasileirao_h2h": ["seed.palpiteiro.dim_slug", "source.palpiteiro.odds.brasileirao"], "model.palpiteiro.stg_spi_match": ["seed.palpiteiro.dim_slug", "source.palpiteiro.fivethirtyeight.spi"], "seed.palpiteiro.dim_club": [], "seed.palpiteiro.dim_status": [], "seed.palpiteiro.dim_position": [], "seed.palpiteiro.dim_slug": [], "seed.palpiteiro.contests_metadata": [], "seed.palpiteiro.historico": [], "operation.palpiteiro.palpiteiro-on-run-start-0": [], "test.palpiteiro.not_null_fct_scoring_play_id.73da630efd": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.unique_fct_scoring_play_id.5585695148": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_player_id.66f3af1ed3": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_season.cc9239231f": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_round.36934674ec": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_club.b360a85f51": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_position.c63f3f5e61": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach.d776465b77": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_position_id.83f53cb578": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6.9b9eed2849": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected.27a852109b": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_total_points.d95d460ee8": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_offensive_points.1967169a17": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_defensive_points.86a868b152": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_played.64519246d9": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.accepted_values_fct_scoring_played__False__True__False.c05218ffa3": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_price.2a9a107df6": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_scoring_variation.1f5b122271": ["model.palpiteiro.fct_scoring"], "test.palpiteiro.not_null_fct_match_season.cbb23c5718": ["model.palpiteiro.fct_match"], "test.palpiteiro.not_null_fct_match_round.7afdf7facb": ["model.palpiteiro.fct_match"], "test.palpiteiro.not_null_fct_match_timestamp.1c9626940b": ["model.palpiteiro.fct_match"], "test.palpiteiro.accepted_values_fct_match_valid__False__True__False.ca5ce795ec": ["model.palpiteiro.fct_match"], "test.palpiteiro.not_null_fct_match_club.43cda84750": ["model.palpiteiro.fct_match"], "test.palpiteiro.not_null_fct_match_opponent.a9a83d18b2": ["model.palpiteiro.fct_match"], "test.palpiteiro.not_null_fct_match_home.d92a3dcec1": ["model.palpiteiro.fct_match"], "test.palpiteiro.accepted_values_fct_match_home__False__True__False.add19dfa7d": ["model.palpiteiro.fct_match"], "test.palpiteiro.unique_fct_match_season_round_club.0ac618f77c": ["model.palpiteiro.fct_match"], "test.palpiteiro.unique_fct_match_season_round_opponent.b6ed216ce9": ["model.palpiteiro.fct_match"], "test.palpiteiro.unique_dim_player_player_id.292908c131": ["model.palpiteiro.dim_player"], "test.palpiteiro.not_null_dim_player_player_id.fa05bf9435": ["model.palpiteiro.dim_player"], "test.palpiteiro.not_null_dim_player_slug.6d54625657": ["model.palpiteiro.dim_player"], "test.palpiteiro.not_null_dim_player_nickname.9da16ea4db": ["model.palpiteiro.dim_player"], "test.palpiteiro.not_null_dim_player_short_nickname.50305f3ebe": ["model.palpiteiro.dim_player"], "test.palpiteiro.not_null_fct_popular_play_id.c8853223fa": ["model.palpiteiro.fct_popular"], "test.palpiteiro.unique_fct_popular_play_id.c5854a12fd": ["model.palpiteiro.fct_popular"], "test.palpiteiro.not_null_fct_popular_player_id.5c7b73bee3": ["model.palpiteiro.fct_popular"], "test.palpiteiro.not_null_fct_popular_season.279cf1e516": ["model.palpiteiro.fct_popular"], "test.palpiteiro.not_null_fct_popular_round.06286e7268": ["model.palpiteiro.fct_popular"], "test.palpiteiro.not_null_fct_popular_drafts.1aa45caeb7": ["model.palpiteiro.fct_popular"], "test.palpiteiro.not_null_fct_popular_drafts_norm.d6053e8356": ["model.palpiteiro.fct_popular"], "test.palpiteiro.not_null_fct_h2h_season.c57a804223": ["model.palpiteiro.fct_h2h"], "test.palpiteiro.not_null_fct_h2h_timestamp.a4b25de270": ["model.palpiteiro.fct_h2h"], "test.palpiteiro.not_null_fct_h2h_club.8ec5e0bf8f": ["model.palpiteiro.fct_h2h"], "test.palpiteiro.not_null_fct_h2h_opponent.48c36e9477": ["model.palpiteiro.fct_h2h"], "test.palpiteiro.unique_fct_h2h_season_date_timestamp_club.236d162d50": ["model.palpiteiro.fct_h2h"], "test.palpiteiro.not_null_fct_club_club.59b419c957": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_season.6f0ac61ca5": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_round.fb0732dc75": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_timestamp.4701dd0456": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_home.f43d7de87e": ["model.palpiteiro.fct_club"], "test.palpiteiro.accepted_values_fct_club_home__False__True__False.7b22464e1a": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_opponent.e767f1b6d9": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_valid.ca42e75ffe": ["model.palpiteiro.fct_club"], "test.palpiteiro.accepted_values_fct_club_valid__False__True__False.18806e7c8d": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_spi_club.a4e88636ba": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_spi_opponent.7ff3c41878": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_prob_club.07dddbc2b2": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_prob_opponent.3fcf614a5d": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_prob_tie.6aa8da3208": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_proj_score_club.9250f71988": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_proj_score_opponent.247117f603": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_avg_odds_club.36b00345cf": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_avg_odds_opponent.efb6e0c712": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_avg_odds_draw.2685275f7e": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_valid_club_last_19.6bead0ba54": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_valid_opponent_last_19.c37f80df2e": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_valid_club_last_5.75e965b6a6": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_club_valid_opponent_last_5.d6649d4b45": ["model.palpiteiro.fct_club"], "test.palpiteiro.not_null_fct_player_play_id.924b230eae": ["model.palpiteiro.fct_player"], "test.palpiteiro.unique_fct_player_play_id.ae873cf4fb": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_player_id.e7fb38f7d2": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_season.399f9018fe": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_round.c15295fc67": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_timestamp.130555c28a": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_club.3f014a344c": ["model.palpiteiro.fct_player"], "test.palpiteiro.accepted_values_fct_player_valid__False__True__False.dc8ff86a16": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_price_cartola.02bdf32c72": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_price_cartola_express.32e7893827": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_position.3b9ad0825f": ["model.palpiteiro.fct_player"], "test.palpiteiro.accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach.660c885d81": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_position_id.78ffa74f15": ["model.palpiteiro.fct_player"], "test.palpiteiro.accepted_values_fct_player_position_id__False__1__2__3__4__5__6.292d4fd108": ["model.palpiteiro.fct_player"], "test.palpiteiro.accepted_values_fct_player_status__doubt__suspended__injured__null__expected.64e982e9e3": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_spi_club.e941397e61": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_spi_opponent.8a9f6a40a4": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_prob_club.fd0bda9b1a": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_prob_opponent.056cddd319": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_prob_tie.ac153e8370": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_proj_score_club.42054ea31f": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_proj_score_opponent.3fcf06f229": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_valid_club_last_19.bcef3cf407": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_valid_opponent_last_19.ff554939b4": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_valid_club_last_5.7ca96c36c3": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_valid_opponent_last_5.afbfe8369e": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_avg_odds_club.c9efd67540": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_avg_odds_opponent.502530ee1e": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_avg_odds_draw.e36c6852db": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_played_last_19.d3192258e7": ["model.palpiteiro.fct_player"], "test.palpiteiro.not_null_fct_player_played_last_5.188463159c": ["model.palpiteiro.fct_player"], "test.palpiteiro.unique_dim_player_last_id.f60e176f1a": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_id.b75d66c182": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_timestamp.89614bfcf1": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_name.96b4d87b04": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_club.84b8cc80dd": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_club_badge.b620e6d1e0": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_position.96d76a6433": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach.0c8c12982e": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_price_cartola.2a9cd148c3": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_price_cartola_express.77f0e352f7": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_points.08809dfccb": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_dim_player_last_materialized_at.dfa312315b": ["model.palpiteiro.dim_player_last"], "test.palpiteiro.not_null_fct_popular_points_season.6b2b5e927e": ["model.palpiteiro.fct_popular_points"], "test.palpiteiro.not_null_fct_popular_points_round.8c5f367c56": ["model.palpiteiro.fct_popular_points"], "test.palpiteiro.not_null_fct_popular_points_points.c2e836e4f9": ["model.palpiteiro.fct_popular_points"], "test.palpiteiro.not_null_fct_best_points_season.4d912cfd4a": ["model.palpiteiro.fct_best_points"], "test.palpiteiro.not_null_fct_best_points_round.5a3ac1bfff": ["model.palpiteiro.fct_best_points"], "test.palpiteiro.not_null_fct_best_points_points.a85913a38c": ["model.palpiteiro.fct_best_points"], "test.palpiteiro.not_null_fct_best_expected_points_season.439cb23115": ["model.palpiteiro.fct_best_expected_points"], "test.palpiteiro.not_null_fct_best_expected_points_round.9e19354d18": ["model.palpiteiro.fct_best_expected_points"], "test.palpiteiro.not_null_fct_best_expected_points_points.6cec6b47ed": ["model.palpiteiro.fct_best_expected_points"], "test.palpiteiro.unique_fct_prize_rank_id.8808e5bf31": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_rank_id.a914f86ca2": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_season.ad40506eb4": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_round.351efaf4e6": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_contest.dab2d646da": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_points.b11461b735": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_prizes.e2872c7d20": ["model.palpiteiro.fct_prize"], "test.palpiteiro.not_null_fct_prize_rank.359534a391": ["model.palpiteiro.fct_prize"], "test.palpiteiro.unique_fct_norm_points_rank_id.14599c7ace": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_norm_points_rank_id.1474eb70c8": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_norm_points_season.0ce2635941": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_norm_points_round.6b7a10fe0a": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_norm_points_contest.33557b263c": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_norm_points_points_norm.b02603cb93": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_norm_points_prizes.14bcc50613": ["model.palpiteiro.fct_norm_points"], "test.palpiteiro.not_null_fct_spi_season.ab67e5ba7e": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_date.ec0c4025ea": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_club.9e59c5653e": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_opponent.6e8c02a367": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_spi_club.d31ac9e0fc": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_spi_opponent.7697652318": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_prob_club.49caf6f648": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_prob_opponent.3a40ebc85a": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_prob_tie.d05eb39d10": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_importance_club.db196afee4": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_importance_opponent.d54d6fbd8d": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_proj_score_club.31b27c5595": ["model.palpiteiro.fct_spi"], "test.palpiteiro.not_null_fct_spi_proj_score_opponent.f66814ae82": ["model.palpiteiro.fct_spi"], "test.palpiteiro.unique_fct_spi_season_date_club.0ecc449a40": ["model.palpiteiro.fct_spi"], "test.palpiteiro.unique_stg_atletas_scoring_play_id.68d480502e": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_play_id.e69a20408f": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_player_id.2635af2452": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_round.37b28f3a3d": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_season.827f1326a3": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_club.947dc34955": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_position.b786098d29": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.7d0850dfa6": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_position_id.151f0f38c9": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6.6d9589d112": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected.a9580e2695": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_points.b9eb069fa4": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_price.58865b3b64": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_negative_stg_atletas_scoring_price.9a51364748": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.not_null_stg_atletas_scoring_variation.6218e2305a": ["model.palpiteiro.stg_atletas_scoring"], "test.palpiteiro.unique_stg_atletas_player_player_id.356b4a4120": ["model.palpiteiro.stg_atletas_player"], "test.palpiteiro.not_null_stg_atletas_player_player_id.262ab9afc2": ["model.palpiteiro.stg_atletas_player"], "test.palpiteiro.not_null_stg_atletas_player_slug.1de81164f1": ["model.palpiteiro.stg_atletas_player"], "test.palpiteiro.not_null_stg_atletas_player_nickname.caf5413aeb": ["model.palpiteiro.stg_atletas_player"], "test.palpiteiro.not_null_stg_atletas_player_short_nickname.fc9ac1839c": ["model.palpiteiro.stg_atletas_player"], "test.palpiteiro.not_null_stg_partidas_match_match_id.df3ce3391b": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.unique_stg_partidas_match_match_id.a4298c4837": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.not_null_stg_partidas_match_match_slug.08a845651d": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.unique_stg_partidas_match_match_slug.61c97b5261": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.not_null_stg_partidas_match_season.0ec3cd2c58": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.not_null_stg_partidas_match_round.b58a0dbc93": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.not_null_stg_partidas_match_timestamp.4ce4b5987b": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.accepted_values_stg_partidas_match_valid__False__True__False.09bae63cde": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.not_null_stg_partidas_match_home.46af0aee0b": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.not_null_stg_partidas_match_away.81f3a95016": ["model.palpiteiro.stg_partidas_match"], "test.palpiteiro.unique_stg_pontuados_scoring_play_id.b8fc53f536": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_play_id.57d6534261": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_player_id.e1ed5ae787": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_round.5a8d297241": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_season.8dd9e4b9d5": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_club.a08e2b303d": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_position.c0b20e665d": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.f7ed8bc639": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_played.8592091d9b": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.accepted_values_stg_pontuados_scoring_played__False__False__True.de0291663f": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_points.24d9842ea8": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_goal.77e63501b7": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_assist.a8e205d4b6": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_yellow_card.2b58f72328": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_red_card.bdc40eff44": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_missed_shoot.b83127deda": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_on_post_shoot.5e2bf26946": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_saved_shoot.615c5780ff": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_received_foul.88582cca0e": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_received_penalty.fe08226a2e": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_missed_penalty.63542801c0": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_outside.245ab505c7": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_missed_pass.dab4c11b2c": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_tackle.3608d37f04": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_foul.87544aef61": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_penalty.0323bbdb72": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_own_goal.4b1f22ec78": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_allowed_goal.ed8ea2fe08": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_no_goal.ffa3bc4a1e": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_save.54eee6a890": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.not_null_stg_pontuados_scoring_penalty_save.3d202fb7f1": ["model.palpiteiro.stg_pontuados_scoring"], "test.palpiteiro.unique_stg_destaque_popular.sql_play_id.311eb8be34": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_play_id.7ce87dc289": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_player_id.e8aa7e8b4e": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_season.17fb2cf01e": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_round.3bb05e33c7": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_drafts.45851de2e4": [], "test.palpiteiro.not_null_stg_brasileirao_h2h_match_slug.21151dfd18": ["model.palpiteiro.stg_brasileirao_h2h"], "test.palpiteiro.unique_stg_brasileirao_h2h_match_slug.bb3f319ad5": ["model.palpiteiro.stg_brasileirao_h2h"], "test.palpiteiro.not_null_stg_brasileirao_h2h_season.af4e86f9e6": ["model.palpiteiro.stg_brasileirao_h2h"], "test.palpiteiro.not_null_stg_brasileirao_h2h_timestamp.d9f0510fda": ["model.palpiteiro.stg_brasileirao_h2h"], "test.palpiteiro.not_null_stg_brasileirao_h2h_home.c176232638": ["model.palpiteiro.stg_brasileirao_h2h"], "test.palpiteiro.not_null_stg_brasileirao_h2h_away.ebc07d9543": ["model.palpiteiro.stg_brasileirao_h2h"], "test.palpiteiro.not_null_stg_spi_match_match_slug.5fdfa77f23": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.unique_stg_spi_match_match_slug.6463ac59cb": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_season.f3ed990de5": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_date.b3a6c26426": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_league_id.ed7c95199d": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.accepted_values_stg_spi_match_league_id__False__2105.1b56be2b79": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_home.150f369a08": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_away.74a57690a9": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_spi_home.ee13cceea0": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_spi_away.e38b4fd2e6": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_prob_home.9a32d6a47e": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_prob_away.b4b522a72a": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_prob_tie.b0490e24a0": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_proj_score_home.d1a53513f6": ["model.palpiteiro.stg_spi_match"], "test.palpiteiro.not_null_stg_spi_match_proj_score_away.b6178dfe41": ["model.palpiteiro.stg_spi_match"], "source.palpiteiro.cartola.atletas": [], "source.palpiteiro.cartola.partidas": [], "source.palpiteiro.cartola.pontuados": [], "source.palpiteiro.cartola.selecao": [], "source.palpiteiro.cartola.destaques": [], "source.palpiteiro.fivethirtyeight.spi": [], "source.palpiteiro.odds.brasileirao": [], "source.palpiteiro.express.prize": [], "exposure.palpiteiro.draft_api": ["model.palpiteiro.dim_player_last"], "exposure.palpiteiro.points_estimator": ["model.palpiteiro.fct_player"]}, "child_map": {"model.palpiteiro.fct_popular": ["model.palpiteiro.fct_player", "model.palpiteiro.fct_popular_points", "test.palpiteiro.not_null_fct_popular_drafts.1aa45caeb7", "test.palpiteiro.not_null_fct_popular_drafts_norm.d6053e8356", "test.palpiteiro.not_null_fct_popular_play_id.c8853223fa", "test.palpiteiro.not_null_fct_popular_player_id.5c7b73bee3", "test.palpiteiro.not_null_fct_popular_round.06286e7268", "test.palpiteiro.not_null_fct_popular_season.279cf1e516", "test.palpiteiro.unique_fct_popular_play_id.c5854a12fd"], "model.palpiteiro.fct_scoring": ["model.palpiteiro.fct_best_expected_points", "model.palpiteiro.fct_best_points", "model.palpiteiro.fct_club", "model.palpiteiro.fct_player", "model.palpiteiro.fct_popular_points", "test.palpiteiro.accepted_values_fct_scoring_played__False__True__False.c05218ffa3", "test.palpiteiro.accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach.d776465b77", "test.palpiteiro.accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6.9b9eed2849", "test.palpiteiro.accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected.27a852109b", "test.palpiteiro.not_null_fct_scoring_club.b360a85f51", "test.palpiteiro.not_null_fct_scoring_defensive_points.86a868b152", "test.palpiteiro.not_null_fct_scoring_offensive_points.1967169a17", "test.palpiteiro.not_null_fct_scoring_play_id.73da630efd", "test.palpiteiro.not_null_fct_scoring_played.64519246d9", "test.palpiteiro.not_null_fct_scoring_player_id.66f3af1ed3", "test.palpiteiro.not_null_fct_scoring_position.c63f3f5e61", "test.palpiteiro.not_null_fct_scoring_position_id.83f53cb578", "test.palpiteiro.not_null_fct_scoring_price.2a9a107df6", "test.palpiteiro.not_null_fct_scoring_round.36934674ec", "test.palpiteiro.not_null_fct_scoring_season.cc9239231f", "test.palpiteiro.not_null_fct_scoring_total_points.d95d460ee8", "test.palpiteiro.not_null_fct_scoring_variation.1f5b122271", "test.palpiteiro.unique_fct_scoring_play_id.5585695148"], "model.palpiteiro.fct_match": ["model.palpiteiro.dim_player_last", "model.palpiteiro.fct_club", "test.palpiteiro.accepted_values_fct_match_home__False__True__False.add19dfa7d", "test.palpiteiro.accepted_values_fct_match_valid__False__True__False.ca5ce795ec", "test.palpiteiro.not_null_fct_match_club.43cda84750", "test.palpiteiro.not_null_fct_match_home.d92a3dcec1", "test.palpiteiro.not_null_fct_match_opponent.a9a83d18b2", "test.palpiteiro.not_null_fct_match_round.7afdf7facb", "test.palpiteiro.not_null_fct_match_season.cbb23c5718", "test.palpiteiro.not_null_fct_match_timestamp.1c9626940b", "test.palpiteiro.unique_fct_match_season_round_club.0ac618f77c", "test.palpiteiro.unique_fct_match_season_round_opponent.b6ed216ce9"], "model.palpiteiro.dim_player": ["model.palpiteiro.dim_player_last", "test.palpiteiro.not_null_dim_player_nickname.9da16ea4db", "test.palpiteiro.not_null_dim_player_player_id.fa05bf9435", "test.palpiteiro.not_null_dim_player_short_nickname.50305f3ebe", "test.palpiteiro.not_null_dim_player_slug.6d54625657", "test.palpiteiro.unique_dim_player_player_id.292908c131"], "model.palpiteiro.fct_h2h": ["model.palpiteiro.fct_club", "test.palpiteiro.not_null_fct_h2h_club.8ec5e0bf8f", "test.palpiteiro.not_null_fct_h2h_opponent.48c36e9477", "test.palpiteiro.not_null_fct_h2h_season.c57a804223", "test.palpiteiro.not_null_fct_h2h_timestamp.a4b25de270", "test.palpiteiro.unique_fct_h2h_season_date_timestamp_club.236d162d50"], "model.palpiteiro.dim_player_last": ["exposure.palpiteiro.draft_api", "test.palpiteiro.accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach.0c8c12982e", "test.palpiteiro.not_null_dim_player_last_club.84b8cc80dd", "test.palpiteiro.not_null_dim_player_last_club_badge.b620e6d1e0", "test.palpiteiro.not_null_dim_player_last_id.b75d66c182", "test.palpiteiro.not_null_dim_player_last_materialized_at.dfa312315b", "test.palpiteiro.not_null_dim_player_last_name.96b4d87b04", "test.palpiteiro.not_null_dim_player_last_points.08809dfccb", "test.palpiteiro.not_null_dim_player_last_position.96d76a6433", "test.palpiteiro.not_null_dim_player_last_price_cartola.2a9cd148c3", "test.palpiteiro.not_null_dim_player_last_price_cartola_express.77f0e352f7", "test.palpiteiro.not_null_dim_player_last_timestamp.89614bfcf1", "test.palpiteiro.unique_dim_player_last_id.f60e176f1a"], "model.palpiteiro.fct_player": ["exposure.palpiteiro.points_estimator", "model.palpiteiro.dim_player_last", "test.palpiteiro.accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach.660c885d81", "test.palpiteiro.accepted_values_fct_player_position_id__False__1__2__3__4__5__6.292d4fd108", "test.palpiteiro.accepted_values_fct_player_status__doubt__suspended__injured__null__expected.64e982e9e3", "test.palpiteiro.accepted_values_fct_player_valid__False__True__False.dc8ff86a16", "test.palpiteiro.not_null_fct_player_avg_odds_club.c9efd67540", "test.palpiteiro.not_null_fct_player_avg_odds_draw.e36c6852db", "test.palpiteiro.not_null_fct_player_avg_odds_opponent.502530ee1e", "test.palpiteiro.not_null_fct_player_club.3f014a344c", "test.palpiteiro.not_null_fct_player_play_id.924b230eae", "test.palpiteiro.not_null_fct_player_played_last_19.d3192258e7", "test.palpiteiro.not_null_fct_player_played_last_5.188463159c", "test.palpiteiro.not_null_fct_player_player_id.e7fb38f7d2", "test.palpiteiro.not_null_fct_player_position.3b9ad0825f", "test.palpiteiro.not_null_fct_player_position_id.78ffa74f15", "test.palpiteiro.not_null_fct_player_price_cartola.02bdf32c72", "test.palpiteiro.not_null_fct_player_price_cartola_express.32e7893827", "test.palpiteiro.not_null_fct_player_prob_club.fd0bda9b1a", "test.palpiteiro.not_null_fct_player_prob_opponent.056cddd319", "test.palpiteiro.not_null_fct_player_prob_tie.ac153e8370", "test.palpiteiro.not_null_fct_player_proj_score_club.42054ea31f", "test.palpiteiro.not_null_fct_player_proj_score_opponent.3fcf06f229", "test.palpiteiro.not_null_fct_player_round.c15295fc67", "test.palpiteiro.not_null_fct_player_season.399f9018fe", "test.palpiteiro.not_null_fct_player_spi_club.e941397e61", "test.palpiteiro.not_null_fct_player_spi_opponent.8a9f6a40a4", "test.palpiteiro.not_null_fct_player_timestamp.130555c28a", "test.palpiteiro.not_null_fct_player_valid_club_last_19.bcef3cf407", "test.palpiteiro.not_null_fct_player_valid_club_last_5.7ca96c36c3", "test.palpiteiro.not_null_fct_player_valid_opponent_last_19.ff554939b4", "test.palpiteiro.not_null_fct_player_valid_opponent_last_5.afbfe8369e", "test.palpiteiro.unique_fct_player_play_id.ae873cf4fb"], "model.palpiteiro.fct_club": ["model.palpiteiro.fct_player", "test.palpiteiro.accepted_values_fct_club_home__False__True__False.7b22464e1a", "test.palpiteiro.accepted_values_fct_club_valid__False__True__False.18806e7c8d", "test.palpiteiro.not_null_fct_club_avg_odds_club.36b00345cf", "test.palpiteiro.not_null_fct_club_avg_odds_draw.2685275f7e", "test.palpiteiro.not_null_fct_club_avg_odds_opponent.efb6e0c712", "test.palpiteiro.not_null_fct_club_club.59b419c957", "test.palpiteiro.not_null_fct_club_home.f43d7de87e", "test.palpiteiro.not_null_fct_club_opponent.e767f1b6d9", "test.palpiteiro.not_null_fct_club_prob_club.07dddbc2b2", "test.palpiteiro.not_null_fct_club_prob_opponent.3fcf614a5d", "test.palpiteiro.not_null_fct_club_prob_tie.6aa8da3208", "test.palpiteiro.not_null_fct_club_proj_score_club.9250f71988", "test.palpiteiro.not_null_fct_club_proj_score_opponent.247117f603", "test.palpiteiro.not_null_fct_club_round.fb0732dc75", "test.palpiteiro.not_null_fct_club_season.6f0ac61ca5", "test.palpiteiro.not_null_fct_club_spi_club.a4e88636ba", "test.palpiteiro.not_null_fct_club_spi_opponent.7ff3c41878", "test.palpiteiro.not_null_fct_club_timestamp.4701dd0456", "test.palpiteiro.not_null_fct_club_valid.ca42e75ffe", "test.palpiteiro.not_null_fct_club_valid_club_last_19.6bead0ba54", "test.palpiteiro.not_null_fct_club_valid_club_last_5.75e965b6a6", "test.palpiteiro.not_null_fct_club_valid_opponent_last_19.c37f80df2e", "test.palpiteiro.not_null_fct_club_valid_opponent_last_5.d6649d4b45"], "model.palpiteiro.fct_popular_points": ["model.palpiteiro.fct_norm_points", "test.palpiteiro.not_null_fct_popular_points_points.c2e836e4f9", "test.palpiteiro.not_null_fct_popular_points_round.8c5f367c56", "test.palpiteiro.not_null_fct_popular_points_season.6b2b5e927e"], "model.palpiteiro.fct_prize": ["model.palpiteiro.fct_norm_points", "test.palpiteiro.not_null_fct_prize_contest.dab2d646da", "test.palpiteiro.not_null_fct_prize_points.b11461b735", "test.palpiteiro.not_null_fct_prize_prizes.e2872c7d20", "test.palpiteiro.not_null_fct_prize_rank.359534a391", "test.palpiteiro.not_null_fct_prize_rank_id.a914f86ca2", "test.palpiteiro.not_null_fct_prize_round.351efaf4e6", "test.palpiteiro.not_null_fct_prize_season.ad40506eb4", "test.palpiteiro.unique_fct_prize_rank_id.8808e5bf31"], "model.palpiteiro.fct_best_expected_points": ["model.palpiteiro.fct_norm_points", "test.palpiteiro.not_null_fct_best_expected_points_points.6cec6b47ed", "test.palpiteiro.not_null_fct_best_expected_points_round.9e19354d18", "test.palpiteiro.not_null_fct_best_expected_points_season.439cb23115"], "model.palpiteiro.fct_best_points": ["test.palpiteiro.not_null_fct_best_points_points.a85913a38c", "test.palpiteiro.not_null_fct_best_points_round.5a3ac1bfff", "test.palpiteiro.not_null_fct_best_points_season.4d912cfd4a"], "model.palpiteiro.fct_norm_points": ["test.palpiteiro.not_null_fct_norm_points_contest.33557b263c", "test.palpiteiro.not_null_fct_norm_points_points_norm.b02603cb93", "test.palpiteiro.not_null_fct_norm_points_prizes.14bcc50613", "test.palpiteiro.not_null_fct_norm_points_rank_id.1474eb70c8", "test.palpiteiro.not_null_fct_norm_points_round.6b7a10fe0a", "test.palpiteiro.not_null_fct_norm_points_season.0ce2635941", "test.palpiteiro.unique_fct_norm_points_rank_id.14599c7ace"], "model.palpiteiro.fct_spi": ["model.palpiteiro.fct_club", "test.palpiteiro.not_null_fct_spi_club.9e59c5653e", "test.palpiteiro.not_null_fct_spi_date.ec0c4025ea", "test.palpiteiro.not_null_fct_spi_importance_club.db196afee4", "test.palpiteiro.not_null_fct_spi_importance_opponent.d54d6fbd8d", "test.palpiteiro.not_null_fct_spi_opponent.6e8c02a367", "test.palpiteiro.not_null_fct_spi_prob_club.49caf6f648", "test.palpiteiro.not_null_fct_spi_prob_opponent.3a40ebc85a", "test.palpiteiro.not_null_fct_spi_prob_tie.d05eb39d10", "test.palpiteiro.not_null_fct_spi_proj_score_club.31b27c5595", "test.palpiteiro.not_null_fct_spi_proj_score_opponent.f66814ae82", "test.palpiteiro.not_null_fct_spi_season.ab67e5ba7e", "test.palpiteiro.not_null_fct_spi_spi_club.d31ac9e0fc", "test.palpiteiro.not_null_fct_spi_spi_opponent.7697652318", "test.palpiteiro.unique_fct_spi_season_date_club.0ecc449a40"], "model.palpiteiro.stg_pontuados_scoring": ["model.palpiteiro.fct_scoring", "test.palpiteiro.accepted_values_stg_pontuados_scoring_played__False__False__True.de0291663f", "test.palpiteiro.accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.f7ed8bc639", "test.palpiteiro.not_null_stg_pontuados_scoring_allowed_goal.ed8ea2fe08", "test.palpiteiro.not_null_stg_pontuados_scoring_assist.a8e205d4b6", "test.palpiteiro.not_null_stg_pontuados_scoring_club.a08e2b303d", "test.palpiteiro.not_null_stg_pontuados_scoring_foul.87544aef61", "test.palpiteiro.not_null_stg_pontuados_scoring_goal.77e63501b7", "test.palpiteiro.not_null_stg_pontuados_scoring_missed_pass.dab4c11b2c", "test.palpiteiro.not_null_stg_pontuados_scoring_missed_penalty.63542801c0", "test.palpiteiro.not_null_stg_pontuados_scoring_missed_shoot.b83127deda", "test.palpiteiro.not_null_stg_pontuados_scoring_no_goal.ffa3bc4a1e", "test.palpiteiro.not_null_stg_pontuados_scoring_on_post_shoot.5e2bf26946", "test.palpiteiro.not_null_stg_pontuados_scoring_outside.245ab505c7", "test.palpiteiro.not_null_stg_pontuados_scoring_own_goal.4b1f22ec78", "test.palpiteiro.not_null_stg_pontuados_scoring_penalty.0323bbdb72", "test.palpiteiro.not_null_stg_pontuados_scoring_penalty_save.3d202fb7f1", "test.palpiteiro.not_null_stg_pontuados_scoring_play_id.57d6534261", "test.palpiteiro.not_null_stg_pontuados_scoring_played.8592091d9b", "test.palpiteiro.not_null_stg_pontuados_scoring_player_id.e1ed5ae787", "test.palpiteiro.not_null_stg_pontuados_scoring_points.24d9842ea8", "test.palpiteiro.not_null_stg_pontuados_scoring_position.c0b20e665d", "test.palpiteiro.not_null_stg_pontuados_scoring_received_foul.88582cca0e", "test.palpiteiro.not_null_stg_pontuados_scoring_received_penalty.fe08226a2e", "test.palpiteiro.not_null_stg_pontuados_scoring_red_card.bdc40eff44", "test.palpiteiro.not_null_stg_pontuados_scoring_round.5a8d297241", "test.palpiteiro.not_null_stg_pontuados_scoring_save.54eee6a890", "test.palpiteiro.not_null_stg_pontuados_scoring_saved_shoot.615c5780ff", "test.palpiteiro.not_null_stg_pontuados_scoring_season.8dd9e4b9d5", "test.palpiteiro.not_null_stg_pontuados_scoring_tackle.3608d37f04", "test.palpiteiro.not_null_stg_pontuados_scoring_yellow_card.2b58f72328", "test.palpiteiro.unique_stg_pontuados_scoring_play_id.b8fc53f536"], "model.palpiteiro.stg_atletas_scoring": ["model.palpiteiro.fct_scoring", "test.palpiteiro.accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.7d0850dfa6", "test.palpiteiro.accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6.6d9589d112", "test.palpiteiro.accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected.a9580e2695", "test.palpiteiro.not_negative_stg_atletas_scoring_price.9a51364748", "test.palpiteiro.not_null_stg_atletas_scoring_club.947dc34955", "test.palpiteiro.not_null_stg_atletas_scoring_play_id.e69a20408f", "test.palpiteiro.not_null_stg_atletas_scoring_player_id.2635af2452", "test.palpiteiro.not_null_stg_atletas_scoring_points.b9eb069fa4", "test.palpiteiro.not_null_stg_atletas_scoring_position.b786098d29", "test.palpiteiro.not_null_stg_atletas_scoring_position_id.151f0f38c9", "test.palpiteiro.not_null_stg_atletas_scoring_price.58865b3b64", "test.palpiteiro.not_null_stg_atletas_scoring_round.37b28f3a3d", "test.palpiteiro.not_null_stg_atletas_scoring_season.827f1326a3", "test.palpiteiro.not_null_stg_atletas_scoring_variation.6218e2305a", "test.palpiteiro.unique_stg_atletas_scoring_play_id.68d480502e"], "model.palpiteiro.stg_atletas_player": ["model.palpiteiro.dim_player", "test.palpiteiro.not_null_stg_atletas_player_nickname.caf5413aeb", "test.palpiteiro.not_null_stg_atletas_player_player_id.262ab9afc2", "test.palpiteiro.not_null_stg_atletas_player_short_nickname.fc9ac1839c", "test.palpiteiro.not_null_stg_atletas_player_slug.1de81164f1", "test.palpiteiro.unique_stg_atletas_player_player_id.356b4a4120"], "model.palpiteiro.stg_destaques_popular": ["model.palpiteiro.fct_popular"], "model.palpiteiro.stg_partidas_match": ["model.palpiteiro.fct_match", "test.palpiteiro.accepted_values_stg_partidas_match_valid__False__True__False.09bae63cde", "test.palpiteiro.not_null_stg_partidas_match_away.81f3a95016", "test.palpiteiro.not_null_stg_partidas_match_home.46af0aee0b", "test.palpiteiro.not_null_stg_partidas_match_match_id.df3ce3391b", "test.palpiteiro.not_null_stg_partidas_match_match_slug.08a845651d", "test.palpiteiro.not_null_stg_partidas_match_round.b58a0dbc93", "test.palpiteiro.not_null_stg_partidas_match_season.0ec3cd2c58", "test.palpiteiro.not_null_stg_partidas_match_timestamp.4ce4b5987b", "test.palpiteiro.unique_stg_partidas_match_match_id.a4298c4837", "test.palpiteiro.unique_stg_partidas_match_match_slug.61c97b5261"], "model.palpiteiro.stg_brasileirao_h2h": ["model.palpiteiro.fct_h2h", "test.palpiteiro.not_null_stg_brasileirao_h2h_away.ebc07d9543", "test.palpiteiro.not_null_stg_brasileirao_h2h_home.c176232638", "test.palpiteiro.not_null_stg_brasileirao_h2h_match_slug.21151dfd18", "test.palpiteiro.not_null_stg_brasileirao_h2h_season.af4e86f9e6", "test.palpiteiro.not_null_stg_brasileirao_h2h_timestamp.d9f0510fda", "test.palpiteiro.unique_stg_brasileirao_h2h_match_slug.bb3f319ad5"], "model.palpiteiro.stg_spi_match": ["model.palpiteiro.fct_spi", "test.palpiteiro.accepted_values_stg_spi_match_league_id__False__2105.1b56be2b79", "test.palpiteiro.not_null_stg_spi_match_away.74a57690a9", "test.palpiteiro.not_null_stg_spi_match_date.b3a6c26426", "test.palpiteiro.not_null_stg_spi_match_home.150f369a08", "test.palpiteiro.not_null_stg_spi_match_league_id.ed7c95199d", "test.palpiteiro.not_null_stg_spi_match_match_slug.5fdfa77f23", "test.palpiteiro.not_null_stg_spi_match_prob_away.b4b522a72a", "test.palpiteiro.not_null_stg_spi_match_prob_home.9a32d6a47e", "test.palpiteiro.not_null_stg_spi_match_prob_tie.b0490e24a0", "test.palpiteiro.not_null_stg_spi_match_proj_score_away.b6178dfe41", "test.palpiteiro.not_null_stg_spi_match_proj_score_home.d1a53513f6", "test.palpiteiro.not_null_stg_spi_match_season.f3ed990de5", "test.palpiteiro.not_null_stg_spi_match_spi_away.e38b4fd2e6", "test.palpiteiro.not_null_stg_spi_match_spi_home.ee13cceea0", "test.palpiteiro.unique_stg_spi_match_match_slug.6463ac59cb"], "seed.palpiteiro.dim_club": ["model.palpiteiro.dim_player_last", "model.palpiteiro.stg_atletas_scoring", "model.palpiteiro.stg_partidas_match", "model.palpiteiro.stg_pontuados_scoring"], "seed.palpiteiro.dim_status": ["model.palpiteiro.stg_atletas_scoring"], "seed.palpiteiro.dim_position": ["model.palpiteiro.stg_atletas_scoring", "model.palpiteiro.stg_pontuados_scoring"], "seed.palpiteiro.dim_slug": ["model.palpiteiro.stg_brasileirao_h2h", "model.palpiteiro.stg_spi_match"], "seed.palpiteiro.contests_metadata": ["model.palpiteiro.fct_prize"], "seed.palpiteiro.historico": [], "operation.palpiteiro.palpiteiro-on-run-start-0": [], "test.palpiteiro.not_null_fct_scoring_play_id.73da630efd": [], "test.palpiteiro.unique_fct_scoring_play_id.5585695148": [], "test.palpiteiro.not_null_fct_scoring_player_id.66f3af1ed3": [], "test.palpiteiro.not_null_fct_scoring_season.cc9239231f": [], "test.palpiteiro.not_null_fct_scoring_round.36934674ec": [], "test.palpiteiro.not_null_fct_scoring_club.b360a85f51": [], "test.palpiteiro.not_null_fct_scoring_position.c63f3f5e61": [], "test.palpiteiro.accepted_values_fct_scoring_position__goalkeeper__fullback__defender__midfielder__forward__coach.d776465b77": [], "test.palpiteiro.not_null_fct_scoring_position_id.83f53cb578": [], "test.palpiteiro.accepted_values_fct_scoring_position_id__False__1__2__3__4__5__6.9b9eed2849": [], "test.palpiteiro.accepted_values_fct_scoring_status__doubt__suspended__injured__null__expected.27a852109b": [], "test.palpiteiro.not_null_fct_scoring_total_points.d95d460ee8": [], "test.palpiteiro.not_null_fct_scoring_offensive_points.1967169a17": [], "test.palpiteiro.not_null_fct_scoring_defensive_points.86a868b152": [], "test.palpiteiro.not_null_fct_scoring_played.64519246d9": [], "test.palpiteiro.accepted_values_fct_scoring_played__False__True__False.c05218ffa3": [], "test.palpiteiro.not_null_fct_scoring_price.2a9a107df6": [], "test.palpiteiro.not_null_fct_scoring_variation.1f5b122271": [], "test.palpiteiro.not_null_fct_match_season.cbb23c5718": [], "test.palpiteiro.not_null_fct_match_round.7afdf7facb": [], "test.palpiteiro.not_null_fct_match_timestamp.1c9626940b": [], "test.palpiteiro.accepted_values_fct_match_valid__False__True__False.ca5ce795ec": [], "test.palpiteiro.not_null_fct_match_club.43cda84750": [], "test.palpiteiro.not_null_fct_match_opponent.a9a83d18b2": [], "test.palpiteiro.not_null_fct_match_home.d92a3dcec1": [], "test.palpiteiro.accepted_values_fct_match_home__False__True__False.add19dfa7d": [], "test.palpiteiro.unique_fct_match_season_round_club.0ac618f77c": [], "test.palpiteiro.unique_fct_match_season_round_opponent.b6ed216ce9": [], "test.palpiteiro.unique_dim_player_player_id.292908c131": [], "test.palpiteiro.not_null_dim_player_player_id.fa05bf9435": [], "test.palpiteiro.not_null_dim_player_slug.6d54625657": [], "test.palpiteiro.not_null_dim_player_nickname.9da16ea4db": [], "test.palpiteiro.not_null_dim_player_short_nickname.50305f3ebe": [], "test.palpiteiro.not_null_fct_popular_play_id.c8853223fa": [], "test.palpiteiro.unique_fct_popular_play_id.c5854a12fd": [], "test.palpiteiro.not_null_fct_popular_player_id.5c7b73bee3": [], "test.palpiteiro.not_null_fct_popular_season.279cf1e516": [], "test.palpiteiro.not_null_fct_popular_round.06286e7268": [], "test.palpiteiro.not_null_fct_popular_drafts.1aa45caeb7": [], "test.palpiteiro.not_null_fct_popular_drafts_norm.d6053e8356": [], "test.palpiteiro.not_null_fct_h2h_season.c57a804223": [], "test.palpiteiro.not_null_fct_h2h_timestamp.a4b25de270": [], "test.palpiteiro.not_null_fct_h2h_club.8ec5e0bf8f": [], "test.palpiteiro.not_null_fct_h2h_opponent.48c36e9477": [], "test.palpiteiro.unique_fct_h2h_season_date_timestamp_club.236d162d50": [], "test.palpiteiro.not_null_fct_club_club.59b419c957": [], "test.palpiteiro.not_null_fct_club_season.6f0ac61ca5": [], "test.palpiteiro.not_null_fct_club_round.fb0732dc75": [], "test.palpiteiro.not_null_fct_club_timestamp.4701dd0456": [], "test.palpiteiro.not_null_fct_club_home.f43d7de87e": [], "test.palpiteiro.accepted_values_fct_club_home__False__True__False.7b22464e1a": [], "test.palpiteiro.not_null_fct_club_opponent.e767f1b6d9": [], "test.palpiteiro.not_null_fct_club_valid.ca42e75ffe": [], "test.palpiteiro.accepted_values_fct_club_valid__False__True__False.18806e7c8d": [], "test.palpiteiro.not_null_fct_club_spi_club.a4e88636ba": [], "test.palpiteiro.not_null_fct_club_spi_opponent.7ff3c41878": [], "test.palpiteiro.not_null_fct_club_prob_club.07dddbc2b2": [], "test.palpiteiro.not_null_fct_club_prob_opponent.3fcf614a5d": [], "test.palpiteiro.not_null_fct_club_prob_tie.6aa8da3208": [], "test.palpiteiro.not_null_fct_club_proj_score_club.9250f71988": [], "test.palpiteiro.not_null_fct_club_proj_score_opponent.247117f603": [], "test.palpiteiro.not_null_fct_club_avg_odds_club.36b00345cf": [], "test.palpiteiro.not_null_fct_club_avg_odds_opponent.efb6e0c712": [], "test.palpiteiro.not_null_fct_club_avg_odds_draw.2685275f7e": [], "test.palpiteiro.not_null_fct_club_valid_club_last_19.6bead0ba54": [], "test.palpiteiro.not_null_fct_club_valid_opponent_last_19.c37f80df2e": [], "test.palpiteiro.not_null_fct_club_valid_club_last_5.75e965b6a6": [], "test.palpiteiro.not_null_fct_club_valid_opponent_last_5.d6649d4b45": [], "test.palpiteiro.not_null_fct_player_play_id.924b230eae": [], "test.palpiteiro.unique_fct_player_play_id.ae873cf4fb": [], "test.palpiteiro.not_null_fct_player_player_id.e7fb38f7d2": [], "test.palpiteiro.not_null_fct_player_season.399f9018fe": [], "test.palpiteiro.not_null_fct_player_round.c15295fc67": [], "test.palpiteiro.not_null_fct_player_timestamp.130555c28a": [], "test.palpiteiro.not_null_fct_player_club.3f014a344c": [], "test.palpiteiro.accepted_values_fct_player_valid__False__True__False.dc8ff86a16": [], "test.palpiteiro.not_null_fct_player_price_cartola.02bdf32c72": [], "test.palpiteiro.not_null_fct_player_price_cartola_express.32e7893827": [], "test.palpiteiro.not_null_fct_player_position.3b9ad0825f": [], "test.palpiteiro.accepted_values_fct_player_position__goalkeeper__fullback__defender__midfielder__forward__coach.660c885d81": [], "test.palpiteiro.not_null_fct_player_position_id.78ffa74f15": [], "test.palpiteiro.accepted_values_fct_player_position_id__False__1__2__3__4__5__6.292d4fd108": [], "test.palpiteiro.accepted_values_fct_player_status__doubt__suspended__injured__null__expected.64e982e9e3": [], "test.palpiteiro.not_null_fct_player_spi_club.e941397e61": [], "test.palpiteiro.not_null_fct_player_spi_opponent.8a9f6a40a4": [], "test.palpiteiro.not_null_fct_player_prob_club.fd0bda9b1a": [], "test.palpiteiro.not_null_fct_player_prob_opponent.056cddd319": [], "test.palpiteiro.not_null_fct_player_prob_tie.ac153e8370": [], "test.palpiteiro.not_null_fct_player_proj_score_club.42054ea31f": [], "test.palpiteiro.not_null_fct_player_proj_score_opponent.3fcf06f229": [], "test.palpiteiro.not_null_fct_player_valid_club_last_19.bcef3cf407": [], "test.palpiteiro.not_null_fct_player_valid_opponent_last_19.ff554939b4": [], "test.palpiteiro.not_null_fct_player_valid_club_last_5.7ca96c36c3": [], "test.palpiteiro.not_null_fct_player_valid_opponent_last_5.afbfe8369e": [], "test.palpiteiro.not_null_fct_player_avg_odds_club.c9efd67540": [], "test.palpiteiro.not_null_fct_player_avg_odds_opponent.502530ee1e": [], "test.palpiteiro.not_null_fct_player_avg_odds_draw.e36c6852db": [], "test.palpiteiro.not_null_fct_player_played_last_19.d3192258e7": [], "test.palpiteiro.not_null_fct_player_played_last_5.188463159c": [], "test.palpiteiro.unique_dim_player_last_id.f60e176f1a": [], "test.palpiteiro.not_null_dim_player_last_id.b75d66c182": [], "test.palpiteiro.not_null_dim_player_last_timestamp.89614bfcf1": [], "test.palpiteiro.not_null_dim_player_last_name.96b4d87b04": [], "test.palpiteiro.not_null_dim_player_last_club.84b8cc80dd": [], "test.palpiteiro.not_null_dim_player_last_club_badge.b620e6d1e0": [], "test.palpiteiro.not_null_dim_player_last_position.96d76a6433": [], "test.palpiteiro.accepted_values_dim_player_last_position__goalkeeper__fullback__defender__midfielder__forward__coach.0c8c12982e": [], "test.palpiteiro.not_null_dim_player_last_price_cartola.2a9cd148c3": [], "test.palpiteiro.not_null_dim_player_last_price_cartola_express.77f0e352f7": [], "test.palpiteiro.not_null_dim_player_last_points.08809dfccb": [], "test.palpiteiro.not_null_dim_player_last_materialized_at.dfa312315b": [], "test.palpiteiro.not_null_fct_popular_points_season.6b2b5e927e": [], "test.palpiteiro.not_null_fct_popular_points_round.8c5f367c56": [], "test.palpiteiro.not_null_fct_popular_points_points.c2e836e4f9": [], "test.palpiteiro.not_null_fct_best_points_season.4d912cfd4a": [], "test.palpiteiro.not_null_fct_best_points_round.5a3ac1bfff": [], "test.palpiteiro.not_null_fct_best_points_points.a85913a38c": [], "test.palpiteiro.not_null_fct_best_expected_points_season.439cb23115": [], "test.palpiteiro.not_null_fct_best_expected_points_round.9e19354d18": [], "test.palpiteiro.not_null_fct_best_expected_points_points.6cec6b47ed": [], "test.palpiteiro.unique_fct_prize_rank_id.8808e5bf31": [], "test.palpiteiro.not_null_fct_prize_rank_id.a914f86ca2": [], "test.palpiteiro.not_null_fct_prize_season.ad40506eb4": [], "test.palpiteiro.not_null_fct_prize_round.351efaf4e6": [], "test.palpiteiro.not_null_fct_prize_contest.dab2d646da": [], "test.palpiteiro.not_null_fct_prize_points.b11461b735": [], "test.palpiteiro.not_null_fct_prize_prizes.e2872c7d20": [], "test.palpiteiro.not_null_fct_prize_rank.359534a391": [], "test.palpiteiro.unique_fct_norm_points_rank_id.14599c7ace": [], "test.palpiteiro.not_null_fct_norm_points_rank_id.1474eb70c8": [], "test.palpiteiro.not_null_fct_norm_points_season.0ce2635941": [], "test.palpiteiro.not_null_fct_norm_points_round.6b7a10fe0a": [], "test.palpiteiro.not_null_fct_norm_points_contest.33557b263c": [], "test.palpiteiro.not_null_fct_norm_points_points_norm.b02603cb93": [], "test.palpiteiro.not_null_fct_norm_points_prizes.14bcc50613": [], "test.palpiteiro.not_null_fct_spi_season.ab67e5ba7e": [], "test.palpiteiro.not_null_fct_spi_date.ec0c4025ea": [], "test.palpiteiro.not_null_fct_spi_club.9e59c5653e": [], "test.palpiteiro.not_null_fct_spi_opponent.6e8c02a367": [], "test.palpiteiro.not_null_fct_spi_spi_club.d31ac9e0fc": [], "test.palpiteiro.not_null_fct_spi_spi_opponent.7697652318": [], "test.palpiteiro.not_null_fct_spi_prob_club.49caf6f648": [], "test.palpiteiro.not_null_fct_spi_prob_opponent.3a40ebc85a": [], "test.palpiteiro.not_null_fct_spi_prob_tie.d05eb39d10": [], "test.palpiteiro.not_null_fct_spi_importance_club.db196afee4": [], "test.palpiteiro.not_null_fct_spi_importance_opponent.d54d6fbd8d": [], "test.palpiteiro.not_null_fct_spi_proj_score_club.31b27c5595": [], "test.palpiteiro.not_null_fct_spi_proj_score_opponent.f66814ae82": [], "test.palpiteiro.unique_fct_spi_season_date_club.0ecc449a40": [], "test.palpiteiro.unique_stg_atletas_scoring_play_id.68d480502e": [], "test.palpiteiro.not_null_stg_atletas_scoring_play_id.e69a20408f": [], "test.palpiteiro.not_null_stg_atletas_scoring_player_id.2635af2452": [], "test.palpiteiro.not_null_stg_atletas_scoring_round.37b28f3a3d": [], "test.palpiteiro.not_null_stg_atletas_scoring_season.827f1326a3": [], "test.palpiteiro.not_null_stg_atletas_scoring_club.947dc34955": [], "test.palpiteiro.not_null_stg_atletas_scoring_position.b786098d29": [], "test.palpiteiro.accepted_values_stg_atletas_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.7d0850dfa6": [], "test.palpiteiro.not_null_stg_atletas_scoring_position_id.151f0f38c9": [], "test.palpiteiro.accepted_values_stg_atletas_scoring_position_id__False__1__2__3__4__5__6.6d9589d112": [], "test.palpiteiro.accepted_values_stg_atletas_scoring_status__True__doubt__suspended__injured__null__expected.a9580e2695": [], "test.palpiteiro.not_null_stg_atletas_scoring_points.b9eb069fa4": [], "test.palpiteiro.not_null_stg_atletas_scoring_price.58865b3b64": [], "test.palpiteiro.not_negative_stg_atletas_scoring_price.9a51364748": [], "test.palpiteiro.not_null_stg_atletas_scoring_variation.6218e2305a": [], "test.palpiteiro.unique_stg_atletas_player_player_id.356b4a4120": [], "test.palpiteiro.not_null_stg_atletas_player_player_id.262ab9afc2": [], "test.palpiteiro.not_null_stg_atletas_player_slug.1de81164f1": [], "test.palpiteiro.not_null_stg_atletas_player_nickname.caf5413aeb": [], "test.palpiteiro.not_null_stg_atletas_player_short_nickname.fc9ac1839c": [], "test.palpiteiro.not_null_stg_partidas_match_match_id.df3ce3391b": [], "test.palpiteiro.unique_stg_partidas_match_match_id.a4298c4837": [], "test.palpiteiro.not_null_stg_partidas_match_match_slug.08a845651d": [], "test.palpiteiro.unique_stg_partidas_match_match_slug.61c97b5261": [], "test.palpiteiro.not_null_stg_partidas_match_season.0ec3cd2c58": [], "test.palpiteiro.not_null_stg_partidas_match_round.b58a0dbc93": [], "test.palpiteiro.not_null_stg_partidas_match_timestamp.4ce4b5987b": [], "test.palpiteiro.accepted_values_stg_partidas_match_valid__False__True__False.09bae63cde": [], "test.palpiteiro.not_null_stg_partidas_match_home.46af0aee0b": [], "test.palpiteiro.not_null_stg_partidas_match_away.81f3a95016": [], "test.palpiteiro.unique_stg_pontuados_scoring_play_id.b8fc53f536": [], "test.palpiteiro.not_null_stg_pontuados_scoring_play_id.57d6534261": [], "test.palpiteiro.not_null_stg_pontuados_scoring_player_id.e1ed5ae787": [], "test.palpiteiro.not_null_stg_pontuados_scoring_round.5a8d297241": [], "test.palpiteiro.not_null_stg_pontuados_scoring_season.8dd9e4b9d5": [], "test.palpiteiro.not_null_stg_pontuados_scoring_club.a08e2b303d": [], "test.palpiteiro.not_null_stg_pontuados_scoring_position.c0b20e665d": [], "test.palpiteiro.accepted_values_stg_pontuados_scoring_position__True__goalkeeper__defender__fullback__midfielder__forward__coach.f7ed8bc639": [], "test.palpiteiro.not_null_stg_pontuados_scoring_played.8592091d9b": [], "test.palpiteiro.accepted_values_stg_pontuados_scoring_played__False__False__True.de0291663f": [], "test.palpiteiro.not_null_stg_pontuados_scoring_points.24d9842ea8": [], "test.palpiteiro.not_null_stg_pontuados_scoring_goal.77e63501b7": [], "test.palpiteiro.not_null_stg_pontuados_scoring_assist.a8e205d4b6": [], "test.palpiteiro.not_null_stg_pontuados_scoring_yellow_card.2b58f72328": [], "test.palpiteiro.not_null_stg_pontuados_scoring_red_card.bdc40eff44": [], "test.palpiteiro.not_null_stg_pontuados_scoring_missed_shoot.b83127deda": [], "test.palpiteiro.not_null_stg_pontuados_scoring_on_post_shoot.5e2bf26946": [], "test.palpiteiro.not_null_stg_pontuados_scoring_saved_shoot.615c5780ff": [], "test.palpiteiro.not_null_stg_pontuados_scoring_received_foul.88582cca0e": [], "test.palpiteiro.not_null_stg_pontuados_scoring_received_penalty.fe08226a2e": [], "test.palpiteiro.not_null_stg_pontuados_scoring_missed_penalty.63542801c0": [], "test.palpiteiro.not_null_stg_pontuados_scoring_outside.245ab505c7": [], "test.palpiteiro.not_null_stg_pontuados_scoring_missed_pass.dab4c11b2c": [], "test.palpiteiro.not_null_stg_pontuados_scoring_tackle.3608d37f04": [], "test.palpiteiro.not_null_stg_pontuados_scoring_foul.87544aef61": [], "test.palpiteiro.not_null_stg_pontuados_scoring_penalty.0323bbdb72": [], "test.palpiteiro.not_null_stg_pontuados_scoring_own_goal.4b1f22ec78": [], "test.palpiteiro.not_null_stg_pontuados_scoring_allowed_goal.ed8ea2fe08": [], "test.palpiteiro.not_null_stg_pontuados_scoring_no_goal.ffa3bc4a1e": [], "test.palpiteiro.not_null_stg_pontuados_scoring_save.54eee6a890": [], "test.palpiteiro.not_null_stg_pontuados_scoring_penalty_save.3d202fb7f1": [], "test.palpiteiro.unique_stg_destaque_popular.sql_play_id.311eb8be34": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_play_id.7ce87dc289": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_player_id.e8aa7e8b4e": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_season.17fb2cf01e": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_round.3bb05e33c7": [], "test.palpiteiro.not_null_stg_destaque_popular.sql_drafts.45851de2e4": [], "test.palpiteiro.not_null_stg_brasileirao_h2h_match_slug.21151dfd18": [], "test.palpiteiro.unique_stg_brasileirao_h2h_match_slug.bb3f319ad5": [], "test.palpiteiro.not_null_stg_brasileirao_h2h_season.af4e86f9e6": [], "test.palpiteiro.not_null_stg_brasileirao_h2h_timestamp.d9f0510fda": [], "test.palpiteiro.not_null_stg_brasileirao_h2h_home.c176232638": [], "test.palpiteiro.not_null_stg_brasileirao_h2h_away.ebc07d9543": [], "test.palpiteiro.not_null_stg_spi_match_match_slug.5fdfa77f23": [], "test.palpiteiro.unique_stg_spi_match_match_slug.6463ac59cb": [], "test.palpiteiro.not_null_stg_spi_match_season.f3ed990de5": [], "test.palpiteiro.not_null_stg_spi_match_date.b3a6c26426": [], "test.palpiteiro.not_null_stg_spi_match_league_id.ed7c95199d": [], "test.palpiteiro.accepted_values_stg_spi_match_league_id__False__2105.1b56be2b79": [], "test.palpiteiro.not_null_stg_spi_match_home.150f369a08": [], "test.palpiteiro.not_null_stg_spi_match_away.74a57690a9": [], "test.palpiteiro.not_null_stg_spi_match_spi_home.ee13cceea0": [], "test.palpiteiro.not_null_stg_spi_match_spi_away.e38b4fd2e6": [], "test.palpiteiro.not_null_stg_spi_match_prob_home.9a32d6a47e": [], "test.palpiteiro.not_null_stg_spi_match_prob_away.b4b522a72a": [], "test.palpiteiro.not_null_stg_spi_match_prob_tie.b0490e24a0": [], "test.palpiteiro.not_null_stg_spi_match_proj_score_home.d1a53513f6": [], "test.palpiteiro.not_null_stg_spi_match_proj_score_away.b6178dfe41": [], "source.palpiteiro.cartola.atletas": ["model.palpiteiro.stg_atletas_player", "model.palpiteiro.stg_atletas_scoring"], "source.palpiteiro.cartola.partidas": ["model.palpiteiro.stg_partidas_match"], "source.palpiteiro.cartola.pontuados": ["model.palpiteiro.stg_pontuados_scoring"], "source.palpiteiro.cartola.selecao": [], "source.palpiteiro.cartola.destaques": ["model.palpiteiro.stg_destaques_popular"], "source.palpiteiro.fivethirtyeight.spi": ["model.palpiteiro.stg_spi_match"], "source.palpiteiro.odds.brasileirao": ["model.palpiteiro.stg_brasileirao_h2h"], "source.palpiteiro.express.prize": ["model.palpiteiro.fct_prize"], "exposure.palpiteiro.draft_api": [], "exposure.palpiteiro.points_estimator": []}, "group_map": {}, "semantic_models": {}}